! ================================================================================
!                                       IQXML
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================

 SECTION('Modules')
   MODULE('iQ-XML Parser Functions')
       XML:LoadFromString(*CSTRING,<BYTE>,<BYTE>,<BYTE>),SHORT,DLL(DLL_MODE)
       XML:DebugQueue(<String>),DLL(DLL_MODE)
       XML:LoadQueue(*QUEUE,<BYTE>,<BYTE>,<BYTE>,<LONG>,<BYTE>),LONG,DLL(DLL_MODE)
       XML:Free(),DLL(DLL_MODE)
       XML:LoadFromFile(STRING,<BYTE>,<BYTE>,<LONG>,<BYTE>),SHORT,DLL(DLL_MODE)
       XMLL:FindWindow(),DLL(DLL_MODE)
       XML:FindNextNode(STRING,<STRING>,<STRING>,<STRING>,<STRING>,<BYTE>),SHORT,DLL(DLL_MODE)
       XML:ReadNextRecord(*queue,*cstring),short,DLL(DLL_MODE)
       XML:ReadPreviousRecord(*QUEUE,*CSTRING),SHORT,DLL(DLL_MODE)
       XML:ReadCurrentRecord(*queue,*cstring),short,DLL(DLL_MODE)
       XML:GotoSibling(),SHORT,DLL(DLL_MODE)
       XML:GotoTop(),DLL(DLL_MODE)
       XML:GetPointer(),LONG,DLL(DLL_MODE)
       XML:SetPointer(LONG),SHORT,DLL(DLL_MODE)
       XML:SaveState(),SHORT,DLL(DLL_MODE)
       XML:RestoreState(SHORT),SHORT,DLL(DLL_MODE)
       XML:FreeState(SHORT),DLL(DLL_MODE)
       XMLL:FindWindow2(),DLL(DLL_MODE)
       XML:PrimaryKeyCascade(STRING,<SHORT>),DLL(DLL_MODE)
       XML:PrimaryKeyClear(<STRING>),DLL(DLL_MODE)
       XML:GetError(<SHORT>),STRING,DLL(DLL_MODE)
       XML:PrimaryFieldCascade(STRING,STRING),DLL(DLL_MODE)
       XML:GotoParent(),SHORT,DLL(DLL_MODE)
       XML:GotoChild(),SHORT,DLL(DLL_MODE)
       XML:PrimaryFieldClear(),DLL(DLL_MODE)
       XML:AutoRootSet(),DLL(DLL_MODE)
       XML:AutoRootClear(),DLL(DLL_MODE)
       XML:FindNextContent(STRING,BYTE,BYTE),SHORT,DLL(DLL_MODE)
       XML:QualifyFieldSet(STRING,<BYTE>),DLL(DLL_MODE)
       XML:QualifyFieldClear(<STRING>),DLL(DLL_MODE)
       XML:AttributeFieldSet(STRING,<BYTE>,<STRING>),DLL(DLL_MODE)
       XML:AttributeFieldClear(<STRING>),DLL(DLL_MODE)
       XML:SetProgressWindow(LONG,<STRING>),DLL(DLL_MODE)
       XML:ReadCurrentData(*cstring),short,DLL(DLL_MODE)
       XML:DebugTrace(BYTE),DLL(DLL_MODE)
       XML:BinaryFieldSet(STRING,<STRING>),DLL(DLL_MODE)
       XML:BinaryFieldClear(<STRING>),DLL(DLL_MODE)
       XML:AddReplaceEntry(STRING,STRING),DLL(DLL_MODE)
       XML:SetEncoding(STRING,<BYTE>),DLL(DLL_MODE)
       XML:GetSoapContent(STRING,*CSTRING),BYTE,DLL(DLL_MODE)
       XML:GetRawContent(STRING,*CSTRING),BYTE,DLL(DLL_MODE)
       XML:ReadComment(BYTE,*CSTRING),BYTE,DLL(DLL_MODE)
       XML:FindAnyNode(STRING,<STRING>,<STRING>,<STRING>,<STRING>),SHORT,DLL(DLL_MODE)
       XML:SetBoundry(STRING InField),DLL(DLL_MODE)
       XML:ReadCurrentNode(),STRING,DLL(DLL_MODE)
       XML:RootFromFile(STRING,<LONG>,*CSTRING),SHORT,DLL(DLL_MODE)
       XML:RootFromString(*CSTRING),STRING,DLL(DLL_MODE)
       XML:IsValid(),BYTE,DLL(DLL_MODE)
       XML:DumpMemory(STRING InFileName),DLL(DLL_MODE)
    END

    MODULE('iQ-XML Writer Functions')
       XML:CreateXMLFile(STRING,<STRING>,<STRING>,<BYTE>,<STRING>,<BYTE>,<BYTE>),SHORT,DLL(DLL_MODE)
       XML:CreateParent(STRING),DLL(DLL_MODE)
       XML:CreateAttribute(STRING,STRING),DLL(DLL_MODE)
       XML:AddParent(<BYTE>,<STRING>),DLL(DLL_MODE)
       XML:AddElement(STRING,STRING,<BYTE>),DLL(DLL_MODE)
       XML:CloseXMLFile(<BYTE>),DLL(DLL_MODE)
       XML:CloseParent(<STRING>),DLL(DLL_MODE)
       XML:AddComment(STRING),DLL(DLL_MODE)
       XML:AddFromQueue(*QUEUE,STRING,<BYTE>,<BYTE>,<BYTE>,<BYTE>),DLL(DLL_MODE)
       XML:CreateXMLString(<STRING>,<STRING>,<BYTE>,<STRING>),SHORT,DLL(DLL_MODE)
       XML:CloseXMLString(<BYTE>),STRING,DLL(DLL_MODE)
       XML:AddStringText(STRING,<BYTE>),DLL(DLL_MODE)
       XML:SetElementPrefix(STRING),DLL(DLL_MODE)
       XML:AddFromGroup(*GROUP,STRING,<BYTE>,<BYTE>,<BYTE>),DLL(DLL_MODE)
       XML:GetLastString(),STRING,DLL(DLL_MODE)
       XML:SetFieldPicture(string,string),DLL(DLL_MODE)
       XML:AddParentBinary(BYTE,STRING,<BYTE>),DLL(DLL_MODE)
       XML:SetNoIndent(BYTE),DLL(DLL_MODE)
       XML:HTMLtoPlainText(*CSTRING,<STRING>),STRING,DLL(DLL_MODE)
       XML:AddFromFile(*FILE,STRING,STRING,<BYTE>),LONG,DLL(DLL_MODE)
       XML:SetIgnoreEmpty(BYTE,BYTE),DLL(DLL_MODE)
       XML:GetTime(),STRING,DLL(DLL_MODE)
       XML:AddChild(STRING),DLL(DLL_MODE)
       XML:GetSize(),ULONG,DLL(DLL_MODE)
       XML:SetNoComments(BYTE InFlag),DLL(DLL_MODE)
    END

    MODULE('iQ-XML Other Functions')
       XML:PickFileToDebug(),DLL(DLL_MODE)
       XML:DebugMyQueue(*queue,<string>),DLL(DLL_MODE)
       XML:SkipDebug(BYTE),DLL(DLL_MODE)
       XML:ViewFile(STRING),DLL(DLL_MODE)
       XML:CreateechoToken(),String,DLL(DLL_MODE)
       XML:Replace(STRING,STRING,STRING,<LONG>),STRING,DLL(DLL_MODE)
       XML:ReplaceNC(STRING,STRING,STRING),STRING,DLL(DLL_MODE)
       XML:DebugMyQueuePic(STRING),DLL(DLL_MODE)
       XML:DebugMyQueuePic2(),DLL(DLL_MODE)
       XML:Extract(STRING,STRING,STRING,*CSTRING,<*CSTRING>,<*CSTRING>,LONG,BYTE),LONG,DLL(DLL_MODE)
       XML:DebugMyQueue2(STRING),DLL(DLL_MODE)
       XML:ConvertFromXML(*CSTRING),STRING,DLL(DLL_MODE)
       XML:ConvertToXML(STRING,<BYTE>),STRING,DLL(DLL_MODE)
       XML:ConvertToGMT(<LONG>,<LONG>),STRING,DLL(DLL_MODE)
       XML:ConvertTimeStampToLocal(STRING,*LONG,*LONG,BYTE),DLL(DLL_MODE)
    END
    
    MODULE('iQ-XML Parse Functions')
       XML:Parse(STRING,STRING,STRING),LONG,DLL(DLL_MODE)
       XML:ParseRead(),STRING,DLL(DLL_MODE)
       XML:ParseEmpty(),DLL(DLL_MODE)
       XML:ExtractPortion(STRING,STRING,STRING),STRING,DLL(DLL_MODE)
       XML:ParseBreak(STRING,STRING,*STRING,*STRING),DLL(DLL_MODE)
    END   

    MODULE('iQ-XML Swiss Army Knife - Date/Time')
       SA:GetDOW(LONG,<BYTE>),STRING,DLL(DLL_MODE)
       SA:GetMonthName(LONG,<BYTE>),STRING,DLL(DLL_MODE)
       SA:TimeSinceNow(LONG,BYTE,<LONG>),STRING,DLL(DLL_MODE)
       SA:FullTimeSinceNow(LONG InDate, LONG InTime),STRING,DLL(DLL_MODE)
       SA:GetDaysInMonth(LONG InDate),SHORT,DLL(DLL_MODE)
       SA:GetDateTimeString(LONG InDate,LONG InTime,STRING InText, BYTE AddDOW,<STRING DatePicture>,<STRING TimePicture>),STRING,DLL(DLL_MODE)
       SA:MinutesSinceNow(LONG InDate,LONG InTime),LONG,DLL(DLL_MODE)
       SA:GetDateTimeSimple(<LONG InDate>,<LONG InTIme>),STRING,DLL(DLL_MODE)
       SA:GetSecondsString(LONG InSeconds),STRING,DLL(DLL_MODE)
       SA:DeformatDate(STRING),LONG,DLL(DLL_MODE)
       SA:StripACharacter(STRING par:inString,STRING inCharacter),STRING,DLL(DLL_MODE)
       SA:StringCount(STRING,STRING,BYTE),SHORT,DLL(DLL_MODE)
       SA:ExtractParm(STRING TheString,STRING TheFind,BYTE InCase,*BYTE DoesExists),STRING,DLL(DLL_MODE)
       SA:RemoveLeadingChars(STRING InText,STRING InChars),STRING,DLL(DLL_MODE)
       SA:StripAllButNumbers(STRING InText,<BYTE AllowIndicators>),STRING,DLL(DLL_MODE)
       SA:MixedCase(STRING InText),STRING,DLL(DLL_MODE)
       SA:ConvertToDecimal(STRING InText),STRING,DLL(DLL_MODE)
       SA:CleanPopupString(STRING InText),STRING,DLL(DLL_MODE)
       SA:RemoveTrailingChars(STRING InText,STRING InChars,<STRING DoNotPass>),STRING,DLL(DLL_MODE)
       SA:FormatExpiration(STRING InText),STRING,DLL(DLL_MODE)
       SA:ExtractCharacters(STRING InText,STRING LookingFor,SHORT NumCharacters,<SHORT AtOffset>),STRING,DLL(DLL_MODE)
       SA:ExtractOutside(STRING InText,STRING LeftSide,STRING RightSide,<STRING ToKeep>,<BYTE FromRight>),STRING,DLL(DLL_MODE)
       SA:FormatSQLDate(STRING InDate,<BYTE AddDow>),STRING,DLL(DLL_MODE)
       SA:ExtractInside(STRING InText,STRING LeftSide,STRING RightSide,<STRING ToKeep>,<BYTE FromRight>),STRING,DLL(DLL_MODE)
       SA:GetFileInfo(STRING InFileName,BYTE InType),STRING,DLL(DLL_MODE)
       SA:ChangeColorTint(LONG InColor,STRING InChange),LONG,DLL(DLL_MODE)
       SA:RGBtoDecimal(STRING InText),LONG,DLL(DLL_MODE)
       SA:GetOpSystem(<BYTE ShowIfTS>),STRING,DLL(DLL_MODE)
       SA:FixAsFileName(STRING InFileName),STRING,DLL(DLL_MODE)
       SA:ClipandJustify(STRING InText,<STRING OptPicture>),STRING,DLL(DLL_MODE)
       SA:ClipAndJustifySet(STRING InPicture),DLL(DLL_MODE)
       SA:DoesItContainAny(STRING InText,STRING ContainList,BYTE IsCaseSensitive),SHORT,DLL(DLL_MODE)
       SA:DoesItContain(STRING InText,STRING DoesItHave,<BYTE IsCaseSensitive>),BYTE,DLL(DLL_MODE)
       SA:WriteToSysDebugger(STRING InText),DLL(DLL_MODE)
       SA:GetCRC(STRING InText,BYTE InType,<SHORT InStart>,<SHORT InLength>),STRING,DLL(DLL_MODE)
       SA:RangePicker(*LONG RetLowerDate,*LONG RetHigherDate, BYTE),DLL(DLL_MODE)
       SA:CalendarPicker(LONG PassedDate,<STRING PassedTitle>,< BYTE ShowSmall>),LONG,DLL(DLL_MODE)
       SA:GetVideoSize(BYTE),LONG,DLL(DLL_MODE)
       SA:WriteToFile(STRING InFileName,STRING InText,<BYTE AppendFile>,<BYTE DateTime>),DLL(DLL_MODE)
       SA:WriteToFileSetName(STRING InFileName,<BYTE InAppend>,<BYTE InType>),DLL(DLL_MODE)
       SA:WriteLine(STRING InText),DLL(DLL_MODE)
       SA:WriteToFileA(STRING InFileName,*CSTRING InText,<BYTE AppendFile>),DLL(DLL_MODE)
       SA:ReadFromFile(STRING InFileName),STRING,DLL(DLL_MODE)
       SA:AppendCharacter(STRING InText,STRING InCharacter),STRING,DLL(DLL_MODE)
       SA:FormatFileSize(STRING FileSize,<STRING OpText>),STRING,DLL(DLL_MODE)
       SA:SeparateWith(STRING BaseString,STRING WithString,STRING TheSeparator),STRING,DLL(DLL_MODE)
       SA:WildCardMatch(STRING InText,STRING InWildCard),BYTE,DLL(DLL_MODE)
       SA:DoesFileContain(STRING InFileName,STRING InText),BYTE,DLL(DLL_MODE)
       SA:GetRandomString(SHORT InLength,BYTE InType),STRING,DLL(DLL_MODE)
     END
    
    SECTION('Equates')

IQXML:None            EQUATE(0)
IQXML:Required        EQUATE(1)
IQXML:Optional        EQUATE(2)
IQXML:ForceWrite      EQUATE(100)
IQXML:ISO8601GMT      EQUATE('*ISO8601GMT')
IQXML:Cascade_DEFAULT EQUATE(0)
IQXML:Cascade_PARENT  EQUATE(1)
IQXML:Cascade_SAVE    EQUATE(2)