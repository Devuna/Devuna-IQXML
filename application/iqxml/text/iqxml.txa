[APPLICATION]
VERSION 34
TODO Clarion ToDo
PROCEDURE XML:PickFileToDebug
[COMMON]
FROM Clarion
MODIFIED '2014/01/19' '13:40:41'
[PROMPTS]
%ClassItem UNIQUE DEFAULT  ('ClientSideTriggers:', 'ClientSideTriggers:ACCEXPT', |
  'ClientSideTriggers:ACCGROUP', 'ClientSideTriggers:ACCGRP', 'ClientSideTriggers:ACCHIST', |
  'ClientSideTriggers:ACCHIST2', 'ClientSideTriggers:ACCOUNTL', 'ClientSideTriggers:ACCOUNTS', |
  'ClientSideTriggers:ADVANCE', 'ClientSideTriggers:APPLOG', 'ClientSideTriggers:CALMEMO', |
  'ClientSideTriggers:CATEGORY', 'ClientSideTriggers:CCAUDIT', 'ClientSideTriggers:CHARTDAT', |
  'ClientSideTriggers:CHARTDEF', 'ClientSideTriggers:CITYDT', 'ClientSideTriggers:CITYHD', |
  'ClientSideTriggers:CITYPY', 'ClientSideTriggers:CITYPYDT', 'ClientSideTriggers:CONFIG', |
  'ClientSideTriggers:DAILYACT', 'ClientSideTriggers:DATAAREA', 'ClientSideTriggers:DEMHIST', |
  'ClientSideTriggers:DEMHIST2', 'ClientSideTriggers:DENIALS', 'ClientSideTriggers:FOLIOAUT', |
  'ClientSideTriggers:FOLIODT', 'ClientSideTriggers:FOLIOHD', 'ClientSideTriggers:FOLIOTRN', |
  'ClientSideTriggers:FORECAST', 'ClientSideTriggers:GROUPDTL', 'ClientSideTriggers:GROUPS', |
  'ClientSideTriggers:GROUPSLS', 'ClientSideTriggers:HISTDT', 'ClientSideTriggers:HISTHD', |
  'ClientSideTriggers:HISTTRN', 'ClientSideTriggers:INNWEB', 'ClientSideTriggers:INVDTL', |
  'ClientSideTriggers:INVHDR', 'ClientSideTriggers:INVMDR', 'ClientSideTriggers:INVSALE', |
  'ClientSideTriggers:IRTABLE1', 'ClientSideTriggers:IRTABLE2', 'ClientSideTriggers:IRTABLE3', |
  'ClientSideTriggers:IRTABLE4', 'ClientSideTriggers:IRTABLE5', 'ClientSideTriggers:IRTABLE6', |
  'ClientSideTriggers:IRTABLE7', 'ClientSideTriggers:IRTABLE8', 'ClientSideTriggers:IRTABLE9', |
  'ClientSideTriggers:IRTABLEJ', 'ClientSideTriggers:JOURNAL', 'ClientSideTriggers:JOURNAL1', |
  'ClientSideTriggers:JOURNAL2', 'ClientSideTriggers:JOURNALH', 'ClientSideTriggers:KEYLOCKS', |
  'ClientSideTriggers:LOCATION', 'ClientSideTriggers:LOSTF', 'ClientSideTriggers:MAILDETL', |
  'ClientSideTriggers:MAILFILE', 'ClientSideTriggers:MAILHEAD', 'ClientSideTriggers:MAILMRGE', |
  'ClientSideTriggers:MAINJOUR', 'ClientSideTriggers:MAINLOG', 'ClientSideTriggers:MANUFACT', |
  'ClientSideTriggers:MESHEAD', 'ClientSideTriggers:MODCAT', 'ClientSideTriggers:MODOBJ', |
  'ClientSideTriggers:ODBCDriver', 'ClientSideTriggers:ONORDER', 'ClientSideTriggers:OTHERCHARGE', |
  'ClientSideTriggers:PACKAGE', 'ClientSideTriggers:PCENTERC', 'ClientSideTriggers:PCENTERG', |
  'ClientSideTriggers:PCENTERT', 'ClientSideTriggers:POSLOG', 'ClientSideTriggers:POSMSG', |
  'ClientSideTriggers:POSSAVE', 'ClientSideTriggers:POSSPEC', 'ClientSideTriggers:POSTABLE', |
  'ClientSideTriggers:POSTAUDIT', 'ClientSideTriggers:POSTBID', 'ClientSideTriggers:POSTBUFF', |
  'ClientSideTriggers:POSTCFIG', 'ClientSideTriggers:POSTCHRG', 'ClientSideTriggers:POSTIPS', |
  'ClientSideTriggers:POSTLOG', 'ClientSideTriggers:POSTOVR', 'ClientSideTriggers:POSVOIDS', |
  'ClientSideTriggers:PRINTERS', 'ClientSideTriggers:PSHELD', 'ClientSideTriggers:PSHOLD', |
  'ClientSideTriggers:PSLOGHD', 'ClientSideTriggers:PSPOST', 'ClientSideTriggers:PSTMTBL', |
  'ClientSideTriggers:PassBook', 'ClientSideTriggers:PlusWrk1', 'ClientSideTriggers:PlusWrk3', |
  'ClientSideTriggers:PlusWrk3B', 'ClientSideTriggers:RATES', 'ClientSideTriggers:RATHIST', |
  'ClientSideTriggers:RATHIST2', 'ClientSideTriggers:REPORTS', 'ClientSideTriggers:REPORTSH', |
  'ClientSideTriggers:RESERVE', 'ClientSideTriggers:RESRULES', 'ClientSideTriggers:ROOMANAL', |
  'ClientSideTriggers:ROOMBOOK', 'ClientSideTriggers:ROOMLIST', 'ClientSideTriggers:ROOMS', |
  'ClientSideTriggers:ROOMSOLD', 'ClientSideTriggers:RUNTIMES', 'ClientSideTriggers:RWReport', |
  'ClientSideTriggers:SALESPER', 'ClientSideTriggers:SERVICES', 'ClientSideTriggers:SHISTORY', |
  'ClientSideTriggers:SQLFILE', 'ClientSideTriggers:SQLFILE2', 'ClientSideTriggers:STALOC', |
  'ClientSideTriggers:STANDMSG', 'ClientSideTriggers:STAYHIST', 'ClientSideTriggers:SUBCATEG', |
  'ClientSideTriggers:SUBGRP', 'ClientSideTriggers:SUBNAME', 'ClientSideTriggers:StandText', |
  'ClientSideTriggers:StandText2', 'ClientSideTriggers:TABLES', 'ClientSideTriggers:TCQW_ELEMENTS', |
  'ClientSideTriggers:TCQW_FIELDS', 'ClientSideTriggers:TCQW_QUERIES', 'ClientSideTriggers:TRANFORM', |
  'ClientSideTriggers:TRANHIST', 'ClientSideTriggers:TRAVDETL', 'ClientSideTriggers:TRAVHEAD', |
  'ClientSideTriggers:TRNGROUP', 'ClientSideTriggers:UNITMEAS', 'ClientSideTriggers:USERHIST', |
  'ClientSideTriggers:USERREPT', 'ClientSideTriggers:USERS', 'ClientSideTriggers:USERS2', |
  'ClientSideTriggers:VIPFILE', 'ClientSideTriggers:WORKAREA', 'ClientSideTriggers:ZIPCODES', |
  'ErrorManager', 'ErrorStatusManager', 'FuzzyMatcher', 'INIManager', 'Translator')
%DefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 0

%ActualDefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 0

%ClassLines DEPEND %ClassItem MULTI DEFAULT TIMES 0

%ProgramAuthor DEFAULT  ('')
%Repository DEFAULT  ('')
%ProgramIcon DEFAULT  ('')
%MessageDescription LONG  (0)
%GlobalExternal LONG  (0)
%ExternalSource DEFAULT  ('Statically Linked Library (LIB)')
%GenerateEmbedComments LONG  (0)
%INIType DEFAULT  ('NVD_INI')
%INIFile DEFAULT  ('Program Name.INI')
%ININame DEFAULT  ('')
%INIProgramIniLocation DEFAULT  ('APPDIR')
%INICSIDLDirectory DEFAULT  ('SV:CSIDL_PERSONAL')
%CSIDLCompanyDir DEFAULT  ('')
%CSIDLProductDir DEFAULT  ('')
%CSIDLCreate LONG  (0)
%INIInAppDirectory LONG  (0)
%REGRoot DEFAULT  ('REG_CLASSES_ROOT')
%DisableINISaveWindow LONG  (0)
%PreserveVars MULTI LONG  ()
%PreserveVar DEPEND %PreserveVars DEFAULT TIMES 0

%EnableRunTimeTranslator LONG  (0)
%FuzzyMatchingEnabled LONG  (1)
%IgnoreCase LONG  (1)
%WordOnly LONG  (0)
%ButtonMarginsCompatibility LONG  (0)
%UseDefaultXPManifest LONG  (1)
%GenerateXPManifest LONG  (0)
%LinkGenerateXPManifest LONG  (0)
%AddVistaXPManifest LONG  (0)
%VistaManifestExecutionLevel DEFAULT  ('asInvoker')
%VistaManifestUIAccess LONG  (0)
%NoThemedControlsDependency LONG  (0)
%VistaManifestdpiAware LONG  (1)
%VistaManifestDependentAssembly MULTI LONG  ()
%VistaManifestDependentAssemblyName DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyVersion DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyType DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyPublicKeyToken DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyLanguage DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyProcessorArchitecture DEPEND %VistaManifestDependentAssembly LONG TIMES 0

%W7ManifestVista LONG  (0)
%W7ManifestW7 LONG  (0)
%W7ManifestW8 LONG  (1)
%W7ManifestW81 LONG  (1)
%W7ManifestW10 LONG  (1)
%ForceMakeTransparentXPManifest LONG  (0)
%ForceMakeColorXPManifest LONG  (0)
%ForceSHEETNoTheme LONG  (0)
%ExtUIXPMenuEnableGlobal LONG  (0)
%ExtUIXPMenuColorTypeGlobal DEFAULT  ('XPLunaSilver')
%ExtUIXPMenuDisableImageBar LONG  (1)
%ExtUIXPMenuEnableRuntime LONG  (0)
%ExtUIXPMenuRuntimeVar DEFAULT  ('GLO:_XML_XMLFileName')
%ExtUIXPMenuColorLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorRightGlobal LONG  (12560039)
%ExtUIXPMenuColorSelectionBarLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorSelectionBarRightGlobal LONG  (15920364)
%ExtUIXPMenuSelVertical LONG  (1)
%ExtUIXPMenuColorSelectionBorderGlobal LONG  (15920364)
%ExtUIXPMenuColorHotLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorHotRightGlobal LONG  (15920364)
%ExtUIXPMenuColorSelectedLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorSelectedRightGlobal LONG  (15920364)
%ExtUIXPMenuColorNormalBarLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorNormalBarRightGlobal LONG  (15920364)
%ExtUIXPMenuColorItemBackgroundGlobal LONG  (-2147483644)
%ExtUIXPMenuColorNormalText LONG  (0)
%ExtUIXPMenuColorSelectedText LONG  (0)
%ExtUIXPMenuColorHotText LONG  (0)
%ExtUIXPMenuFlat LONG  (1)
%ExtUIXPMenuShowImageBar LONG  (0)
%ExtUIXPMenuSeparator3D LONG  (1)
%ExtUIXPMenuSeparatorFull LONG  (0)
%ExtUIXPMenuVerticalLine LONG  (1)
%ExtUIMDITabGlobal DEFAULT  ('DISABLE')
%ExtUIMDITabStyleGlobal DEFAULT  ('Default')
%ExtUITabStyleGlobal DEFAULT  ('Boxed')
%WindowEnableEnhanceFocus LONG  (0)
%SelectedText LONG  (1)
%SelectedRadio LONG  (1)
%SelectedSpin LONG  (1)
%SelectedCheck LONG  (1)
%SelectedDropList LONG  (1)
%SelectedList LONG  (1)
%SelectedDisplayChangeColor LONG  (1)
%SelectedColor LONG  (65535)
%SelectedStyle LONG  (1)
%SelectedRequired LONG  (0)
%SelectedRequiredColor LONG  (65535)
%SelectedDisplayBox LONG  (1)
%SelectedDisplayBoxFillColor LONG  (65535)
%SelectedDisplayBoxBorderColor LONG  (0)
%SelectedDisplayBoxBorderSize DEFAULT  ('2')
%SelectedRequiredBox LONG  (0)
%SelectedRequiredDisplayBoxFillColor LONG  (255)
%SelectedRequiredDisplayBoxBorderColor LONG  (0)
%SelectedCaret LONG  (1)
%SelectedCaretColor LONG  (8421504)
%SelectedCaretCharacter DEFAULT  ('»')
%SelectedCaretCharacterSeparation DEFAULT  ('8')
%ExcludeSelectedDropList LONG  (1)
%EnableOSK DEFAULT  ('OFF')
%GlobalUseEnterInsteadTab LONG  (0)
%GlobalUseEnterInsteadTabExclude MULTI DEFAULT  ()
%GlobalUseEnterInsteadTabEnable DEFAULT  ('Enable')
%GlobalUseEnterInsteadTabEnableValue DEFAULT  ('True')
%GlobalInterLine DEFAULT  ('11')
%GlobalEnableAutoSizeColumn LONG  (0)
%GlobalEnableListFormatManager LONG  (0)
%GlobalUserFieldListFormatManager DEFAULT  ('1')
%TableOrigin DEFAULT  ('Application')
%FileEquate DEFAULT  ('LFM_CFile')
%ConfigFilePRE DEFAULT  ('CFG')
%ConfigFileOEM LONG  (0)
%ConfigFileTHREAD LONG  (1)
%ConfigFileENCRYPT LONG  (0)
%ConfigFilePASSWORD DEFAULT  ('')
%FormatNameSize DEFAULT  ('30')
%FormatBufferSize DEFAULT  ('5120')
%VariableBufferSize DEFAULT  ('2048')
%ConfigFilePath DEFAULT  ('')
%UseConfigFileName DEFAULT  ('Default')
%ConfigFileNAME DEFAULT  ('Formats.FDB')
%ColonCounter DEFAULT  ('')
%WrongSymbol DEFAULT  ('')
%DictionaryTableOrigin FILE  ()
%GlobalLFMSortOrderMenuText DEFAULT  ('SortOrder')
%GlobalEnableRebase LONG  (0)
%RBDMethod DEFAULT  ('Specify manually')
%RBDImageBase DEFAULT  ('10000000')
%DefaultGenerate LONG  (0)
%DefaultRILogout LONG  (0)
%LockRecoverTime DEFAULT  ('10')
%DefaultThreaded DEFAULT  ('None Threaded')
%DefaultCreate DEFAULT  ('Create None')
%DefaultExternal DEFAULT  ('None External')
%DefaultLocalExternal LONG  (0)
%DefaultExternalSource DEFAULT  ('')
%DefaultExternalAPP LONG  (0)
%DefaultExport LONG  (0)
%DefaultOpenMode DEFAULT  ('Share')
%DefaultUserAccess DEFAULT  ('Read/Write')
%DefaultOtherAccess DEFAULT  ('Deny None')
%DefaultLazyOpen LONG  (1)
%GeneratePropDataPath LONG  (0)
%PropDataPathLocation DEFAULT  ('CSIDLLIKEINI')
%DataPathCSIDLDirectory DEFAULT  ('SV:CSIDL_PERSONAL')
%DataPathCSIDLCompanyDir DEFAULT  ('')
%DataPathCSIDLProductDir DEFAULT  ('')
%DataPathCSIDLCreate LONG  (0)
%DataPathOtherDirectory DEFAULT  ('')
%DataPathOtherDirectoryCreate LONG  (0)
%OverrideGenerate DEPEND %File LONG TIMES 0

%OverrideRILogout DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%GlobalObject DEPEND %ClassItem DEFAULT TIMES 148
WHEN  ('ClientSideTriggers:') ('YES')
WHEN  ('ClientSideTriggers:ACCEXPT') ('YES')
WHEN  ('ClientSideTriggers:ACCGROUP') ('YES')
WHEN  ('ClientSideTriggers:ACCGRP') ('YES')
WHEN  ('ClientSideTriggers:ACCHIST') ('YES')
WHEN  ('ClientSideTriggers:ACCHIST2') ('YES')
WHEN  ('ClientSideTriggers:ACCOUNTL') ('YES')
WHEN  ('ClientSideTriggers:ACCOUNTS') ('YES')
WHEN  ('ClientSideTriggers:ADVANCE') ('YES')
WHEN  ('ClientSideTriggers:APPLOG') ('YES')
WHEN  ('ClientSideTriggers:CALMEMO') ('YES')
WHEN  ('ClientSideTriggers:CATEGORY') ('YES')
WHEN  ('ClientSideTriggers:CCAUDIT') ('YES')
WHEN  ('ClientSideTriggers:CHARTDAT') ('YES')
WHEN  ('ClientSideTriggers:CHARTDEF') ('YES')
WHEN  ('ClientSideTriggers:CITYDT') ('YES')
WHEN  ('ClientSideTriggers:CITYHD') ('YES')
WHEN  ('ClientSideTriggers:CITYPY') ('YES')
WHEN  ('ClientSideTriggers:CITYPYDT') ('YES')
WHEN  ('ClientSideTriggers:CONFIG') ('YES')
WHEN  ('ClientSideTriggers:DAILYACT') ('YES')
WHEN  ('ClientSideTriggers:DATAAREA') ('YES')
WHEN  ('ClientSideTriggers:DEMHIST') ('YES')
WHEN  ('ClientSideTriggers:DEMHIST2') ('YES')
WHEN  ('ClientSideTriggers:DENIALS') ('YES')
WHEN  ('ClientSideTriggers:FOLIOAUT') ('YES')
WHEN  ('ClientSideTriggers:FOLIODT') ('YES')
WHEN  ('ClientSideTriggers:FOLIOHD') ('YES')
WHEN  ('ClientSideTriggers:FOLIOTRN') ('YES')
WHEN  ('ClientSideTriggers:FORECAST') ('YES')
WHEN  ('ClientSideTriggers:GROUPDTL') ('YES')
WHEN  ('ClientSideTriggers:GROUPS') ('YES')
WHEN  ('ClientSideTriggers:GROUPSLS') ('YES')
WHEN  ('ClientSideTriggers:HISTDT') ('YES')
WHEN  ('ClientSideTriggers:HISTHD') ('YES')
WHEN  ('ClientSideTriggers:HISTTRN') ('YES')
WHEN  ('ClientSideTriggers:INNWEB') ('YES')
WHEN  ('ClientSideTriggers:INVDTL') ('YES')
WHEN  ('ClientSideTriggers:INVHDR') ('YES')
WHEN  ('ClientSideTriggers:INVMDR') ('YES')
WHEN  ('ClientSideTriggers:INVSALE') ('YES')
WHEN  ('ClientSideTriggers:IRTABLE1') ('YES')
WHEN  ('ClientSideTriggers:IRTABLE2') ('YES')
WHEN  ('ClientSideTriggers:IRTABLE3') ('YES')
WHEN  ('ClientSideTriggers:IRTABLE4') ('YES')
WHEN  ('ClientSideTriggers:IRTABLE5') ('YES')
WHEN  ('ClientSideTriggers:IRTABLE6') ('YES')
WHEN  ('ClientSideTriggers:IRTABLE7') ('YES')
WHEN  ('ClientSideTriggers:IRTABLE8') ('YES')
WHEN  ('ClientSideTriggers:IRTABLE9') ('YES')
WHEN  ('ClientSideTriggers:IRTABLEJ') ('YES')
WHEN  ('ClientSideTriggers:JOURNAL') ('YES')
WHEN  ('ClientSideTriggers:JOURNAL1') ('YES')
WHEN  ('ClientSideTriggers:JOURNAL2') ('YES')
WHEN  ('ClientSideTriggers:JOURNALH') ('YES')
WHEN  ('ClientSideTriggers:KEYLOCKS') ('YES')
WHEN  ('ClientSideTriggers:LOCATION') ('YES')
WHEN  ('ClientSideTriggers:LOSTF') ('YES')
WHEN  ('ClientSideTriggers:MAILDETL') ('YES')
WHEN  ('ClientSideTriggers:MAILFILE') ('YES')
WHEN  ('ClientSideTriggers:MAILHEAD') ('YES')
WHEN  ('ClientSideTriggers:MAILMRGE') ('YES')
WHEN  ('ClientSideTriggers:MAINJOUR') ('YES')
WHEN  ('ClientSideTriggers:MAINLOG') ('YES')
WHEN  ('ClientSideTriggers:MANUFACT') ('YES')
WHEN  ('ClientSideTriggers:MESHEAD') ('YES')
WHEN  ('ClientSideTriggers:MODCAT') ('YES')
WHEN  ('ClientSideTriggers:MODOBJ') ('YES')
WHEN  ('ClientSideTriggers:ODBCDriver') ('YES')
WHEN  ('ClientSideTriggers:ONORDER') ('YES')
WHEN  ('ClientSideTriggers:OTHERCHARGE') ('YES')
WHEN  ('ClientSideTriggers:PACKAGE') ('YES')
WHEN  ('ClientSideTriggers:PCENTERC') ('YES')
WHEN  ('ClientSideTriggers:PCENTERG') ('YES')
WHEN  ('ClientSideTriggers:PCENTERT') ('YES')
WHEN  ('ClientSideTriggers:POSLOG') ('YES')
WHEN  ('ClientSideTriggers:POSMSG') ('YES')
WHEN  ('ClientSideTriggers:POSSAVE') ('YES')
WHEN  ('ClientSideTriggers:POSSPEC') ('YES')
WHEN  ('ClientSideTriggers:POSTABLE') ('YES')
WHEN  ('ClientSideTriggers:POSTAUDIT') ('YES')
WHEN  ('ClientSideTriggers:POSTBID') ('YES')
WHEN  ('ClientSideTriggers:POSTBUFF') ('YES')
WHEN  ('ClientSideTriggers:POSTCFIG') ('YES')
WHEN  ('ClientSideTriggers:POSTCHRG') ('YES')
WHEN  ('ClientSideTriggers:POSTIPS') ('YES')
WHEN  ('ClientSideTriggers:POSTLOG') ('YES')
WHEN  ('ClientSideTriggers:POSTOVR') ('YES')
WHEN  ('ClientSideTriggers:POSVOIDS') ('YES')
WHEN  ('ClientSideTriggers:PRINTERS') ('YES')
WHEN  ('ClientSideTriggers:PSHELD') ('YES')
WHEN  ('ClientSideTriggers:PSHOLD') ('YES')
WHEN  ('ClientSideTriggers:PSLOGHD') ('YES')
WHEN  ('ClientSideTriggers:PSPOST') ('YES')
WHEN  ('ClientSideTriggers:PSTMTBL') ('YES')
WHEN  ('ClientSideTriggers:PassBook') ('YES')
WHEN  ('ClientSideTriggers:PlusWrk1') ('YES')
WHEN  ('ClientSideTriggers:PlusWrk3') ('YES')
WHEN  ('ClientSideTriggers:PlusWrk3B') ('YES')
WHEN  ('ClientSideTriggers:RATES') ('YES')
WHEN  ('ClientSideTriggers:RATHIST') ('YES')
WHEN  ('ClientSideTriggers:RATHIST2') ('YES')
WHEN  ('ClientSideTriggers:REPORTS') ('YES')
WHEN  ('ClientSideTriggers:REPORTSH') ('YES')
WHEN  ('ClientSideTriggers:RESERVE') ('YES')
WHEN  ('ClientSideTriggers:RESRULES') ('YES')
WHEN  ('ClientSideTriggers:ROOMANAL') ('YES')
WHEN  ('ClientSideTriggers:ROOMBOOK') ('YES')
WHEN  ('ClientSideTriggers:ROOMLIST') ('YES')
WHEN  ('ClientSideTriggers:ROOMS') ('YES')
WHEN  ('ClientSideTriggers:ROOMSOLD') ('YES')
WHEN  ('ClientSideTriggers:RUNTIMES') ('YES')
WHEN  ('ClientSideTriggers:RWReport') ('YES')
WHEN  ('ClientSideTriggers:SALESPER') ('YES')
WHEN  ('ClientSideTriggers:SERVICES') ('YES')
WHEN  ('ClientSideTriggers:SHISTORY') ('YES')
WHEN  ('ClientSideTriggers:SQLFILE') ('YES')
WHEN  ('ClientSideTriggers:SQLFILE2') ('YES')
WHEN  ('ClientSideTriggers:STALOC') ('YES')
WHEN  ('ClientSideTriggers:STANDMSG') ('YES')
WHEN  ('ClientSideTriggers:STAYHIST') ('YES')
WHEN  ('ClientSideTriggers:SUBCATEG') ('YES')
WHEN  ('ClientSideTriggers:SUBGRP') ('YES')
WHEN  ('ClientSideTriggers:SUBNAME') ('YES')
WHEN  ('ClientSideTriggers:StandText') ('YES')
WHEN  ('ClientSideTriggers:StandText2') ('YES')
WHEN  ('ClientSideTriggers:TABLES') ('YES')
WHEN  ('ClientSideTriggers:TCQW_ELEMENTS') ('YES')
WHEN  ('ClientSideTriggers:TCQW_FIELDS') ('YES')
WHEN  ('ClientSideTriggers:TCQW_QUERIES') ('YES')
WHEN  ('ClientSideTriggers:TRANFORM') ('YES')
WHEN  ('ClientSideTriggers:TRANHIST') ('YES')
WHEN  ('ClientSideTriggers:TRAVDETL') ('YES')
WHEN  ('ClientSideTriggers:TRAVHEAD') ('YES')
WHEN  ('ClientSideTriggers:TRNGROUP') ('YES')
WHEN  ('ClientSideTriggers:UNITMEAS') ('YES')
WHEN  ('ClientSideTriggers:USERHIST') ('YES')
WHEN  ('ClientSideTriggers:USERREPT') ('YES')
WHEN  ('ClientSideTriggers:USERS') ('YES')
WHEN  ('ClientSideTriggers:USERS2') ('YES')
WHEN  ('ClientSideTriggers:VIPFILE') ('YES')
WHEN  ('ClientSideTriggers:WORKAREA') ('YES')
WHEN  ('ClientSideTriggers:ZIPCODES') ('YES')
WHEN  ('ErrorManager') ('YES')
WHEN  ('ErrorStatusManager') ('YES')
WHEN  ('FuzzyMatcher') ('YES')
WHEN  ('INIManager') ('YES')
WHEN  ('Translator') ('YES')

%ThisObjectName DEPEND %ClassItem DEFAULT TIMES 0

%UseDefaultABCBaseClass DEPEND %ClassItem LONG TIMES 148
WHEN  ('ClientSideTriggers:') (1)
WHEN  ('ClientSideTriggers:ACCEXPT') (1)
WHEN  ('ClientSideTriggers:ACCGROUP') (1)
WHEN  ('ClientSideTriggers:ACCGRP') (1)
WHEN  ('ClientSideTriggers:ACCHIST') (1)
WHEN  ('ClientSideTriggers:ACCHIST2') (1)
WHEN  ('ClientSideTriggers:ACCOUNTL') (1)
WHEN  ('ClientSideTriggers:ACCOUNTS') (1)
WHEN  ('ClientSideTriggers:ADVANCE') (1)
WHEN  ('ClientSideTriggers:APPLOG') (1)
WHEN  ('ClientSideTriggers:CALMEMO') (1)
WHEN  ('ClientSideTriggers:CATEGORY') (1)
WHEN  ('ClientSideTriggers:CCAUDIT') (1)
WHEN  ('ClientSideTriggers:CHARTDAT') (1)
WHEN  ('ClientSideTriggers:CHARTDEF') (1)
WHEN  ('ClientSideTriggers:CITYDT') (1)
WHEN  ('ClientSideTriggers:CITYHD') (1)
WHEN  ('ClientSideTriggers:CITYPY') (1)
WHEN  ('ClientSideTriggers:CITYPYDT') (1)
WHEN  ('ClientSideTriggers:CONFIG') (1)
WHEN  ('ClientSideTriggers:DAILYACT') (1)
WHEN  ('ClientSideTriggers:DATAAREA') (1)
WHEN  ('ClientSideTriggers:DEMHIST') (1)
WHEN  ('ClientSideTriggers:DEMHIST2') (1)
WHEN  ('ClientSideTriggers:DENIALS') (1)
WHEN  ('ClientSideTriggers:FOLIOAUT') (1)
WHEN  ('ClientSideTriggers:FOLIODT') (1)
WHEN  ('ClientSideTriggers:FOLIOHD') (1)
WHEN  ('ClientSideTriggers:FOLIOTRN') (1)
WHEN  ('ClientSideTriggers:FORECAST') (1)
WHEN  ('ClientSideTriggers:GROUPDTL') (1)
WHEN  ('ClientSideTriggers:GROUPS') (1)
WHEN  ('ClientSideTriggers:GROUPSLS') (1)
WHEN  ('ClientSideTriggers:HISTDT') (1)
WHEN  ('ClientSideTriggers:HISTHD') (1)
WHEN  ('ClientSideTriggers:HISTTRN') (1)
WHEN  ('ClientSideTriggers:INNWEB') (1)
WHEN  ('ClientSideTriggers:INVDTL') (1)
WHEN  ('ClientSideTriggers:INVHDR') (1)
WHEN  ('ClientSideTriggers:INVMDR') (1)
WHEN  ('ClientSideTriggers:INVSALE') (1)
WHEN  ('ClientSideTriggers:IRTABLE1') (1)
WHEN  ('ClientSideTriggers:IRTABLE2') (1)
WHEN  ('ClientSideTriggers:IRTABLE3') (1)
WHEN  ('ClientSideTriggers:IRTABLE4') (1)
WHEN  ('ClientSideTriggers:IRTABLE5') (1)
WHEN  ('ClientSideTriggers:IRTABLE6') (1)
WHEN  ('ClientSideTriggers:IRTABLE7') (1)
WHEN  ('ClientSideTriggers:IRTABLE8') (1)
WHEN  ('ClientSideTriggers:IRTABLE9') (1)
WHEN  ('ClientSideTriggers:IRTABLEJ') (1)
WHEN  ('ClientSideTriggers:JOURNAL') (1)
WHEN  ('ClientSideTriggers:JOURNAL1') (1)
WHEN  ('ClientSideTriggers:JOURNAL2') (1)
WHEN  ('ClientSideTriggers:JOURNALH') (1)
WHEN  ('ClientSideTriggers:KEYLOCKS') (1)
WHEN  ('ClientSideTriggers:LOCATION') (1)
WHEN  ('ClientSideTriggers:LOSTF') (1)
WHEN  ('ClientSideTriggers:MAILDETL') (1)
WHEN  ('ClientSideTriggers:MAILFILE') (1)
WHEN  ('ClientSideTriggers:MAILHEAD') (1)
WHEN  ('ClientSideTriggers:MAILMRGE') (1)
WHEN  ('ClientSideTriggers:MAINJOUR') (1)
WHEN  ('ClientSideTriggers:MAINLOG') (1)
WHEN  ('ClientSideTriggers:MANUFACT') (1)
WHEN  ('ClientSideTriggers:MESHEAD') (1)
WHEN  ('ClientSideTriggers:MODCAT') (1)
WHEN  ('ClientSideTriggers:MODOBJ') (1)
WHEN  ('ClientSideTriggers:ODBCDriver') (1)
WHEN  ('ClientSideTriggers:ONORDER') (1)
WHEN  ('ClientSideTriggers:OTHERCHARGE') (1)
WHEN  ('ClientSideTriggers:PACKAGE') (1)
WHEN  ('ClientSideTriggers:PCENTERC') (1)
WHEN  ('ClientSideTriggers:PCENTERG') (1)
WHEN  ('ClientSideTriggers:PCENTERT') (1)
WHEN  ('ClientSideTriggers:POSLOG') (1)
WHEN  ('ClientSideTriggers:POSMSG') (1)
WHEN  ('ClientSideTriggers:POSSAVE') (1)
WHEN  ('ClientSideTriggers:POSSPEC') (1)
WHEN  ('ClientSideTriggers:POSTABLE') (1)
WHEN  ('ClientSideTriggers:POSTAUDIT') (1)
WHEN  ('ClientSideTriggers:POSTBID') (1)
WHEN  ('ClientSideTriggers:POSTBUFF') (1)
WHEN  ('ClientSideTriggers:POSTCFIG') (1)
WHEN  ('ClientSideTriggers:POSTCHRG') (1)
WHEN  ('ClientSideTriggers:POSTIPS') (1)
WHEN  ('ClientSideTriggers:POSTLOG') (1)
WHEN  ('ClientSideTriggers:POSTOVR') (1)
WHEN  ('ClientSideTriggers:POSVOIDS') (1)
WHEN  ('ClientSideTriggers:PRINTERS') (1)
WHEN  ('ClientSideTriggers:PSHELD') (1)
WHEN  ('ClientSideTriggers:PSHOLD') (1)
WHEN  ('ClientSideTriggers:PSLOGHD') (1)
WHEN  ('ClientSideTriggers:PSPOST') (1)
WHEN  ('ClientSideTriggers:PSTMTBL') (1)
WHEN  ('ClientSideTriggers:PassBook') (1)
WHEN  ('ClientSideTriggers:PlusWrk1') (1)
WHEN  ('ClientSideTriggers:PlusWrk3') (1)
WHEN  ('ClientSideTriggers:PlusWrk3B') (1)
WHEN  ('ClientSideTriggers:RATES') (1)
WHEN  ('ClientSideTriggers:RATHIST') (1)
WHEN  ('ClientSideTriggers:RATHIST2') (1)
WHEN  ('ClientSideTriggers:REPORTS') (1)
WHEN  ('ClientSideTriggers:REPORTSH') (1)
WHEN  ('ClientSideTriggers:RESERVE') (1)
WHEN  ('ClientSideTriggers:RESRULES') (1)
WHEN  ('ClientSideTriggers:ROOMANAL') (1)
WHEN  ('ClientSideTriggers:ROOMBOOK') (1)
WHEN  ('ClientSideTriggers:ROOMLIST') (1)
WHEN  ('ClientSideTriggers:ROOMS') (1)
WHEN  ('ClientSideTriggers:ROOMSOLD') (1)
WHEN  ('ClientSideTriggers:RUNTIMES') (1)
WHEN  ('ClientSideTriggers:RWReport') (1)
WHEN  ('ClientSideTriggers:SALESPER') (1)
WHEN  ('ClientSideTriggers:SERVICES') (1)
WHEN  ('ClientSideTriggers:SHISTORY') (1)
WHEN  ('ClientSideTriggers:SQLFILE') (1)
WHEN  ('ClientSideTriggers:SQLFILE2') (1)
WHEN  ('ClientSideTriggers:STALOC') (1)
WHEN  ('ClientSideTriggers:STANDMSG') (1)
WHEN  ('ClientSideTriggers:STAYHIST') (1)
WHEN  ('ClientSideTriggers:SUBCATEG') (1)
WHEN  ('ClientSideTriggers:SUBGRP') (1)
WHEN  ('ClientSideTriggers:SUBNAME') (1)
WHEN  ('ClientSideTriggers:StandText') (1)
WHEN  ('ClientSideTriggers:StandText2') (1)
WHEN  ('ClientSideTriggers:TABLES') (1)
WHEN  ('ClientSideTriggers:TCQW_ELEMENTS') (1)
WHEN  ('ClientSideTriggers:TCQW_FIELDS') (1)
WHEN  ('ClientSideTriggers:TCQW_QUERIES') (1)
WHEN  ('ClientSideTriggers:TRANFORM') (1)
WHEN  ('ClientSideTriggers:TRANHIST') (1)
WHEN  ('ClientSideTriggers:TRAVDETL') (1)
WHEN  ('ClientSideTriggers:TRAVHEAD') (1)
WHEN  ('ClientSideTriggers:TRNGROUP') (1)
WHEN  ('ClientSideTriggers:UNITMEAS') (1)
WHEN  ('ClientSideTriggers:USERHIST') (1)
WHEN  ('ClientSideTriggers:USERREPT') (1)
WHEN  ('ClientSideTriggers:USERS') (1)
WHEN  ('ClientSideTriggers:USERS2') (1)
WHEN  ('ClientSideTriggers:VIPFILE') (1)
WHEN  ('ClientSideTriggers:WORKAREA') (1)
WHEN  ('ClientSideTriggers:ZIPCODES') (1)
WHEN  ('ErrorManager') (1)
WHEN  ('ErrorStatusManager') (1)
WHEN  ('FuzzyMatcher') (1)
WHEN  ('INIManager') (1)
WHEN  ('Translator') (1)

%UseABCBaseClass DEPEND %ClassItem LONG TIMES 148
WHEN  ('ClientSideTriggers:') (1)
WHEN  ('ClientSideTriggers:ACCEXPT') (1)
WHEN  ('ClientSideTriggers:ACCGROUP') (1)
WHEN  ('ClientSideTriggers:ACCGRP') (1)
WHEN  ('ClientSideTriggers:ACCHIST') (1)
WHEN  ('ClientSideTriggers:ACCHIST2') (1)
WHEN  ('ClientSideTriggers:ACCOUNTL') (1)
WHEN  ('ClientSideTriggers:ACCOUNTS') (1)
WHEN  ('ClientSideTriggers:ADVANCE') (1)
WHEN  ('ClientSideTriggers:APPLOG') (1)
WHEN  ('ClientSideTriggers:CALMEMO') (1)
WHEN  ('ClientSideTriggers:CATEGORY') (1)
WHEN  ('ClientSideTriggers:CCAUDIT') (1)
WHEN  ('ClientSideTriggers:CHARTDAT') (1)
WHEN  ('ClientSideTriggers:CHARTDEF') (1)
WHEN  ('ClientSideTriggers:CITYDT') (1)
WHEN  ('ClientSideTriggers:CITYHD') (1)
WHEN  ('ClientSideTriggers:CITYPY') (1)
WHEN  ('ClientSideTriggers:CITYPYDT') (1)
WHEN  ('ClientSideTriggers:CONFIG') (1)
WHEN  ('ClientSideTriggers:DAILYACT') (1)
WHEN  ('ClientSideTriggers:DATAAREA') (1)
WHEN  ('ClientSideTriggers:DEMHIST') (1)
WHEN  ('ClientSideTriggers:DEMHIST2') (1)
WHEN  ('ClientSideTriggers:DENIALS') (1)
WHEN  ('ClientSideTriggers:FOLIOAUT') (1)
WHEN  ('ClientSideTriggers:FOLIODT') (1)
WHEN  ('ClientSideTriggers:FOLIOHD') (1)
WHEN  ('ClientSideTriggers:FOLIOTRN') (1)
WHEN  ('ClientSideTriggers:FORECAST') (1)
WHEN  ('ClientSideTriggers:GROUPDTL') (1)
WHEN  ('ClientSideTriggers:GROUPS') (1)
WHEN  ('ClientSideTriggers:GROUPSLS') (1)
WHEN  ('ClientSideTriggers:HISTDT') (1)
WHEN  ('ClientSideTriggers:HISTHD') (1)
WHEN  ('ClientSideTriggers:HISTTRN') (1)
WHEN  ('ClientSideTriggers:INNWEB') (1)
WHEN  ('ClientSideTriggers:INVDTL') (1)
WHEN  ('ClientSideTriggers:INVHDR') (1)
WHEN  ('ClientSideTriggers:INVMDR') (1)
WHEN  ('ClientSideTriggers:INVSALE') (1)
WHEN  ('ClientSideTriggers:IRTABLE1') (1)
WHEN  ('ClientSideTriggers:IRTABLE2') (1)
WHEN  ('ClientSideTriggers:IRTABLE3') (1)
WHEN  ('ClientSideTriggers:IRTABLE4') (1)
WHEN  ('ClientSideTriggers:IRTABLE5') (1)
WHEN  ('ClientSideTriggers:IRTABLE6') (1)
WHEN  ('ClientSideTriggers:IRTABLE7') (1)
WHEN  ('ClientSideTriggers:IRTABLE8') (1)
WHEN  ('ClientSideTriggers:IRTABLE9') (1)
WHEN  ('ClientSideTriggers:IRTABLEJ') (1)
WHEN  ('ClientSideTriggers:JOURNAL') (1)
WHEN  ('ClientSideTriggers:JOURNAL1') (1)
WHEN  ('ClientSideTriggers:JOURNAL2') (1)
WHEN  ('ClientSideTriggers:JOURNALH') (1)
WHEN  ('ClientSideTriggers:KEYLOCKS') (1)
WHEN  ('ClientSideTriggers:LOCATION') (1)
WHEN  ('ClientSideTriggers:LOSTF') (1)
WHEN  ('ClientSideTriggers:MAILDETL') (1)
WHEN  ('ClientSideTriggers:MAILFILE') (1)
WHEN  ('ClientSideTriggers:MAILHEAD') (1)
WHEN  ('ClientSideTriggers:MAILMRGE') (1)
WHEN  ('ClientSideTriggers:MAINJOUR') (1)
WHEN  ('ClientSideTriggers:MAINLOG') (1)
WHEN  ('ClientSideTriggers:MANUFACT') (1)
WHEN  ('ClientSideTriggers:MESHEAD') (1)
WHEN  ('ClientSideTriggers:MODCAT') (1)
WHEN  ('ClientSideTriggers:MODOBJ') (1)
WHEN  ('ClientSideTriggers:ODBCDriver') (1)
WHEN  ('ClientSideTriggers:ONORDER') (1)
WHEN  ('ClientSideTriggers:OTHERCHARGE') (1)
WHEN  ('ClientSideTriggers:PACKAGE') (1)
WHEN  ('ClientSideTriggers:PCENTERC') (1)
WHEN  ('ClientSideTriggers:PCENTERG') (1)
WHEN  ('ClientSideTriggers:PCENTERT') (1)
WHEN  ('ClientSideTriggers:POSLOG') (1)
WHEN  ('ClientSideTriggers:POSMSG') (1)
WHEN  ('ClientSideTriggers:POSSAVE') (1)
WHEN  ('ClientSideTriggers:POSSPEC') (1)
WHEN  ('ClientSideTriggers:POSTABLE') (1)
WHEN  ('ClientSideTriggers:POSTAUDIT') (1)
WHEN  ('ClientSideTriggers:POSTBID') (1)
WHEN  ('ClientSideTriggers:POSTBUFF') (1)
WHEN  ('ClientSideTriggers:POSTCFIG') (1)
WHEN  ('ClientSideTriggers:POSTCHRG') (1)
WHEN  ('ClientSideTriggers:POSTIPS') (1)
WHEN  ('ClientSideTriggers:POSTLOG') (1)
WHEN  ('ClientSideTriggers:POSTOVR') (1)
WHEN  ('ClientSideTriggers:POSVOIDS') (1)
WHEN  ('ClientSideTriggers:PRINTERS') (1)
WHEN  ('ClientSideTriggers:PSHELD') (1)
WHEN  ('ClientSideTriggers:PSHOLD') (1)
WHEN  ('ClientSideTriggers:PSLOGHD') (1)
WHEN  ('ClientSideTriggers:PSPOST') (1)
WHEN  ('ClientSideTriggers:PSTMTBL') (1)
WHEN  ('ClientSideTriggers:PassBook') (1)
WHEN  ('ClientSideTriggers:PlusWrk1') (1)
WHEN  ('ClientSideTriggers:PlusWrk3') (1)
WHEN  ('ClientSideTriggers:PlusWrk3B') (1)
WHEN  ('ClientSideTriggers:RATES') (1)
WHEN  ('ClientSideTriggers:RATHIST') (1)
WHEN  ('ClientSideTriggers:RATHIST2') (1)
WHEN  ('ClientSideTriggers:REPORTS') (1)
WHEN  ('ClientSideTriggers:REPORTSH') (1)
WHEN  ('ClientSideTriggers:RESERVE') (1)
WHEN  ('ClientSideTriggers:RESRULES') (1)
WHEN  ('ClientSideTriggers:ROOMANAL') (1)
WHEN  ('ClientSideTriggers:ROOMBOOK') (1)
WHEN  ('ClientSideTriggers:ROOMLIST') (1)
WHEN  ('ClientSideTriggers:ROOMS') (1)
WHEN  ('ClientSideTriggers:ROOMSOLD') (1)
WHEN  ('ClientSideTriggers:RUNTIMES') (1)
WHEN  ('ClientSideTriggers:RWReport') (1)
WHEN  ('ClientSideTriggers:SALESPER') (1)
WHEN  ('ClientSideTriggers:SERVICES') (1)
WHEN  ('ClientSideTriggers:SHISTORY') (1)
WHEN  ('ClientSideTriggers:SQLFILE') (1)
WHEN  ('ClientSideTriggers:SQLFILE2') (1)
WHEN  ('ClientSideTriggers:STALOC') (1)
WHEN  ('ClientSideTriggers:STANDMSG') (1)
WHEN  ('ClientSideTriggers:STAYHIST') (1)
WHEN  ('ClientSideTriggers:SUBCATEG') (1)
WHEN  ('ClientSideTriggers:SUBGRP') (1)
WHEN  ('ClientSideTriggers:SUBNAME') (1)
WHEN  ('ClientSideTriggers:StandText') (1)
WHEN  ('ClientSideTriggers:StandText2') (1)
WHEN  ('ClientSideTriggers:TABLES') (1)
WHEN  ('ClientSideTriggers:TCQW_ELEMENTS') (1)
WHEN  ('ClientSideTriggers:TCQW_FIELDS') (1)
WHEN  ('ClientSideTriggers:TCQW_QUERIES') (1)
WHEN  ('ClientSideTriggers:TRANFORM') (1)
WHEN  ('ClientSideTriggers:TRANHIST') (1)
WHEN  ('ClientSideTriggers:TRAVDETL') (1)
WHEN  ('ClientSideTriggers:TRAVHEAD') (1)
WHEN  ('ClientSideTriggers:TRNGROUP') (1)
WHEN  ('ClientSideTriggers:UNITMEAS') (1)
WHEN  ('ClientSideTriggers:USERHIST') (1)
WHEN  ('ClientSideTriggers:USERREPT') (1)
WHEN  ('ClientSideTriggers:USERS') (1)
WHEN  ('ClientSideTriggers:USERS2') (1)
WHEN  ('ClientSideTriggers:VIPFILE') (1)
WHEN  ('ClientSideTriggers:WORKAREA') (1)
WHEN  ('ClientSideTriggers:ZIPCODES') (1)
WHEN  ('ErrorManager') (1)
WHEN  ('ErrorStatusManager') (1)
WHEN  ('FuzzyMatcher') (1)
WHEN  ('INIManager') (1)
WHEN  ('Translator') (1)

%ABCBaseClass DEPEND %ClassItem DEFAULT TIMES 148
WHEN  ('ClientSideTriggers:') ('')
WHEN  ('ClientSideTriggers:ACCEXPT') ('')
WHEN  ('ClientSideTriggers:ACCGROUP') ('')
WHEN  ('ClientSideTriggers:ACCGRP') ('')
WHEN  ('ClientSideTriggers:ACCHIST') ('')
WHEN  ('ClientSideTriggers:ACCHIST2') ('')
WHEN  ('ClientSideTriggers:ACCOUNTL') ('')
WHEN  ('ClientSideTriggers:ACCOUNTS') ('')
WHEN  ('ClientSideTriggers:ADVANCE') ('')
WHEN  ('ClientSideTriggers:APPLOG') ('')
WHEN  ('ClientSideTriggers:CALMEMO') ('')
WHEN  ('ClientSideTriggers:CATEGORY') ('')
WHEN  ('ClientSideTriggers:CCAUDIT') ('')
WHEN  ('ClientSideTriggers:CHARTDAT') ('')
WHEN  ('ClientSideTriggers:CHARTDEF') ('')
WHEN  ('ClientSideTriggers:CITYDT') ('')
WHEN  ('ClientSideTriggers:CITYHD') ('')
WHEN  ('ClientSideTriggers:CITYPY') ('')
WHEN  ('ClientSideTriggers:CITYPYDT') ('')
WHEN  ('ClientSideTriggers:CONFIG') ('')
WHEN  ('ClientSideTriggers:DAILYACT') ('')
WHEN  ('ClientSideTriggers:DATAAREA') ('')
WHEN  ('ClientSideTriggers:DEMHIST') ('')
WHEN  ('ClientSideTriggers:DEMHIST2') ('')
WHEN  ('ClientSideTriggers:DENIALS') ('')
WHEN  ('ClientSideTriggers:FOLIOAUT') ('')
WHEN  ('ClientSideTriggers:FOLIODT') ('')
WHEN  ('ClientSideTriggers:FOLIOHD') ('')
WHEN  ('ClientSideTriggers:FOLIOTRN') ('')
WHEN  ('ClientSideTriggers:FORECAST') ('')
WHEN  ('ClientSideTriggers:GROUPDTL') ('')
WHEN  ('ClientSideTriggers:GROUPS') ('')
WHEN  ('ClientSideTriggers:GROUPSLS') ('')
WHEN  ('ClientSideTriggers:HISTDT') ('')
WHEN  ('ClientSideTriggers:HISTHD') ('')
WHEN  ('ClientSideTriggers:HISTTRN') ('')
WHEN  ('ClientSideTriggers:INNWEB') ('')
WHEN  ('ClientSideTriggers:INVDTL') ('')
WHEN  ('ClientSideTriggers:INVHDR') ('')
WHEN  ('ClientSideTriggers:INVMDR') ('')
WHEN  ('ClientSideTriggers:INVSALE') ('')
WHEN  ('ClientSideTriggers:IRTABLE1') ('')
WHEN  ('ClientSideTriggers:IRTABLE2') ('')
WHEN  ('ClientSideTriggers:IRTABLE3') ('')
WHEN  ('ClientSideTriggers:IRTABLE4') ('')
WHEN  ('ClientSideTriggers:IRTABLE5') ('')
WHEN  ('ClientSideTriggers:IRTABLE6') ('')
WHEN  ('ClientSideTriggers:IRTABLE7') ('')
WHEN  ('ClientSideTriggers:IRTABLE8') ('')
WHEN  ('ClientSideTriggers:IRTABLE9') ('')
WHEN  ('ClientSideTriggers:IRTABLEJ') ('')
WHEN  ('ClientSideTriggers:JOURNAL') ('')
WHEN  ('ClientSideTriggers:JOURNAL1') ('')
WHEN  ('ClientSideTriggers:JOURNAL2') ('')
WHEN  ('ClientSideTriggers:JOURNALH') ('')
WHEN  ('ClientSideTriggers:KEYLOCKS') ('')
WHEN  ('ClientSideTriggers:LOCATION') ('')
WHEN  ('ClientSideTriggers:LOSTF') ('')
WHEN  ('ClientSideTriggers:MAILDETL') ('')
WHEN  ('ClientSideTriggers:MAILFILE') ('')
WHEN  ('ClientSideTriggers:MAILHEAD') ('')
WHEN  ('ClientSideTriggers:MAILMRGE') ('')
WHEN  ('ClientSideTriggers:MAINJOUR') ('')
WHEN  ('ClientSideTriggers:MAINLOG') ('')
WHEN  ('ClientSideTriggers:MANUFACT') ('')
WHEN  ('ClientSideTriggers:MESHEAD') ('')
WHEN  ('ClientSideTriggers:MODCAT') ('')
WHEN  ('ClientSideTriggers:MODOBJ') ('')
WHEN  ('ClientSideTriggers:ODBCDriver') ('')
WHEN  ('ClientSideTriggers:ONORDER') ('')
WHEN  ('ClientSideTriggers:OTHERCHARGE') ('')
WHEN  ('ClientSideTriggers:PACKAGE') ('')
WHEN  ('ClientSideTriggers:PCENTERC') ('')
WHEN  ('ClientSideTriggers:PCENTERG') ('')
WHEN  ('ClientSideTriggers:PCENTERT') ('')
WHEN  ('ClientSideTriggers:POSLOG') ('')
WHEN  ('ClientSideTriggers:POSMSG') ('')
WHEN  ('ClientSideTriggers:POSSAVE') ('')
WHEN  ('ClientSideTriggers:POSSPEC') ('')
WHEN  ('ClientSideTriggers:POSTABLE') ('')
WHEN  ('ClientSideTriggers:POSTAUDIT') ('')
WHEN  ('ClientSideTriggers:POSTBID') ('')
WHEN  ('ClientSideTriggers:POSTBUFF') ('')
WHEN  ('ClientSideTriggers:POSTCFIG') ('')
WHEN  ('ClientSideTriggers:POSTCHRG') ('')
WHEN  ('ClientSideTriggers:POSTIPS') ('')
WHEN  ('ClientSideTriggers:POSTLOG') ('')
WHEN  ('ClientSideTriggers:POSTOVR') ('')
WHEN  ('ClientSideTriggers:POSVOIDS') ('')
WHEN  ('ClientSideTriggers:PRINTERS') ('')
WHEN  ('ClientSideTriggers:PSHELD') ('')
WHEN  ('ClientSideTriggers:PSHOLD') ('')
WHEN  ('ClientSideTriggers:PSLOGHD') ('')
WHEN  ('ClientSideTriggers:PSPOST') ('')
WHEN  ('ClientSideTriggers:PSTMTBL') ('')
WHEN  ('ClientSideTriggers:PassBook') ('')
WHEN  ('ClientSideTriggers:PlusWrk1') ('')
WHEN  ('ClientSideTriggers:PlusWrk3') ('')
WHEN  ('ClientSideTriggers:PlusWrk3B') ('')
WHEN  ('ClientSideTriggers:RATES') ('')
WHEN  ('ClientSideTriggers:RATHIST') ('')
WHEN  ('ClientSideTriggers:RATHIST2') ('')
WHEN  ('ClientSideTriggers:REPORTS') ('')
WHEN  ('ClientSideTriggers:REPORTSH') ('')
WHEN  ('ClientSideTriggers:RESERVE') ('')
WHEN  ('ClientSideTriggers:RESRULES') ('')
WHEN  ('ClientSideTriggers:ROOMANAL') ('')
WHEN  ('ClientSideTriggers:ROOMBOOK') ('')
WHEN  ('ClientSideTriggers:ROOMLIST') ('')
WHEN  ('ClientSideTriggers:ROOMS') ('')
WHEN  ('ClientSideTriggers:ROOMSOLD') ('')
WHEN  ('ClientSideTriggers:RUNTIMES') ('')
WHEN  ('ClientSideTriggers:RWReport') ('')
WHEN  ('ClientSideTriggers:SALESPER') ('')
WHEN  ('ClientSideTriggers:SERVICES') ('')
WHEN  ('ClientSideTriggers:SHISTORY') ('')
WHEN  ('ClientSideTriggers:SQLFILE') ('')
WHEN  ('ClientSideTriggers:SQLFILE2') ('')
WHEN  ('ClientSideTriggers:STALOC') ('')
WHEN  ('ClientSideTriggers:STANDMSG') ('')
WHEN  ('ClientSideTriggers:STAYHIST') ('')
WHEN  ('ClientSideTriggers:SUBCATEG') ('')
WHEN  ('ClientSideTriggers:SUBGRP') ('')
WHEN  ('ClientSideTriggers:SUBNAME') ('')
WHEN  ('ClientSideTriggers:StandText') ('')
WHEN  ('ClientSideTriggers:StandText2') ('')
WHEN  ('ClientSideTriggers:TABLES') ('')
WHEN  ('ClientSideTriggers:TCQW_ELEMENTS') ('')
WHEN  ('ClientSideTriggers:TCQW_FIELDS') ('')
WHEN  ('ClientSideTriggers:TCQW_QUERIES') ('')
WHEN  ('ClientSideTriggers:TRANFORM') ('')
WHEN  ('ClientSideTriggers:TRANHIST') ('')
WHEN  ('ClientSideTriggers:TRAVDETL') ('')
WHEN  ('ClientSideTriggers:TRAVHEAD') ('')
WHEN  ('ClientSideTriggers:TRNGROUP') ('')
WHEN  ('ClientSideTriggers:UNITMEAS') ('')
WHEN  ('ClientSideTriggers:USERHIST') ('')
WHEN  ('ClientSideTriggers:USERREPT') ('')
WHEN  ('ClientSideTriggers:USERS') ('')
WHEN  ('ClientSideTriggers:USERS2') ('')
WHEN  ('ClientSideTriggers:VIPFILE') ('')
WHEN  ('ClientSideTriggers:WORKAREA') ('')
WHEN  ('ClientSideTriggers:ZIPCODES') ('')
WHEN  ('ErrorManager') ('')
WHEN  ('ErrorStatusManager') ('')
WHEN  ('FuzzyMatcher') ('')
WHEN  ('INIManager') ('')
WHEN  ('Translator') ('')

%ExtBaseClass DEPEND %ClassItem DEFAULT TIMES 0

%BaseClassIncludeFile DEPEND %ClassItem DEFAULT TIMES 0

%DeriveFromBaseClass DEPEND %ClassItem LONG TIMES 148
WHEN  ('ClientSideTriggers:') (0)
WHEN  ('ClientSideTriggers:ACCEXPT') (0)
WHEN  ('ClientSideTriggers:ACCGROUP') (0)
WHEN  ('ClientSideTriggers:ACCGRP') (0)
WHEN  ('ClientSideTriggers:ACCHIST') (0)
WHEN  ('ClientSideTriggers:ACCHIST2') (0)
WHEN  ('ClientSideTriggers:ACCOUNTL') (0)
WHEN  ('ClientSideTriggers:ACCOUNTS') (0)
WHEN  ('ClientSideTriggers:ADVANCE') (0)
WHEN  ('ClientSideTriggers:APPLOG') (0)
WHEN  ('ClientSideTriggers:CALMEMO') (0)
WHEN  ('ClientSideTriggers:CATEGORY') (0)
WHEN  ('ClientSideTriggers:CCAUDIT') (0)
WHEN  ('ClientSideTriggers:CHARTDAT') (0)
WHEN  ('ClientSideTriggers:CHARTDEF') (0)
WHEN  ('ClientSideTriggers:CITYDT') (0)
WHEN  ('ClientSideTriggers:CITYHD') (0)
WHEN  ('ClientSideTriggers:CITYPY') (0)
WHEN  ('ClientSideTriggers:CITYPYDT') (0)
WHEN  ('ClientSideTriggers:CONFIG') (0)
WHEN  ('ClientSideTriggers:DAILYACT') (0)
WHEN  ('ClientSideTriggers:DATAAREA') (0)
WHEN  ('ClientSideTriggers:DEMHIST') (0)
WHEN  ('ClientSideTriggers:DEMHIST2') (0)
WHEN  ('ClientSideTriggers:DENIALS') (0)
WHEN  ('ClientSideTriggers:FOLIOAUT') (0)
WHEN  ('ClientSideTriggers:FOLIODT') (0)
WHEN  ('ClientSideTriggers:FOLIOHD') (0)
WHEN  ('ClientSideTriggers:FOLIOTRN') (0)
WHEN  ('ClientSideTriggers:FORECAST') (0)
WHEN  ('ClientSideTriggers:GROUPDTL') (0)
WHEN  ('ClientSideTriggers:GROUPS') (0)
WHEN  ('ClientSideTriggers:GROUPSLS') (0)
WHEN  ('ClientSideTriggers:HISTDT') (0)
WHEN  ('ClientSideTriggers:HISTHD') (0)
WHEN  ('ClientSideTriggers:HISTTRN') (0)
WHEN  ('ClientSideTriggers:INNWEB') (0)
WHEN  ('ClientSideTriggers:INVDTL') (0)
WHEN  ('ClientSideTriggers:INVHDR') (0)
WHEN  ('ClientSideTriggers:INVMDR') (0)
WHEN  ('ClientSideTriggers:INVSALE') (0)
WHEN  ('ClientSideTriggers:IRTABLE1') (0)
WHEN  ('ClientSideTriggers:IRTABLE2') (0)
WHEN  ('ClientSideTriggers:IRTABLE3') (0)
WHEN  ('ClientSideTriggers:IRTABLE4') (0)
WHEN  ('ClientSideTriggers:IRTABLE5') (0)
WHEN  ('ClientSideTriggers:IRTABLE6') (0)
WHEN  ('ClientSideTriggers:IRTABLE7') (0)
WHEN  ('ClientSideTriggers:IRTABLE8') (0)
WHEN  ('ClientSideTriggers:IRTABLE9') (0)
WHEN  ('ClientSideTriggers:IRTABLEJ') (0)
WHEN  ('ClientSideTriggers:JOURNAL') (0)
WHEN  ('ClientSideTriggers:JOURNAL1') (0)
WHEN  ('ClientSideTriggers:JOURNAL2') (0)
WHEN  ('ClientSideTriggers:JOURNALH') (0)
WHEN  ('ClientSideTriggers:KEYLOCKS') (0)
WHEN  ('ClientSideTriggers:LOCATION') (0)
WHEN  ('ClientSideTriggers:LOSTF') (0)
WHEN  ('ClientSideTriggers:MAILDETL') (0)
WHEN  ('ClientSideTriggers:MAILFILE') (0)
WHEN  ('ClientSideTriggers:MAILHEAD') (0)
WHEN  ('ClientSideTriggers:MAILMRGE') (0)
WHEN  ('ClientSideTriggers:MAINJOUR') (0)
WHEN  ('ClientSideTriggers:MAINLOG') (0)
WHEN  ('ClientSideTriggers:MANUFACT') (0)
WHEN  ('ClientSideTriggers:MESHEAD') (0)
WHEN  ('ClientSideTriggers:MODCAT') (0)
WHEN  ('ClientSideTriggers:MODOBJ') (0)
WHEN  ('ClientSideTriggers:ODBCDriver') (0)
WHEN  ('ClientSideTriggers:ONORDER') (0)
WHEN  ('ClientSideTriggers:OTHERCHARGE') (0)
WHEN  ('ClientSideTriggers:PACKAGE') (0)
WHEN  ('ClientSideTriggers:PCENTERC') (0)
WHEN  ('ClientSideTriggers:PCENTERG') (0)
WHEN  ('ClientSideTriggers:PCENTERT') (0)
WHEN  ('ClientSideTriggers:POSLOG') (0)
WHEN  ('ClientSideTriggers:POSMSG') (0)
WHEN  ('ClientSideTriggers:POSSAVE') (0)
WHEN  ('ClientSideTriggers:POSSPEC') (0)
WHEN  ('ClientSideTriggers:POSTABLE') (0)
WHEN  ('ClientSideTriggers:POSTAUDIT') (0)
WHEN  ('ClientSideTriggers:POSTBID') (0)
WHEN  ('ClientSideTriggers:POSTBUFF') (0)
WHEN  ('ClientSideTriggers:POSTCFIG') (0)
WHEN  ('ClientSideTriggers:POSTCHRG') (0)
WHEN  ('ClientSideTriggers:POSTIPS') (0)
WHEN  ('ClientSideTriggers:POSTLOG') (0)
WHEN  ('ClientSideTriggers:POSTOVR') (0)
WHEN  ('ClientSideTriggers:POSVOIDS') (0)
WHEN  ('ClientSideTriggers:PRINTERS') (0)
WHEN  ('ClientSideTriggers:PSHELD') (0)
WHEN  ('ClientSideTriggers:PSHOLD') (0)
WHEN  ('ClientSideTriggers:PSLOGHD') (0)
WHEN  ('ClientSideTriggers:PSPOST') (0)
WHEN  ('ClientSideTriggers:PSTMTBL') (0)
WHEN  ('ClientSideTriggers:PassBook') (0)
WHEN  ('ClientSideTriggers:PlusWrk1') (0)
WHEN  ('ClientSideTriggers:PlusWrk3') (0)
WHEN  ('ClientSideTriggers:PlusWrk3B') (0)
WHEN  ('ClientSideTriggers:RATES') (0)
WHEN  ('ClientSideTriggers:RATHIST') (0)
WHEN  ('ClientSideTriggers:RATHIST2') (0)
WHEN  ('ClientSideTriggers:REPORTS') (0)
WHEN  ('ClientSideTriggers:REPORTSH') (0)
WHEN  ('ClientSideTriggers:RESERVE') (0)
WHEN  ('ClientSideTriggers:RESRULES') (0)
WHEN  ('ClientSideTriggers:ROOMANAL') (0)
WHEN  ('ClientSideTriggers:ROOMBOOK') (0)
WHEN  ('ClientSideTriggers:ROOMLIST') (0)
WHEN  ('ClientSideTriggers:ROOMS') (0)
WHEN  ('ClientSideTriggers:ROOMSOLD') (0)
WHEN  ('ClientSideTriggers:RUNTIMES') (0)
WHEN  ('ClientSideTriggers:RWReport') (0)
WHEN  ('ClientSideTriggers:SALESPER') (0)
WHEN  ('ClientSideTriggers:SERVICES') (0)
WHEN  ('ClientSideTriggers:SHISTORY') (0)
WHEN  ('ClientSideTriggers:SQLFILE') (0)
WHEN  ('ClientSideTriggers:SQLFILE2') (0)
WHEN  ('ClientSideTriggers:STALOC') (0)
WHEN  ('ClientSideTriggers:STANDMSG') (0)
WHEN  ('ClientSideTriggers:STAYHIST') (0)
WHEN  ('ClientSideTriggers:SUBCATEG') (0)
WHEN  ('ClientSideTriggers:SUBGRP') (0)
WHEN  ('ClientSideTriggers:SUBNAME') (0)
WHEN  ('ClientSideTriggers:StandText') (0)
WHEN  ('ClientSideTriggers:StandText2') (0)
WHEN  ('ClientSideTriggers:TABLES') (0)
WHEN  ('ClientSideTriggers:TCQW_ELEMENTS') (0)
WHEN  ('ClientSideTriggers:TCQW_FIELDS') (0)
WHEN  ('ClientSideTriggers:TCQW_QUERIES') (0)
WHEN  ('ClientSideTriggers:TRANFORM') (0)
WHEN  ('ClientSideTriggers:TRANHIST') (0)
WHEN  ('ClientSideTriggers:TRAVDETL') (0)
WHEN  ('ClientSideTriggers:TRAVHEAD') (0)
WHEN  ('ClientSideTriggers:TRNGROUP') (0)
WHEN  ('ClientSideTriggers:UNITMEAS') (0)
WHEN  ('ClientSideTriggers:USERHIST') (0)
WHEN  ('ClientSideTriggers:USERREPT') (0)
WHEN  ('ClientSideTriggers:USERS') (0)
WHEN  ('ClientSideTriggers:USERS2') (0)
WHEN  ('ClientSideTriggers:VIPFILE') (0)
WHEN  ('ClientSideTriggers:WORKAREA') (0)
WHEN  ('ClientSideTriggers:ZIPCODES') (0)
WHEN  ('ErrorManager') (0)
WHEN  ('ErrorStatusManager') (0)
WHEN  ('FuzzyMatcher') (0)
WHEN  ('INIManager') (0)
WHEN  ('Translator') (0)

%NewMethods DEPEND %ClassItem MULTI LONG TIMES 0

%NewMethodName DEPEND %NewMethods DEFAULT TIMES 0

%NewMethodPrototype DEPEND %NewMethods DEFAULT TIMES 0

%NewClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%NewClassProperty DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataType DEPEND %NewClassPropertyItems DEFAULT TIMES 2
WHEN  ('ClientSideTriggers:')TIMES 0
WHEN  ('Translator')TIMES 0

%NewClassOtherType DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataIsRef DEPEND %NewClassPropertyItems LONG TIMES 0

%NewClassDataSize DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim1 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim2 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim3 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim4 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%ClassMethods DEPEND %ClassItem MULTI LONG TIMES 0

%ClassMethodName DEPEND %ClassMethods DEFAULT TIMES 0

%ClassMethodPrototype DEPEND %ClassMethods DEFAULT TIMES 0

%ClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%ClassProperty DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataType DEPEND %ClassPropertyItems DEFAULT TIMES 2
WHEN  ('ClientSideTriggers:')TIMES 0
WHEN  ('Translator')TIMES 0

%ClassOtherType DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataIsRef DEPEND %ClassPropertyItems LONG TIMES 0

%ClassDataSize DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim1 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim2 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim3 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim4 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%OverrideThreaded DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideCreate DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideExternal DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideLocalExternal DEPEND %File LONG TIMES 0

%OverrideExternalSource DEPEND %File DEFAULT TIMES 0

%OverrideExternalAPP DEPEND %File LONG TIMES 0

%OverrideExport DEPEND %File LONG TIMES 0

%FileDeclarationMode DEPEND %File DEFAULT TIMES 0

%FileDeclarationType DEPEND %File LONG TIMES 0

%FileDeclarationThread DEPEND %File LONG TIMES 0

%FileDeclarationBindable DEPEND %File LONG TIMES 0

%FileDeclarationName DEPEND %File DEFAULT TIMES 0

%FileDeclarationOver DEPEND %File DEFAULT TIMES 0

%OverrideOpenMode DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideUserAccess DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideOtherAccess DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%OverrideLazyOpen DEPEND %File DEFAULT TIMES 0

%OverrideDoNotAssertOnCloseMisuse DEPEND %File LONG TIMES 0

%StandardExternalModule DEPEND %Module LONG TIMES 0

%NoGenerateGlobals LONG  (0)
%WindowManagerType DEFAULT  ('WindowManager')
%ResetOnGainFocus LONG  (0)
%AutoToolbar LONG  (1)
%AutoRefresh LONG  (1)
%ImageClass DEFAULT  ('ImageManager')
%ErrorStatusManagerType DEFAULT  ('ErrorStatusClass')
%ErrorManagerType DEFAULT  ('ErrorClass')
%DefaultErrorCategory DEFAULT  ('ABC')
%AllowSelectCopy LONG  (0)
%StoreErrorHistory LONG  (0)
%LimitStoredHistory LONG  (0)
%ErrorHistoryThreshold DEFAULT  ('300')
%HistoryViewTrigger DEFAULT  ('Level:Fatal')
%PopupClass DEFAULT  ('PopupClass')
%SelectFileClass DEFAULT  ('SelectFileClass')
%ResizerType DEFAULT  ('WindowResizeClass')
%ResizerDeFaultFindParents LONG  (1)
%ResizerDefaultOptimizeMoves LONG  (1)
%ResizerDefaultOptimizeRedraws LONG  (1)
%INIClass DEFAULT  ('INIClass')
%RunTimeTranslatorType DEFAULT  ('TranslatorClass')
%ExtractionFilename DEFAULT  ('')
%TranslationGroups MULTI LONG  ()
%TranslationFile DEPEND %TranslationGroups DEFAULT TIMES 0

%TranslationGroup DEPEND %TranslationGroups DEFAULT TIMES 0

%CalendarManagerType DEFAULT  ('CalendarClass')
%GlobalChangeColor LONG  (0)
%GlobalColorSunday LONG  (255)
%GlobalColorSaturday LONG  (255)
%GlobalColorHoliday LONG  (32768)
%GlobalColorOther LONG  (0)
%GlobalSelectOnClose DEFAULT  ('Select')
%GlobalUseABCClasess LONG  (0)
%FileManagerType DEFAULT  ('FileManager')
%ViewManagerType DEFAULT  ('ViewManager')
%RelationManagerType DEFAULT  ('RelationManager')
%BrowserType DEFAULT  ('BrowseClass')
%ActiveInvisible LONG  (0)
%AllowUnfilled LONG  (0)
%RetainRow LONG  (1)
%FileDropManagerType DEFAULT  ('FileDropClass')
%FileDropComboManagerType DEFAULT  ('FileDropComboClass')
%FormVCRManagerType DEFAULT  ('FormVCRClass')
%BrowseEIPManagerType DEFAULT  ('BrowseEIPManager')
%EditInPlaceInterface DEFAULT  ('Original')
%EditInPlaceType DEFAULT  ('EditEntryClass')
%EditInPlaceEntryType DEFAULT  ('EditEntryClass')
%EditInPlaceTextType DEFAULT  ('EditTextClass')
%EditInPlaceCheckType DEFAULT  ('EditCheckClass')
%EditInPlaceSpinType DEFAULT  ('EditSpinClass')
%EditInPlaceDropListType DEFAULT  ('EditDropListClass')
%EditInPlaceDropComboType DEFAULT  ('EditDropComboClass')
%EditInPlaceColorType DEFAULT  ('EditColorClass')
%EditInPlaceFileType DEFAULT  ('EditFileClass')
%EditInPlaceFontType DEFAULT  ('EditFontClass')
%EditInPlaceMultiSelectType DEFAULT  ('EditMultiSelectClass')
%EditInPlaceCalendarType DEFAULT  ('EditCalendarClass')
%EditInPlaceLookupType DEFAULT  ('EditLookupClass')
%EditInPlaceOtherType DEFAULT  ('EditEntryClass')
%QBEFormType DEFAULT  ('QueryFormClass')
%QBEFormVisualType DEFAULT  ('QueryFormVisual')
%QBEListType DEFAULT  ('QueryListClass')
%QBEListVisualType DEFAULT  ('QueryListVisual')
%StepManagerType DEFAULT  ('StepClass')
%StepManagerLongType DEFAULT  ('StepLongClass')
%StepManagerRealType DEFAULT  ('StepRealClass')
%StepManagerStringType DEFAULT  ('StepStringClass')
%StepManagerCustomType DEFAULT  ('StepCustomClass')
%StepLocatorType DEFAULT  ('StepLocatorClass')
%EntryLocatorType DEFAULT  ('EntryLocatorClass')
%IncrementalLocatorType DEFAULT  ('IncrementalLocatorClass')
%FilteredLocatorType DEFAULT  ('FilterLocatorClass')
%FuzzyMatcherClass DEFAULT  ('FuzzyClass')
%GridClass DEFAULT  ('GridClass')
%SidebarClass DEFAULT  ('SidebarClass')
%ProcessType DEFAULT  ('ProcessClass')
%PrintPreviewType DEFAULT  ('PrintPreviewClass')
%ReportManagerType DEFAULT  ('ReportManager')
%ReportTargetSelectorManagerType DEFAULT  ('ReportTargetSelectorClass')
%BreakManagerType DEFAULT  ('BreakManagerClass')
%AsciiViewerClass DEFAULT  ('AsciiViewerClass')
%AsciiSearchClass DEFAULT  ('AsciiSearchClass')
%AsciiPrintClass DEFAULT  ('AsciiPrintClass')
%AsciiFileManagerType DEFAULT  ('AsciiFileClass')
%ToolbarClass DEFAULT  ('ToolbarClass')
%ToolbarListBoxType DEFAULT  ('ToolbarListboxClass')
%ToolbarRelTreeType DEFAULT  ('ToolbarReltreeClass')
%ToolbarUpdateClassType DEFAULT  ('ToolbarUpdateClass')
%ToolbarFormVCRType DEFAULT  ('ToolbarFormVCRClass')
%OverrideAbcSettings LONG  (0)
%AbcSourceLocation DEFAULT  ('LINK')
%AbcLibraryName DEFAULT  ('')
%AppTemplateFamily DEFAULT  ('CLARION')
%CWTemplateVersion DEFAULT  ('v10.0')
%ABCVersion DEFAULT  ('6100')
%WindowFrameDragging LONG  (0)
%INIActive LONG  (0)
%GlobalReportPreviewMode DEFAULT  ('Procedure')
%GlobalReportPreview DEFAULT  ('ReportPreviewX')
%GlobalBrowseActiveInvisible LONG  (0)
%DefaultCloseFile DEFAULT  ('Close the File')
%WarnOnLogoutError LONG  (1)
%OverrideCloseFile DEPEND %File DEFAULT TIMES 1
WHEN  ('') ('Use Default')

%CWBrowseEIPManagerType DEFAULT  ('CWEIPManager')
%TriggersSupportEnableGlobal LONG  (0)
%TriggersManagerType DEFAULT  ('TriggerManager')
%ExtUIXPMenuEnable LONG  (0)
%ExtUIXPMenuColorType DEFAULT  ('XPLunaSilver')
%ExtUIXPMenuColorLeft LONG  (15920364)
%ExtUIXPMenuColorRight LONG  (12560039)
%ExtUIMDITab DEFAULT  ('DISABLE')
%ExtUIMDITabStyle DEFAULT  ('Default')
%ConfigFileVariable DEFAULT  ('')
%EnableExceptionMessage LONG  (0)
[EMBED]
EMBED %VerResourceValueList
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
Hq
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
ô}
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
 s
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
Hs
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
è
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
@
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
Í
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
0Ï
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
ðÎ
[END]
[END]
[ADDITION]
NAME cwVersionRes cwVersionRes
[INSTANCE]
INSTANCE 1
[PROMPTS]
%verCoName DEFAULT  ('iQ-XML')
%verCopyright DEFAULT  ('iQ-XML')
%verTrademarks DEFAULT  ('iQ-XML')
%verComments DEFAULT  ('')
%verExtProdVersion LONG  (0)
%verSourceFile DEFAULT  ('')
%verProdName DEFAULT  ('iQ-XML')
%verProdMajVer DEFAULT  ('4')
%verProdMinVer DEFAULT  ('4')
%verProdSubVer DEFAULT  ('2')
%verProdGenBuildNo LONG  (0)
%verProdBuildNo DEFAULT  ('0')
%verDesc DEFAULT  ('iQ-XML')
%verFileAsProdVersion LONG  (1)
%verIntName DEFAULT  ('iQ-XML')
%verFileMajVer DEFAULT  ('4')
%verFileMinVer DEFAULT  ('4')
%verFileSubVer DEFAULT  ('2')
%verFileGenBuildNo LONG  (1)
%verFileBuildNo DEFAULT  ('0')
%verFilePreRelease LONG  (0)
%verSelLangID DEFAULT  ('U.S. English')
%verSelCPID DEFAULT  ('Multilingual')
%verIncludeCW LONG  (1)
%verClarionVersion DEFAULT  ('10000')
%verTemplateFamily DEFAULT  ('CLARION')
%verTemplateVersion DEFAULT  ('v10.0')
%verUserLabel1 DEFAULT  ('')
%verUserValue1 DEFAULT  ('')
%verUserLabel2 DEFAULT  ('')
%verUserValue2 DEFAULT  ('')
%verUserLabel3 DEFAULT  ('')
%verUserValue3 DEFAULT  ('')
%verUserLabel4 DEFAULT  ('')
%verUserValue4 DEFAULT  ('')
[PERSIST]
%GenerationCompleted DEPEND %Module DEFAULT TIMES 18
WHEN  ('iqxml.clw') ('1')
WHEN  ('iqxml001.clw') ('1')
WHEN  ('iqxml002.clw') ('1')
WHEN  ('iqxml003.clw') ('1')
WHEN  ('iqxml004.clw') ('1')
WHEN  ('iqxml005.clw') ('1')
WHEN  ('iqxml006.clw') ('1')
WHEN  ('iqxml007.clw') ('1')
WHEN  ('iqxml008.clw') ('1')
WHEN  ('iqxml009.clw') ('1')
WHEN  ('iqxml010.clw') ('1')
WHEN  ('iqxml011.clw') ('1')
WHEN  ('iqxml012.clw') ('1')
WHEN  ('iqxml013.clw') ('1')
WHEN  ('iqxml014.clw') ('1')
WHEN  ('iqxml015.clw') ('1')
WHEN  ('iqxml016.clw') ('1')
WHEN  ('iqxml017.clw') ('1')

%LastTarget32 DEFAULT  ('1')
%LastProgramExtension DEFAULT  ('DLL')
%LastApplicationDebug DEFAULT  ('')
%LastApplicationLocalLibrary DEFAULT  ('')
[PROJECT]
-- NAMESPACE ClarionDefaultNamespace
#system win32 dll
#model clarion dll
#set RELEASE = on
#compile "iqxml.clw" -- GENERATED
#compile "iqxml001.clw" -- GENERATED
#compile "iqxml002.clw" -- GENERATED
#compile "iqxml003.clw" -- GENERATED
#compile "iqxml004.clw" -- GENERATED
#compile "iqxml005.clw" -- GENERATED
#compile "iqxml006.clw" -- GENERATED
#compile "iqxml007.clw" -- GENERATED
#compile "iqxml008.clw" -- GENERATED
#compile "iqxml009.clw" -- GENERATED
#compile "iqxml010.clw" -- GENERATED
#compile "iqxml011.clw" -- GENERATED
#compile "iqxml012.clw" -- GENERATED
#compile "iqxml013.clw" -- GENERATED
#compile "iqxml014.clw" -- GENERATED
#compile "iqxml015.clw" -- GENERATED
#compile "iqxml016.clw" -- GENERATED
#compile "iqxml017.clw" -- GENERATED
#compile "iqxml_RD.CLW" -- GENERATED
#compile "iqxml_RU.CLW" -- GENERATED
#compile "iqxml_SF.CLW" -- GENERATED
#pragma link("iqxml.Version") -- GENERATED
#link "iqxml.DLL"
[PROGRAM]
[COMMON]
FROM Clarion Clarion
MODIFIED '2016/07/09' '18:07:21'
[DATA]
[SCREENCONTROLS]
! PROMPT('GLO : XML XMLF ile Name:'),USE(?GLO:_XML_XMLFileName:Prompt)
! TEXT,USE(GLO:_XML_XMLFileName)
[REPORTCONTROLS]
! TEXT,USE(GLO:_XML_XMLFileName)
GLO:_XML_XMLFileName     STRING(384),THREAD
!!> GUID('c2fc6225-5bd1-42d1-93e0-c3a39c7d593e'),PROMPT('GLO : XML XMLF ile Name:'),HEADER('GLO : XML XMLF ile Name'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('GLO : Ski:'),USE(?GLO:SkipExtended:Prompt)
! ENTRY(@n3),USE(GLO:SkipExtended)
[REPORTCONTROLS]
! STRING(@n3),USE(GLO:SkipExtended)
GLO:SkipExtended         BYTE,THREAD
!!> GUID('39ec7e5e-8b67-429b-815b-f0c7aa663684'),PROMPT('GLO : Ski:'),HEADER('GLO : Ski'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('glo : XML xmlbinaryname:'),USE(?glo:_XML_xmlbinaryname:Prompt)
! TEXT,USE(glo:_XML_xmlbinaryname)
[REPORTCONTROLS]
! TEXT,USE(glo:_XML_xmlbinaryname)
glo:_XML_xmlbinaryname   STRING(384),THREAD
!!> GUID('de7ee873-3d6a-4e6b-bedf-bf878e908f09'),PROMPT('glo : XML xmlbinaryname:'),HEADER('glo : XML xmlbinaryname'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Glo : XML Last Loaded File:'),USE(?Glo:_XML_LastLoadedFile:Prompt)
! TEXT,USE(Glo:_XML_LastLoadedFile)
[REPORTCONTROLS]
! TEXT,USE(Glo:_XML_LastLoadedFile)
Glo:_XML_LastLoadedFile  STRING(384),THREAD
!!> GUID('0f875b13-2ac6-4752-9093-6db37e434f6f'),PROMPT('Glo : XML Last Loaded File:'),HEADER('Glo : XML Last Loaded File'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Glo : XML Skip Debug:'),USE(?Glo:_XML_SkipDebug:Prompt)
! ENTRY(@n3),USE(Glo:_XML_SkipDebug)
[REPORTCONTROLS]
! STRING(@n3),USE(Glo:_XML_SkipDebug)
Glo:_XML_SkipDebug       BYTE,THREAD
!!> GUID('e61d2a0c-7023-4c34-835a-d679c04f96e3'),PROMPT('Glo : XML Skip Debug:'),HEADER('Glo : XML Skip Debug'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('GLO : XML Last Error:'),USE(?GLO:_XML_LastError:Prompt)
! ENTRY(@n-7),USE(GLO:_XML_LastError),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(GLO:_XML_LastError),RIGHT(1)
GLO:_XML_LastError       SHORT,THREAD
!!> GUID('5952ee06-7992-4fbb-9dd7-ea1cb4ad6368'),PROMPT('GLO : XML Last Error:'),HEADER('GLO : XML Last Error'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('GLO : xml In Encoding:'),USE(?GLO:_xml_InEncoding:Prompt)
! ENTRY(@s19),USE(GLO:_xml_InEncoding)
[REPORTCONTROLS]
! STRING(@s19),USE(GLO:_xml_InEncoding)
GLO:_xml_InEncoding      CSTRING(20),THREAD
!!> GUID('03283283-40f3-4e2a-a7ec-3b5f7d69309c'),PROMPT('GLO : xml In Encoding:'),HEADER('GLO : xml In Encoding'),PICTURE(@s19)
[SCREENCONTROLS]
! PROMPT('GLO : xml In Encoding L:'),USE(?GLO:_xml_InEncodingL:Prompt)
! ENTRY(@n-14),USE(GLO:_xml_InEncodingL),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(GLO:_xml_InEncodingL),RIGHT(1)
GLO:_xml_InEncodingL     LONG,THREAD
!!> GUID('cf2d8429-9f12-4661-a601-37857f799860'),PROMPT('GLO : xml In Encoding L:'),HEADER('GLO : xml In Encoding L'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('GLO : xml In Write Encoding:'),USE(?GLO:_xml_InWriteEncoding:Prompt)
! ENTRY(@n3),USE(GLO:_xml_InWriteEncoding)
[REPORTCONTROLS]
! STRING(@n3),USE(GLO:_xml_InWriteEncoding)
GLO:_xml_InWriteEncoding BYTE,THREAD
!!> GUID('d7df1ab6-599a-4823-99a1-feb05be6a3a9'),PROMPT('GLO : xml In Write Encoding:'),HEADER('GLO : xml In Write Encoding'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('GLO : HTMLE ncoding:'),USE(?GLO:HTMLEncoding:Prompt)
! ENTRY(@n3),USE(GLO:HTMLEncoding)
[REPORTCONTROLS]
! STRING(@n3),USE(GLO:HTMLEncoding)
GLO:HTMLEncoding         BYTE,THREAD
!!> GUID('36ae692b-1f7b-4831-9972-763a56c75c37'),PROMPT('GLO : HTMLE ncoding:'),HEADER('GLO : HTMLE ncoding'),PICTURE(@n3),TYPEMODE(INS)
[EMBED]
EMBED %BeforeGlobalIncludes
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3500
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %GlobalMap
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 module('api')
    getDesktopWindow(),ULONG,PASCAL
    ShellExecute(UNSIGNED,*CSTRING,*CSTRING,*CSTRING,*CSTRING,SIGNED),UNSIGNED,PASCAL,RAW,PROC,NAME('ShellExecuteA')
    GetTimeZoneInformation(*XML_TimeZoneInfo),LONG,PROC,RAW,PASCAL,NAME('GetTimeZoneInformation')
    Sleep(ULong),PASCAL,DLL(DLL_MODE)
    GetSystemDirectory(*CSTRING,UNSIGNED),UNSIGNED,PASCAL,RAW,NAME('GetSystemDirectoryA')
    GetFileVersionInfoSize(Long,Long),Long,Raw,Pascal,Name('GetFileVersionInfoSizeA')
    GetFileVersionInfo(Long,Long,Long,Long),Bool,Raw,Pascal,Name('GetFileVersionInfoA')
    VerQueryValue(Long,Long,Long,Long),Bool,Raw,Pascal,Name('VerQueryValueA')
    memcpy(LONG,LONG,LONG),NAME('_memcpy'),DLL(dll_mode)
    GetSystemMetrics( SIGNED nIndex ),SIGNED,RAW,PASCAL
    GetDC(ULONG),ULONG,PASCAL,DLL(DLL_MODE)
    ReleaseDC(ULONG, ULONG),SIGNED,PASCAL ,DLL(DLL_MODE)
    GetDeviceCaps(ULONG, SIGNED),SIGNED,PASCAL ,DLL(DLL_MODE)
 end

 MODULE('SysInternals Debugger')
    OutputDebugString(ULong),Raw,Pascal,Name('OutputDebugStringA')
 END



[END]
EMBED %AfterFileDeclarations
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
XMLText            FILE,DRIVER('DOS' ),PRE(TXT),CREATE,NAME(glo:_XML_xmlfilename),THREAD
Record                   RECORD,PRE()
StandLine                   CSTRING(65519)
                         END
                     END

XMLBase64File           FILE,DRIVER('DOS'),PRE(B64),CREATE,NAME(glo:_XML_xmlbinaryname),THREAD
Record                   RECORD,PRE()
StandLine                   STRING(5700)
                         END
                     END
[END]
EMBED %AfterGlobalIncludes
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
XML_SYSTEMTIME   GROUP,TYPE
wYear          USHORT
wMonth         USHORT
wDayOfWeek     USHORT
wDay           USHORT
wHour          USHORT
wMinute        USHORT
wSecond        USHORT
wMilliSecond   USHORT
             END

XML_TimeZoneInfo GROUP,TYPE
Bias           LONG
StandardName   USHORT,DIM(32)
StandardDate   LIKE(XML_SYSTEMTIME)
StandardBias   LONG
DayLightName   USHORT,DIM(32)
DayLightDate   LIKE(XML_SYSTEMTIME)
DayLightBias   LONG
             END


[END]
[END]
[END]
[MODULE]
[COMMON]
DESCRIPTION 'Parser Functions'
FROM Clarion GENERATED
MODIFIED '2017/07/14' '18:03:53'
[DATA]
[SCREENCONTROLS]
! PROMPT('Max Level:'),USE(?MaxLevel:Prompt)
! ENTRY(@n-14),USE(MaxLevel),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(MaxLevel),RIGHT(1)
MaxLevel                 LONG,THREAD
!!> GUID('2c7d9e0a-a13d-486e-9a7c-ffe43bd60656'),PROMPT('Max Level:'),HEADER('Max Level'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Current Index:'),USE(?CurrentIndex:Prompt)
! ENTRY(@n-14),USE(CurrentIndex),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(CurrentIndex),RIGHT(1)
CurrentIndex             LONG,THREAD
!!> GUID('f2d46feb-c6c7-487d-a14e-e0ad5970302c'),PROMPT('Current Index:'),HEADER('Current Index'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('XQ ue:'),USE(?XQue:Prompt)
! ENTRY(@s255),USE(XQue)
[REPORTCONTROLS]
! STRING(@s255),USE(XQue)
XQue                     QUEUE,PRE(Q),THREAD
!!> GUID('2f6f3843-a20b-4aa3-af1f-4738e59c68f5'),PROMPT('XQ ue:'),HEADER('XQ ue'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT(''),USE(?Q:Element:Prompt)
! ENTRY(@s128),USE(Q:ELEMENT)
[REPORTCONTROLS]
! STRING(@s128),USE(Q:ELEMENT)
Element                    STRING(128),DIM(64)
!!> GUID('c3ed7e35-be9a-4bbe-8ea1-0ed2aa766bf7'),PROMPT('Element:'),HEADER('Element'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT(''),USE(?Q:V1:Prompt)
! TEXT,USE(q:v1)
[REPORTCONTROLS]
! TEXT,USE(q:v1)
V1                         CSTRING(5001)
!!> GUID('0ad3e7a4-4645-4669-bbee-8292008368f1'),PROMPT('V 1:'),HEADER('V 1'),PICTURE(@s255)
                         END
!!> GUID('ef1defed-4e85-43d6-9282-f89e8858dc1e')
[SCREENCONTROLS]
! PROMPT('Comment Queue:'),USE(?CommentQueue:Prompt)
! ENTRY(@s20),USE(CommentQueue)
[REPORTCONTROLS]
! STRING(@s20),USE(CommentQueue)
CommentQueue             QUEUE,PRE(CQ),THREAD
!!> GUID('4852fa90-104e-4dcb-850e-24689c4a7eb6'),PROMPT('Comment Queue:'),HEADER('Comment Queue'),PICTURE(@s20),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Comment String:'),USE(?CQ:CommentString:Prompt)
! ENTRY(@s255),USE(CQ:CommentString)
[REPORTCONTROLS]
! STRING(@s255),USE(CQ:CommentString)
CommentString              STRING(10240)
!!> GUID('2dabca42-d25b-430a-9978-3dfdf7c4dede'),PROMPT('Comment String:'),HEADER('Comment String'),PICTURE(@s255),TYPEMODE(INS)
                         END
!!> GUID('43457a94-340c-46ad-ab6a-ed9b180ed5c4')
[SCREENCONTROLS]
! PROMPT('Primary Queue:'),USE(?PrimaryQueue:Prompt)
! ENTRY(@s64),USE(PrimaryQueue)
[REPORTCONTROLS]
! STRING(@s64),USE(PrimaryQueue)
PrimaryQueue             QUEUE,PRE(PQ),THREAD
!!> GUID('b3d7f6f5-b849-43db-872d-0304e3ec4fd9'),PROMPT('Primary Queue:'),HEADER('Primary Queue'),PICTURE(@s64)
[SCREENCONTROLS]
! PROMPT('Field Name:'),USE(?PQ:FieldName:Prompt)
! ENTRY(@s128),USE(PQ:FieldName)
[REPORTCONTROLS]
! STRING(@s128),USE(PQ:FieldName)
FieldName                  STRING(128)
!!> GUID('1348ec91-29ee-46dc-9f7d-f616dda5cf2f'),PROMPT('Field Name:'),HEADER('Field Name'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('Field Text:'),USE(?PQ:FieldText:Prompt)
! ENTRY(@s10),USE(PQ:FieldText)
[REPORTCONTROLS]
! STRING(@s10),USE(PQ:FieldText)
FieldText                  STRING(10)
!!> GUID('f818fb05-0f0b-4599-a0ce-7847397c465f'),PROMPT('Field Text:'),HEADER('Field Text'),PICTURE(@s10)
[SCREENCONTROLS]
! PROMPT('Field Clear:'),USE(?PQ:FieldClear:Prompt)
! ENTRY(@n-7),USE(PQ:FieldClear),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(PQ:FieldClear),RIGHT(1)
FieldClear                 SHORT
!!> GUID('d56b1be3-62c6-4565-9219-3482f801681c'),PROMPT('Field Clear:'),HEADER('Field Clear'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Field Primed:'),USE(?PQ:FieldPrimed:Prompt)
! ENTRY(@n-7),USE(PQ:FieldPrimed),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(PQ:FieldPrimed),RIGHT(1)
FieldPrimed                SHORT
!!> GUID('a44e64f3-3911-4e41-b311-8b13f3b8bb32'),PROMPT('Field Primed:'),HEADER('Field Primed'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
                         END
!!> GUID('7de616f5-c491-43ef-9d21-542ff42e5219')
[SCREENCONTROLS]
! PROMPT('Primary FQ ueue:'),USE(?PrimaryFQueue:Prompt)
! ENTRY(@s255),USE(PrimaryFQueue)
[REPORTCONTROLS]
! STRING(@s255),USE(PrimaryFQueue)
PrimaryFQueue            QUEUE,PRE(PFQ),THREAD
!!> GUID('3a1bbf46-13ae-40b2-a5ab-ad4326462097'),PROMPT('Primary FQ ueue:'),HEADER('Primary FQ ueue'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Field Name:'),USE(?PFQ:FieldName:Prompt)
! ENTRY(@s128),USE(PFQ:FieldName)
[REPORTCONTROLS]
! STRING(@s128),USE(PFQ:FieldName)
FieldName                  STRING(128)
!!> GUID('46dfafed-9582-4d6d-95a6-6628cf78102d'),PROMPT('Field Name:'),HEADER('Field Name'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('Field Value:'),USE(?PFQ:FieldValue:Prompt)
! ENTRY(@s255),USE(PFQ:FieldValue)
[REPORTCONTROLS]
! STRING(@s255),USE(PFQ:FieldValue)
FieldValue                 STRING(255)
!!> GUID('1c552a0a-4b11-4e34-9ba8-17417e35cb14'),PROMPT('Field Value:'),HEADER('Field Value'),PICTURE(@s255)
                         END
!!> GUID('7fd791e7-5f1e-4313-be9b-4e9934ab045b')
[SCREENCONTROLS]
! PROMPT('Qualify Queue:'),USE(?QualifyQueue:Prompt)
! ENTRY(@s51),USE(QualifyQueue)
[REPORTCONTROLS]
! STRING(@s51),USE(QualifyQueue)
QualifyQueue             QUEUE,PRE(QL),THREAD
!!> GUID('3fe4edf7-5a40-4109-b755-ef2b89ddb59d'),PROMPT('Qualify Queue:'),HEADER('Qualify Queue'),PICTURE(@s51)
[SCREENCONTROLS]
! PROMPT('Field Name:'),USE(?QL:FieldName:Prompt)
! ENTRY(@s128),USE(QL:FieldName)
[REPORTCONTROLS]
! STRING(@s128),USE(QL:FieldName)
FieldName                  STRING(128)
!!> GUID('e990c91d-e5c3-4321-9f8e-da99089e12f8'),PROMPT('Field Name:'),HEADER('Field Name'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('Deep:'),USE(?QL:Deep:Prompt)
! ENTRY(@n3),USE(QL:Deep)
[REPORTCONTROLS]
! STRING(@n3),USE(QL:Deep)
Deep                       BYTE
!!> GUID('87116931-1758-4853-bab8-c2b4f09e65d4'),PROMPT('Deep:'),HEADER('Deep'),PICTURE(@n3)
                         END
!!> GUID('57bf5e0d-268e-415a-b3e8-aa891cd29fec')
[SCREENCONTROLS]
! PROMPT('Attribute Queue:'),USE(?AttributeQueue:Prompt)
! ENTRY(@s73),USE(AttributeQueue)
[REPORTCONTROLS]
! STRING(@s73),USE(AttributeQueue)
AttributeQueue           QUEUE,PRE(AT),THREAD
!!> GUID('a83d20c0-5584-475b-977a-1b0b8c1b2a3a'),PROMPT('Attribute Queue:'),HEADER('Attribute Queue'),PICTURE(@s73)
[SCREENCONTROLS]
! PROMPT('Field Name:'),USE(?AT:FieldName:Prompt)
! ENTRY(@s128),USE(AT:FieldName)
[REPORTCONTROLS]
! STRING(@s128),USE(AT:FieldName)
FieldName                  STRING(128)
!!> GUID('cb14876a-77f8-41d7-9f0e-3d6e0a075d12'),PROMPT('Field Name:'),HEADER('Field Name'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('Required:'),USE(?AT:Required:Prompt)
! ENTRY(@n3),USE(AT:Required)
[REPORTCONTROLS]
! STRING(@n3),USE(AT:Required)
Required                   BYTE
!!> GUID('f4df0d34-5610-484b-93ac-3be208858170'),PROMPT('Required:'),HEADER('Required'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Picture:'),USE(?AT:Picture:Prompt)
! ENTRY(@s19),USE(AT:Picture)
[REPORTCONTROLS]
! STRING(@s19),USE(AT:Picture)
Picture                    CSTRING(20)
!!> GUID('a51780ad-9940-467a-9223-52f08c24d082'),PROMPT('Picture:'),HEADER('Picture'),PICTURE(@s19)
[SCREENCONTROLS]
! PROMPT('Force Write:'),USE(?AT:ForceWrite:Prompt)
! ENTRY(@n3),USE(AT:ForceWrite)
[REPORTCONTROLS]
! STRING(@n3),USE(AT:ForceWrite)
ForceWrite                 BYTE
!!> GUID('f040b6be-df60-4496-b10d-376e09930ac6'),PROMPT('Force Write:'),HEADER('Force Write'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Filled:'),USE(?AT:Filled:Prompt)
! ENTRY(@n3),USE(AT:Filled)
[REPORTCONTROLS]
! STRING(@n3),USE(AT:Filled)
Filled                     BYTE
!!> GUID('8cbc2296-f2ac-49a7-bdd6-5fb9679896b8'),PROMPT('Filled:'),HEADER('Filled'),PICTURE(@n3)
                         END
!!> GUID('585caa4c-c011-4213-b353-57d4542c5197')
[SCREENCONTROLS]
! PROMPT('Binary Queue:'),USE(?BinaryQueue:Prompt)
! ENTRY(@s255),USE(BinaryQueue)
[REPORTCONTROLS]
! STRING(@s255),USE(BinaryQueue)
BinaryQueue              QUEUE,PRE(BQUE),THREAD
!!> GUID('0be63678-6a1c-440f-baff-d2af5509c17a'),PROMPT('Binary Queue:'),HEADER('Binary Queue'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Field Name:'),USE(?BQUE:FieldName:Prompt)
! ENTRY(@s128),USE(BQUE:FieldName)
[REPORTCONTROLS]
! STRING(@s128),USE(BQUE:FieldName)
FieldName                  STRING(128)
!!> GUID('eb3231b1-a18e-4903-9373-af78b9be44eb'),PROMPT('Field Name:'),HEADER('Field Name'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('Directory:'),USE(?Directory:Prompt)
! ENTRY(@s255),USE(Directory)
[REPORTCONTROLS]
! STRING(@s255),USE(Directory)
Directory                  STRING(255)
!!> GUID('115e5761-8a43-4f3c-a2f6-a08fe94fe3d1'),PROMPT('Directory:'),HEADER('Directory'),PICTURE(@s255)
                         END
!!> GUID('579b3b8a-16da-4bd6-becf-79a164c96346')
[SCREENCONTROLS]
! PROMPT('Binary Objects:'),USE(?BinaryObjects:Prompt)
! ENTRY(@s255),USE(BinaryObjects)
[REPORTCONTROLS]
! STRING(@s255),USE(BinaryObjects)
BinaryObjects            QUEUE,PRE(obj),THREAD
!!> GUID('dc83d8d4-403c-497a-8dd2-3e01cd4334a5'),PROMPT('Binary Objects:'),HEADER('Binary Objects'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('filename:'),USE(?filename:Prompt)
! ENTRY(@s255),USE(filename)
[REPORTCONTROLS]
! STRING(@s255),USE(filename)
filename                   STRING(255)
!!> GUID('e0e69396-d657-4e5a-844c-998a68995655'),PROMPT('filename:'),HEADER('filename'),PICTURE(@s255)
                         END
!!> GUID('2a079057-ba4b-4e03-9628-69dd7b2c90a5')
[SCREENCONTROLS]
! PROMPT('Replace Queue:'),USE(?ReplaceQueue:Prompt)
! ENTRY(@s32),USE(ReplaceQueue)
[REPORTCONTROLS]
! STRING(@s32),USE(ReplaceQueue)
ReplaceQueue             QUEUE,PRE(RQ),THREAD
!!> GUID('f6106670-f76e-430d-a7a7-24606e29f353'),PROMPT('Replace Queue:'),HEADER('Replace Queue'),PICTURE(@s130)
[SCREENCONTROLS]
! PROMPT('Replace From:'),USE(?RQ:ReplaceFrom:Prompt)
! ENTRY(@s128),USE(RQ:ReplaceFrom)
[REPORTCONTROLS]
! STRING(@s128),USE(RQ:ReplaceFrom)
ReplaceFrom                CSTRING(129)
!!> GUID('be197491-4074-4db3-98d6-9aeea197f6aa'),PROMPT('Replace From:'),HEADER('Replace From'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('Replace To:'),USE(?RQ:ReplaceTo:Prompt)
! ENTRY(@s128),USE(RQ:ReplaceTo)
[REPORTCONTROLS]
! STRING(@s128),USE(RQ:ReplaceTo)
ReplaceTo                  CSTRING(129)
!!> GUID('49e8d83d-2c1c-4e5e-9bfc-c29e208e15af'),PROMPT('Replace To:'),HEADER('Replace To'),PICTURE(@s128)
                         END
!!> GUID('a82248e6-611f-4503-a1d1-6b96ee683111')
[SCREENCONTROLS]
! PROMPT('MOD : JSON:'),USE(?MOD:JSON:Prompt)
! ENTRY(@n3),USE(MOD:JSON)
[REPORTCONTROLS]
! STRING(@n3),USE(MOD:JSON)
MOD:JSON                 BYTE,THREAD
!!> GUID('16825425-4cb5-4786-912d-e2ae9c88f2fd'),PROMPT('MOD : JSON:'),HEADER('MOD : JSON'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('MOD : Binary Records:'),USE(?MOD:BinaryRecords:Prompt)
! ENTRY(@n-7),USE(MOD:BinaryRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(MOD:BinaryRecords),RIGHT(1)
MOD:BinaryRecords        SHORT,THREAD
!!> GUID('f0abab6e-d735-4f7a-a662-2adf145be7d7'),PROMPT('MOD : Binary Records:'),HEADER('MOD : Binary Records'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('MOD : Load Boundry:'),USE(?MOD:LoadBoundry:Prompt)
! ENTRY(@s128),USE(MOD:LoadBoundry)
[REPORTCONTROLS]
! STRING(@s128),USE(MOD:LoadBoundry)
MOD:LoadBoundry          STRING(128),THREAD
!!> GUID('6693979b-7d5d-48cb-acef-202bd25fb65a'),PROMPT('MOD : Load Boundry:'),HEADER('MOD : Load Boundry'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('MOD : Load Boundary X:'),USE(?MOD:LoadBoundaryX:Prompt)
! ENTRY(@n3),USE(MOD:LoadBoundaryX)
[REPORTCONTROLS]
! STRING(@n3),USE(MOD:LoadBoundaryX)
MOD:LoadBoundaryX        BYTE,THREAD
!!> GUID('d11bd3ea-dd86-4382-b9f7-985cc18b37a8'),PROMPT('MOD : Load Boundary X:'),HEADER('MOD : Load Boundary X'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('MOD : Load From File:'),USE(?MOD:LoadFromFile:Prompt)
! ENTRY(@n3),USE(MOD:LoadFromFile)
[REPORTCONTROLS]
! STRING(@n3),USE(MOD:LoadFromFile)
MOD:LoadFromFile         BYTE,THREAD
!!> GUID('8d9b48eb-d487-4c55-90c1-1a67f8162fd5'),PROMPT('MOD : Load From File:'),HEADER('MOD : Load From File'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('MOD : Progress Bytes:'),USE(?MOD:ProgressBytes:Prompt)
! ENTRY(@n-14),USE(MOD:ProgressBytes),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(MOD:ProgressBytes),RIGHT(1)
MOD:ProgressBytes        LONG,THREAD
!!> GUID('50feff3b-78f7-4886-b718-ae4584e40535'),PROMPT('MOD : Progress Bytes:'),HEADER('MOD : Progress Bytes'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('MOD : Progress String:'),USE(?MOD:ProgressString:Prompt)
! ENTRY(@s50),USE(MOD:ProgressString)
[REPORTCONTROLS]
! STRING(@s50),USE(MOD:ProgressString)
MOD:ProgressString       STRING(50),THREAD
!!> GUID('72efeeaf-754b-4335-8fc1-6705943322b9'),PROMPT('MOD : Progress String:'),HEADER('MOD : Progress String'),PICTURE(@s50)
[SCREENCONTROLS]
! PROMPT('MOD : Debug Walk:'),USE(?MOD:DebugWalk:Prompt)
! ENTRY(@n3),USE(MOD:DebugWalk)
[REPORTCONTROLS]
! STRING(@n3),USE(MOD:DebugWalk)
MOD:DebugWalk            BYTE,THREAD
!!> GUID('bc508993-3c46-4152-bc13-45f81969ccaf'),PROMPT('MOD : Debug Walk:'),HEADER('MOD : Debug Walk'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('MOD : Queue Active:'),USE(?MOD:QueueActive:Prompt)
! ENTRY(@n3),USE(MOD:QueueActive)
[REPORTCONTROLS]
! STRING(@n3),USE(MOD:QueueActive)
MOD:QueueActive          BYTE,THREAD
!!> GUID('5c2a8dcb-df2c-4bea-ac50-f86d14a81b2c'),PROMPT('MOD : Queue Active:'),HEADER('MOD : Queue Active'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('MOD : ENCODINGVALUE:'),USE(?MOD:ENCODINGVALUE:Prompt)
! ENTRY(@s32),USE(MOD:ENCODINGVALUE)
[REPORTCONTROLS]
! STRING(@s32),USE(MOD:ENCODINGVALUE)
MOD:ENCODINGVALUE        STRING(32),THREAD
!!> GUID('43dbd77b-d635-4ad8-8258-d4030b24dbd5'),PROMPT('MOD : ENCODINGVALUE:'),HEADER('MOD : ENCODINGVALUE'),PICTURE(@s32)
[SCREENCONTROLS]
! PROMPT('SAVE : Current Index:'),USE(?SAVE:CurrentIndex:Prompt)
! ENTRY(@n-14),USE(SAVE:CurrentIndex),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(SAVE:CurrentIndex),RIGHT(1)
SAVE:CurrentIndex        LONG,DIM(17),THREAD
!!> GUID('fd73bd57-ba53-4423-b06e-f11dc8f38e20'),PROMPT('SAVE : Current Index:'),HEADER('SAVE : Current Index'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('SAVE : w : csparm:'),USE(?SAVE:w:csparm:Prompt)
! ENTRY(@n-14),USE(SAVE:w:csparm),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(SAVE:w:csparm),RIGHT(1)
SAVE:w:csparm            LONG,DIM(17),THREAD
!!> GUID('1e761e8a-94fc-4531-a249-01465c302d5e'),PROMPT('SAVE : w : csparm:'),HEADER('SAVE : w : csparm'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('w : csparm:'),USE(?w:csparm:Prompt)
! ENTRY(@s50),USE(w:csparm)
[REPORTCONTROLS]
! STRING(@s50),USE(w:csparm)
w:csparm                 STRING(128),DIM(64),THREAD
!!> GUID('dc04cf24-e9dd-4dba-b97d-11c56727f8dd'),PROMPT('w : csparm:'),HEADER('w : csparm'),PICTURE(@s50)
[SCREENCONTROLS]
! PROMPT('Load Time:'),USE(?LoadTime:Prompt)
! ENTRY(@n-14),USE(LoadTime),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(LoadTime),RIGHT(1)
LoadTime                 LONG,THREAD
!!> GUID('213fd421-bfe7-4393-babd-afa031acf87c'),PROMPT('Load Time:'),HEADER('Load Time'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Find Value Implicit:'),USE(?FindValueImplicit:Prompt)
! ENTRY(@n3),USE(FindValueImplicit)
[REPORTCONTROLS]
! STRING(@n3),USE(FindValueImplicit)
FindValueImplicit        BYTE,THREAD
!!> GUID('f15f8b1c-fd4b-4c17-a173-241358902cc6'),PROMPT('Find Value Implicit:'),HEADER('Find Value Implicit'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Find Value:'),USE(?FindValue:Prompt)
! ENTRY(@s50),USE(FindValue)
[REPORTCONTROLS]
! STRING(@s50),USE(FindValue)
FindValue                STRING(128),THREAD
!!> GUID('9b510ea2-fe87-44e0-9bb1-26396c4445ad'),PROMPT('Find Value:'),HEADER('Find Value'),PICTURE(@s50)
[SCREENCONTROLS]
! PROMPT('Find Value 2:'),USE(?FindValue2:Prompt)
! ENTRY(@s50),USE(FindValue2)
[REPORTCONTROLS]
! STRING(@s50),USE(FindValue2)
FindValue2               STRING(128),DIM(5),THREAD
!!> GUID('48428fb9-fff9-4d28-ab4c-a190626e9279'),PROMPT('Find Value 2:'),HEADER('Find Value 2'),PICTURE(@s50)
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME XML:LoadFromString
PROTOTYPE '(*CSTRING,<<BYTE>,<<BYTE>,<<BYTE>),SHORT'
PARAMETERS '(*CSTRING InXMLString,<<BYTE InAppend>,<<BYTE SilentError>,<<BYTE OnlySoap>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/09/12' '14:30:22'
[DATA]
[SCREENCONTROLS]
! PROMPT('WS:'),USE(?WS:Prompt)
! ENTRY(@s19),USE(WS)
[REPORTCONTROLS]
! STRING(@s19),USE(WS)
WS                       &CSTRING
!!> GUID('7b7f2ca8-8ce3-4505-912c-f4a3d4dab9c4'),PROMPT('WS:'),HEADER('WS'),PICTURE(@s19)
[SCREENCONTROLS]
! PROMPT('Full Value:'),USE(?FullValue:Prompt)
! ENTRY(@s19),USE(FullValue)
[REPORTCONTROLS]
! STRING(@s19),USE(FullValue)
FullValue                &CSTRING
!!> GUID('8d39166c-243a-4fd6-986c-c610edf5ed36'),PROMPT('Full Value:'),HEADER('Full Value'),PICTURE(@s19)
[SCREENCONTROLS]
! PROMPT('Field Value:'),USE(?FieldValue:Prompt)
! ENTRY(@s19),USE(FieldValue)
[REPORTCONTROLS]
! STRING(@s19),USE(FieldValue)
FieldValue               &CSTRING
!!> GUID('1120dc21-eb7b-4db1-aca2-3f3d65071e55'),PROMPT('Field Value:'),HEADER('Field Value'),PICTURE(@s19)
[SCREENCONTROLS]
! PROMPT('FV:'),USE(?FV:Prompt)
! ENTRY(@n-14),USE(FV),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(FV),RIGHT(1)
FV                       LONG
!!> GUID('1585293d-cc60-4161-b3f2-ec22dc92427b'),PROMPT('FV:'),HEADER('FV'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Safe Buffer Size:'),USE(?SafeBufferSize:Prompt),RIGHT
! ENTRY(@n-14),USE(SafeBufferSize),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(SafeBufferSize),RIGHT(1)
SafeBufferSize           LONG,AUTO
!!> GUID('234910b1-b7e5-4587-a78a-68d61e1934b8'),PROMPT('Safe Buffer Size:'),HEADER('Safe Buffer Size'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Replace Records:'),USE(?ReplaceRecords:Prompt)
! ENTRY(@n-14),USE(ReplaceRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ReplaceRecords),RIGHT(1)
ReplaceRecords           LONG,AUTO
!!> GUID('dcd2c5de-b4ff-4ff7-96ce-3c082378494a'),PROMPT('Replace Records:'),HEADER('Replace Records'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Use Size:'),USE(?UseSize:Prompt)
! ENTRY(@n13),USE(UseSize)
[REPORTCONTROLS]
! STRING(@n13),USE(UseSize)
UseSize                  ULONG,AUTO
!!> GUID('aa7ff8a1-72f7-4400-8f4f-47eb2b16aed1'),PROMPT('Use Size:'),HEADER('Use Size'),PICTURE(@n13)
[SCREENCONTROLS]
! PROMPT('Total Bytes:'),USE(?TotalBytes:Prompt)
! ENTRY(@n13),USE(TotalBytes),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n13),USE(TotalBytes),RIGHT(1)
TotalBytes               ULONG,AUTO
!!> GUID('a99582b5-7472-414e-9457-8f6722d4214a'),PROMPT('Total Bytes:'),HEADER('Total Bytes'),PICTURE(@n13),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('EOFF lag:'),USE(?EOFFlag:Prompt)
! ENTRY(@n3),USE(EOFFlag)
[REPORTCONTROLS]
! STRING(@n3),USE(EOFFlag)
EOFFlag                  BYTE
!!> GUID('7e41a2f9-4c11-40ed-9b04-10266cf6d703'),PROMPT('EOFF lag:'),HEADER('EOFF lag'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Null In File:'),USE(?NullInFile:Prompt)
! ENTRY(@n3),USE(NullInFile)
[REPORTCONTROLS]
! STRING(@n3),USE(NullInFile)
NullInFile               BYTE
!!> GUID('8d2a1bc9-027c-4e38-b12b-70e6e2bb01ef'),PROMPT('Null In File:'),HEADER('Null In File'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Large File:'),USE(?LargeFile:Prompt)
! ENTRY(@n3),USE(LargeFile)
[REPORTCONTROLS]
! STRING(@n3),USE(LargeFile)
LargeFile                BYTE
!!> GUID('01d034e2-f23b-4f76-a92c-e192690fccc7'),PROMPT('Large File:'),HEADER('Large File'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Look Code:'),USE(?LookCode:Prompt)
! ENTRY(@s3),USE(LookCode)
[REPORTCONTROLS]
! STRING(@s3),USE(LookCode)
LookCode                 STRING(3)
!!> GUID('58d3265d-ad9a-4147-9307-e9bc1c76fcee'),PROMPT('Look Code:'),HEADER('Look Code'),PICTURE(@s3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('ls:'),USE(?ls:Prompt)
! ENTRY(@n-14),USE(ls),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ls),RIGHT(1)
ls                       LONG
!!> GUID('9620f658-5126-443a-85c3-b5aafb2df04b'),PROMPT('ls:'),HEADER('ls'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Orig LS:'),USE(?OrigLS:Prompt)
! ENTRY(@n-14),USE(OrigLS),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(OrigLS),RIGHT(1)
OrigLS                   LONG,AUTO
!!> GUID('84714740-7b11-4ab8-a647-cb88aec9c8a6'),PROMPT('Orig LS:'),HEADER('Orig LS'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Orig FV:'),USE(?OrigFV:Prompt)
! ENTRY(@n-14),USE(OrigFV),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(OrigFV),RIGHT(1)
OrigFV                   LONG
!!> GUID('26de58ed-32b5-4a45-8f8b-313a9ba6538d'),PROMPT('Orig FV:'),HEADER('Orig FV'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('var CHR:'),USE(?varCHR:Prompt)
! ENTRY(@n-14),USE(varCHR),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(varCHR),RIGHT(1)
varCHR                   LONG
!!> GUID('f4609da5-e4d4-415e-ab97-5ad7a86a0f9a'),PROMPT('var CHR:'),HEADER('var CHR'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Is Cdata:'),USE(?IsCdata:Prompt)
! ENTRY(@n3),USE(IsCdata)
[REPORTCONTROLS]
! STRING(@n3),USE(IsCdata)
IsCdata                  BYTE
!!> GUID('529e1a1a-3f4e-43fb-ad75-7b7543df1bac'),PROMPT('Is Cdata:'),HEADER('Is Cdata'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('json n:'),USE(?json_n:Prompt)
! ENTRY(@n3),USE(json_n)
[REPORTCONTROLS]
! STRING(@n3),USE(json_n)
json_n                   BYTE,AUTO
!!> GUID('428120bd-2d77-4f61-b1d2-6824a88026ef'),PROMPT('json n:'),HEADER('json n'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('json In Records:'),USE(?jsonInRecords:Prompt)
! ENTRY(@n-7),USE(jsonInRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(jsonInRecords),RIGHT(1)
jsonInRecords            SHORT,AUTO
!!> GUID('ae6f85de-2cf4-40d4-ac14-0f67485f5d45'),PROMPT('json In Records:'),HEADER('json In Records'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('json UC:'),USE(?jsonUC:Prompt)
! ENTRY(@s4),USE(jsonUC)
[REPORTCONTROLS]
! STRING(@s4),USE(jsonUC)
jsonUC                   STRING(4),AUTO
!!> GUID('bdf72f64-2c20-4c6b-b237-fb554fc35f88'),PROMPT('json UC:'),HEADER('json UC'),PICTURE(@s4),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('json Hex:'),USE(?jsonHex:Prompt)
! ENTRY(@s3),USE(jsonHex)
[REPORTCONTROLS]
! STRING(@s3),USE(jsonHex)
jsonHex                  STRING(3),AUTO
!!> GUID('4e0a276f-3234-4e98-b00b-9c55280e4d96'),PROMPT('json Hex:'),HEADER('json Hex'),PICTURE(@s3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('json Array:'),USE(?jsonArray:Prompt)
! ENTRY(@n3),USE(jsonArray)
[REPORTCONTROLS]
! STRING(@n3),USE(jsonArray)
jsonArray                BYTE,DIM(64),AUTO
!!> GUID('9ae9de5c-a94e-4257-b234-825e89d2c64b'),PROMPT('json Array:'),HEADER('json Array'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Ptr:'),USE(?Ptr:Prompt)
! ENTRY(@n-14),USE(Ptr),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(Ptr),RIGHT(1)
Ptr                      LONG,AUTO
!!> GUID('d44eabbc-014f-4b96-af87-d65899a56319'),PROMPT('Ptr:'),HEADER('Ptr'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('n Ptr:'),USE(?nPtr:Prompt)
! ENTRY(@n-14),USE(nPtr),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(nPtr),RIGHT(1)
nPtr                     LONG
!!> GUID('cc0a8f00-1cc4-409a-a8c4-4e803ad0ce21'),PROMPT('n Ptr:'),HEADER('n Ptr'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Ptr Total:'),USE(?PtrTotal:Prompt)
! ENTRY(@n-14),USE(PtrTotal),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(PtrTotal),RIGHT(1)
PtrTotal                 LONG
!!> GUID('9a429571-d6fc-4981-8683-69c93121ac60'),PROMPT('Ptr Total:'),HEADER('Ptr Total'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('In Soap:'),USE(?InSoap:Prompt)
! ENTRY(@n3),USE(InSoap)
[REPORTCONTROLS]
! STRING(@n3),USE(InSoap)
InSoap                   BYTE
!!> GUID('2b494287-f5bf-436c-9cce-23430adf342f'),PROMPT('In Soap:'),HEADER('In Soap'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('In Comment:'),USE(?InComment:Prompt)
! ENTRY(@n3),USE(InComment)
[REPORTCONTROLS]
! STRING(@n3),USE(InComment)
InComment                BYTE
!!> GUID('e1b11eb4-a51e-4267-92da-98d288b0ac6f'),PROMPT('In Comment:'),HEADER('In Comment'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Prev Character:'),USE(?PrevCharacter:Prompt)
! ENTRY(@s1),USE(PrevCharacter)
[REPORTCONTROLS]
! STRING(@s1),USE(PrevCharacter)
PrevCharacter            STRING(1)
!!> GUID('81f23dfd-80b5-49e4-aa26-7795bc811de8'),PROMPT('Prev Character:'),HEADER('Prev Character'),PICTURE(@s1),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Doll Name:'),USE(?DollName:Prompt)
! ENTRY(@s128),USE(DollName)
[REPORTCONTROLS]
! STRING(@s128),USE(DollName)
DollName                 STRING(128)
!!> GUID('b791d3eb-f1d8-42cd-b48a-490134d33e30'),PROMPT('Doll Name:'),HEADER('Doll Name'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('Doll Name 2:'),USE(?DollName2:Prompt)
! ENTRY(@s128),USE(DollName2)
[REPORTCONTROLS]
! STRING(@s128),USE(DollName2)
DollName2                CSTRING(129)
!!> GUID('3ba2e74e-8bd6-42e5-bd25-75262e8eb768'),PROMPT('Doll Name 2:'),HEADER('Doll Name 2'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('Constant Len:'),USE(?ConstantLen:Prompt)
! ENTRY(@n-14),USE(ConstantLen),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ConstantLen),RIGHT(1)
ConstantLen              LONG
!!> GUID('8f39c695-787d-48f3-b186-96ba8d8baa89'),PROMPT('Constant Len:'),HEADER('Constant Len'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('0c770fa4-2f39-406b-8f93-38a24bf54d40'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n-14),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(J),RIGHT(1)
J                        LONG
!!> GUID('bd19c418-be74-4086-bb82-d84c9823ae00'),PROMPT('J:'),HEADER('J'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('K:'),USE(?K:Prompt)
! ENTRY(@n-14),USE(K),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(K),RIGHT(1)
K                        LONG
!!> GUID('861acdab-8b9d-42d7-8e42-de5cf2c7ac3b'),PROMPT('K:'),HEADER('K'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('L:'),USE(?L:Prompt),RIGHT
! ENTRY(@n-14),USE(L),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(L),RIGHT(1)
L                        LONG
!!> GUID('ce398481-0390-46ad-9083-a2cb186da8a2'),PROMPT('L:'),HEADER('L'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('M:'),USE(?M:Prompt),RIGHT
! ENTRY(@n-14),USE(M),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(M),RIGHT(1)
M                        LONG
!!> GUID('e1a7fdf9-4abc-46a7-a269-c4d7d721b96c'),PROMPT('M:'),HEADER('M'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('KC olon:'),USE(?KColon:Prompt)
! ENTRY(@n3),USE(KColon)
[REPORTCONTROLS]
! STRING(@n3),USE(KColon)
KColon                   BYTE
!!> GUID('b35553fb-df45-4e0f-903c-3306bba7675a'),PROMPT('KC olon:'),HEADER('KC olon'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('varstr:'),USE(?varstr:Prompt)
! ENTRY(@s1),USE(varstr)
[REPORTCONTROLS]
! STRING(@s1),USE(varstr)
varstr                   STRING(1)
!!> GUID('ce26399e-1f75-49d4-a620-c125962f33fb'),PROMPT('varstr:'),HEADER('varstr'),PICTURE(@s1),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Var Check:'),USE(?VarCheck:Prompt)
! ENTRY(@n-7),USE(VarCheck),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(VarCheck),RIGHT(1)
VarCheck                 SHORT
!!> GUID('2b628031-fe39-407e-bb78-c5542bd90ba3'),PROMPT('Var Check:'),HEADER('Var Check'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Var Check 2:'),USE(?VarCheck2:Prompt)
! ENTRY(@n-7),USE(VarCheck2),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(VarCheck2),RIGHT(1)
VarCheck2                SHORT
!!> GUID('31056457-62d3-49e2-b646-13940b49118f'),PROMPT('Var Check 2:'),HEADER('Var Check 2'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('T I:'),USE(?T_I:Prompt)
! ENTRY(@n-14),USE(T_I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(T_I),RIGHT(1)
T_I                      LONG
!!> GUID('0b884bca-39d9-4ccc-8d03-f97f79e3ca73'),PROMPT('T I:'),HEADER('T I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('AE I:'),USE(?AE_I:Prompt)
! ENTRY(@n-14),USE(AE_I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(AE_I),RIGHT(1)
AE_I                     LONG
!!> GUID('d9b4403f-2262-4578-a61e-47a82d7a1410'),PROMPT('AE I:'),HEADER('AE I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('AE Start:'),USE(?AE_Start:Prompt)
! ENTRY(@n-14),USE(AE_Start),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(AE_Start),RIGHT(1)
AE_Start                 LONG
!!> GUID('381464b4-a8d6-4fde-991a-f6525b6e7f97'),PROMPT('AE Start:'),HEADER('AE Start'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('AE II:'),USE(?AE_II:Prompt)
! ENTRY(@n-14),USE(AE_II),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(AE_II),RIGHT(1)
AE_II                    LONG
!!> GUID('cbbd0724-c749-48d6-879f-2c9f0b414b7c'),PROMPT('AE II:'),HEADER('AE II'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('AE III:'),USE(?AE_III:Prompt)
! ENTRY(@n-14),USE(AE_III),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(AE_III),RIGHT(1)
AE_III                   LONG
!!> GUID('94b735fa-ef1d-40e3-a84b-ce019d58487d'),PROMPT('AE III:'),HEADER('AE III'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Doll Ptr:'),USE(?DollPtr:Prompt)
! ENTRY(@n-14),USE(DollPtr),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(DollPtr),RIGHT(1)
DollPtr                  LONG
!!> GUID('1197ea06-2fff-4e00-94e7-fffe990a218c'),PROMPT('Doll Ptr:'),HEADER('Doll Ptr'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Quote Type:'),USE(?QuoteType:Prompt)
! ENTRY(@s1),USE(QuoteType)
[REPORTCONTROLS]
! STRING(@s1),USE(QuoteType)
QuoteType                STRING(1)
!!> GUID('f4f81c76-7aa3-42c5-ab29-5bb8e1cc73ef'),PROMPT('Quote Type:'),HEADER('Quote Type'),PICTURE(@s1)
[SCREENCONTROLS]
! PROMPT('Using Target:'),USE(?UsingTarget:Prompt)
! ENTRY(@n-14),USE(UsingTarget),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(UsingTarget),RIGHT(1)
UsingTarget              LONG
!!> GUID('0ad37fd3-8f34-4f7d-8597-f4e47f65ad52'),PROMPT('Using Target:'),HEADER('Using Target'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Convert It:'),USE(?ConvertIt:Prompt)
! ENTRY(@n-14),USE(ConvertIt),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ConvertIt),RIGHT(1)
ConvertIt                LONG
!!> GUID('b12f637f-b5e4-4daa-bf46-a2d3b018f5de'),PROMPT('Convert It:'),HEADER('Convert It'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Expecting More:'),USE(?ExpectingMore:Prompt)
! ENTRY(@n3),USE(ExpectingMore)
[REPORTCONTROLS]
! STRING(@n3),USE(ExpectingMore)
ExpectingMore            BYTE
!!> GUID('dafc9f8b-9c61-4140-9d47-918779cddc76'),PROMPT('Expecting More:'),HEADER('Expecting More'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('loc : tempcstring:'),USE(?loc:tempcstring:Prompt)
! ENTRY(@s99),USE(loc:tempcstring)
[REPORTCONTROLS]
! STRING(@s99),USE(loc:tempcstring)
loc:tempcstring          CSTRING(100)
!!> GUID('bbfae364-9858-4514-b759-4a4695a22489'),PROMPT('loc : tempcstring:'),HEADER('loc : tempcstring'),PICTURE(@s99)
[SCREENCONTROLS]
! PROMPT('HTMLF irst Pass:'),USE(?HTMLFirstPass:Prompt)
! ENTRY(@n3),USE(HTMLFirstPass)
[REPORTCONTROLS]
! STRING(@n3),USE(HTMLFirstPass)
HTMLFirstPass            BYTE
!!> GUID('7a009412-4bc5-4357-9acd-cb9e75691f16'),PROMPT('HTMLF irst Pass:'),HEADER('HTMLF irst Pass'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Is HTML:'),USE(?IsHTML:Prompt)
! ENTRY(@n3),USE(IsHTML)
[REPORTCONTROLS]
! STRING(@n3),USE(IsHTML)
IsHTML                   BYTE
!!> GUID('65519b12-d3dc-4edf-87dd-34d5328cba8c'),PROMPT('Is HTML:'),HEADER('Is HTML'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('HTMLS cript Mode:'),USE(?HTMLScriptMode:Prompt)
! ENTRY(@n3),USE(HTMLScriptMode)
[REPORTCONTROLS]
! STRING(@n3),USE(HTMLScriptMode)
HTMLScriptMode           BYTE
!!> GUID('1568e3e0-8c3c-45ef-82d3-2534b9a12032'),PROMPT('HTMLS cript Mode:'),HEADER('HTMLS cript Mode'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('INV:'),USE(?INV:Prompt)
! ENTRY(@s76),USE(INV)
[REPORTCONTROLS]
! STRING(@s76),USE(INV)
INV                      STRING(76),AUTO
!!> GUID('ce0fc640-6314-4dd3-95f7-d5af278f3e01'),PROMPT('INV:'),HEADER('INV'),PICTURE(@s76)
[SCREENCONTROLS]
! PROMPT('Out V:'),USE(?OutV:Prompt)
! ENTRY(@s128),USE(OutV)
[REPORTCONTROLS]
! STRING(@s128),USE(OutV)
OutV                     STRING(128),AUTO
!!> GUID('c320c51f-897d-4ec8-bccd-0e94de34b235'),PROMPT('Out V:'),HEADER('Out V'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('Binary Field Value:'),USE(?BinaryFieldValue:Prompt)
! ENTRY(@s20),USE(BinaryFieldValue)
[REPORTCONTROLS]
! STRING(@s20),USE(BinaryFieldValue)
BinaryFieldValue         ANY,AUTO
!!> GUID('70148dab-098f-4a30-93a4-877a6257ce65'),PROMPT('Binary Field Value:'),HEADER('Binary Field Value'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('Final Length:'),USE(?FinalLength:Prompt)
! ENTRY(@n-14),USE(FinalLength),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(FinalLength),RIGHT(1)
FinalLength              LONG
!!> GUID('fa24ffbf-96c2-47d5-b427-d012779fe629'),PROMPT('Final Length:'),HEADER('Final Length'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('End On Soap:'),USE(?EndOnSoap:Prompt)
! ENTRY(@n3),USE(EndOnSoap)
[REPORTCONTROLS]
! STRING(@n3),USE(EndOnSoap)
EndOnSoap                BYTE
!!> GUID('17226645-6497-4a62-b978-307b067e8d10'),PROMPT('End On Soap:'),HEADER('End On Soap'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Encoding Type:'),USE(?EncodingType:Prompt)
! ENTRY(@n-7),USE(EncodingType),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(EncodingType),RIGHT(1)
EncodingType             SHORT
!!> GUID('3c28b3f2-8e74-4998-9c1b-57aa7bf30a52'),PROMPT('Encoding Type:'),HEADER('Encoding Type'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Work Comment:'),USE(?WorkComment:Prompt)
! ENTRY(@s255),USE(WorkComment)
[REPORTCONTROLS]
! STRING(@s255),USE(WorkComment)
WorkComment              CSTRING(10241),AUTO
!!> GUID('35f02188-6657-41b6-8004-ba5d77645dda'),PROMPT('Work Comment:'),HEADER('Work Comment'),PICTURE(@s255),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Hold Over:'),USE(?HoldOver:Prompt)
! ENTRY(@s255),USE(HoldOver)
[REPORTCONTROLS]
! STRING(@s255),USE(HoldOver)
HoldOver                 CSTRING(10241),AUTO
!!> GUID('99f77eb1-8b48-4ea3-8506-dcf0937b98dc'),PROMPT('Hold Over:'),HEADER('Hold Over'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3600
PROPERTY:END
  Do SetupDefaults
  Do SetupStringFile
  Do SetupProgressWindow
  Do RunXMLParsing
  if mod:Json = true
     Do RunJSONParsing
  end
  Do EndParsing
  Do EndDisposeVariables
  Return(GLO:_XML_LastError)
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Progress:Thermometer ULONG
WindowTimer          LONG
WindowOpened         BYTE
Constant             STRING(SIZE(Q:V1))

ProgressWindow WINDOW('Progress...'),AT(,,200,56),CENTER,FONT('Tahoma', 8,, FONT:regular, CHARSET:ANSI),GRAY,TIMER(1),DOUBLE
    PROGRESS, AT(5,15,190,10), USE(Progress:Thermometer), RANGE(0,100)
    STRING(''), AT(9,3,184,10), USE(?Progress:UserString), CENTER
    BUTTON('Cancel'), AT(75,36,50,15), USE(?Progress:Cancel)
 END
[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2296
PROPERTY:END
SetupDefaults   ROUTINE

  Do SetupDefaultsStatic
  Do SetupDefaultsQueue

  if GLO:_xml_InEncoding
     MOD:ENCODINGVALUE = upper(GLO:_xml_InEncoding)
     Do SetupEncoding
  end

SetupDefaultsStatic ROUTINE

  LoadTime = CLOCK()

  SafeBufferSize = 1900000

  ReplaceRecords = RECORDS(ReplaceQueue)

  GLO:_XML_LastError = 0
  CurrentIndex = 0

  IF ~OMITTED(4)
     EndOnSoap = OnlySoap
  end


SetupDefaultsQueue  ROUTINE

  CLEAR(XQUE)
  if InAppend = False
     FREE(XQUE)
     CLEAR(w:csparm[])
     MaxLevel = 0
  END

[SOURCE]
PROPERTY:BEGIN
PRIORITY 2296
PROPERTY:END
SetupStringFile ROUTINE

  ! Figure if file is larger than string (string processing or file processing)
  ! ---------------------------------------------------------------------------
  if mod:LoadFromFile = True
     TotalBytes = BYTES(XMLText)
     if TotalBytes > SafeBufferSize
        LargeFile = True
     end
     useSize = 2048000                                      ! 2MB
     WS &= NEW CSTRING(UseSize)
     FullValue &= NEW CSTRING(UseSize)
     FieldValue &= NEW CSTRING(UseSize)

     WS = ''
     LS = 0
     FullValue = ''
     FieldValue = ''
     HoldOver = ''
     FV = 0

  else
     LS = LEN(InXMLString)
     TotalBytes = LS
     useSize = LS + 1024                                    ! Size + 1K buffer incase
     WS &= NEW CSTRING(UseSize)
     FullValue &= NEW CSTRING(UseSize)
     FieldValue &= NEW CSTRING(UseSize)

     WS = InXMLString

     FullValue = ''
     FieldValue = ''
     FV = 0

  end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2296
PROPERTY:END
SetupProgressWindow ROUTINE

  ! Setup Progress Window
  ! ---------------------
  If MOD:ProgressBytes <> -1
     if TotalBytes >= MOD:ProgressBytes
        Progress:Thermometer=0
        IF MOD:ProgressString and NUMERIC(MOD:ProgressString)
           UsingTarget = mod:progressString
           UsingTarget{PROP:RangeHigh} = TotalBytes
           UsingTarget{PROP:PROGRESS} = 0
        else
           UsingTarget = 0
           OPEN(ProgressWindow)
           if MOD:ProgressString
              ?Progress:UserString{prop:text} = MOD:ProgressString
           else
              ?Progress:UserString{prop:text} = 'Loading XML Data ...'
           end
           ?Progress:Thermometer{Prop:RangeHigh} = TotalBytes
           WindowOpened = True
           WindowTimer  = 0
           DISPLAY()
        end
     end
  end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2296
PROPERTY:END
RunXMLParsing  ROUTINE

  ! Actual Parsing Code
  ! -------------------
  LOOP
    if MOD:LoadFromFile = True
       Do LoadBlockofDataFromFile
    END

    ! check first character
    LOOP PTR = 1 TO LS
      CASE WS[ptr]
      of '<'
         break
      OF '!'
         break
      of '?'
         break
      of chr(123)
         mod:json = true
         BREAK
      END
    END


    ! Main Parser Code
    ! ----------------
    OrigLS = LS
    Ptr    = 1

    IF HTMLFirstPass = False
       Do CheckForHTML
    END

    ! look through entire string
    ! --------------------------
    LOOP UNTIL ptr > ls

       if LargeFile = False
          Do SetLargeFile
       end

       if HtmlScriptMode = True
          IF UPPER(WS[PTR : PTR+8]) = '<</SCRIPT>'
             Do AddToQueue
             ptr+=9
             HtmlScriptMode=False
             CYCLE
          end
          Do AddWSPTR
          ptr+=1
          CYCLE
       end

       if ws[ptr] = chr(0)
          ptr+=1
          CYCLE
       end

       ! look for first <
       ! ----------------
       IF WS[PTR] = CHR(60)

          IF ISHTML = TRUE
             m = PTR + 1
             IF UPPER(WS[M : M + 2]) = 'BR>'
                Do AddWSPTR2
                PTR+=4;CYCLE
             ELSIF UPPER(WS[M : M + 3]) = 'BR/>'
                Do AddWSPTR2
                PTR+=5;CYCLE
             ELSIF UPPER(WS[M : M + 4]) = 'BR />'
                Do AddWSPTR2
                PTR+=6;CYCLE
             END
          END

          nPtr=Ptr+1                    ! Get Next Pointer

          I=0                           ! look for first >
          FinalLength = 0

          ! Comment Inside Element
          ! -----------------------
          IF WS[nPtr : nPtr + 2] = '!--'
             nPtr+=3
             InComment = True
             PrevCharacter = ''
             WorkComment = ''
          else
             InComment = False
          end

          LOOP t_i = nPtr TO LS
             IF WS[T_I] = CHR(62)
                IF InComment = True
                   if PrevCharacter <> '-' THEN CYCLE.
                END
                I=t_i
                ExpectingMore = False
                FinalLength   = T_I
                BREAK
             END
             if InComment = true then WorkComment = WorkComment & ws[t_i].
             PrevCharacter = WS[T_I]
          END

          if InComment = True
             WorkComment = WorkComment & ws[t_i]
             if WorkComment
                CQ:CommentString = sub(WorkComment,1,len(WorkComment) - 3)
                add(CommentQueue)
                WorkComment = ''
             end
             PTR = T_I + 1
             CYCLE
          end
          If FinalLength = 0 then FinalLength = LS.
          ! --------------------------------------------------------------

          IF I > 0
             ! if <?, skip full value
             ! ----------------------
             if ws[Nptr] = '?'
                i = instring('?',WS[1 : LS],1,Nptr+1)
                IF i > 0
                   ptr = i + 2
                   loc:tempcstring = ws[nptr : i]
                   i = instring('encoding=',loc:tempcstring,1,1)
                   if i > 0 and ~GLO:_xml_InEncoding
                      loc:tempcstring = SUB(loc:tempCstring,i+10,16)
                      i = instring('"',loc:tempcstring,1,1)
                      if i = 0
                         i = instring('''',loc:tempcstring,1,1)
                      end
                      if i
                         loc:tempcstring = CLIP(SUB(loc:tempcstring,1,i-1))
                         MOD:ENCODINGVALUE   = UPPER(loc:tempcstring)
                         Do SetupEncoding
                      end
                   end
                   CYCLE
                else
                   IF LargeFile = True and EOFFlag = False

                   else
                       if SilentError <> True
                          MESSAGE('No End ?> tag found after position: ' & Ptr,'Error Occurred',icon:exclamation)
                       end
                       GLO:_XML_LastError = 1000
                   END
                   BREAK
                end
             end

             ! if comment, skip full value
             ! ---------------------------
             if ws[Nptr] = '!'

                if ws[nptr+1] = '-'
                   if ws[nptr+2] = '-'
                      LookCode = '--' & chr(62)
                      I = INSTRING(LookCode,WS[Nptr+3 : LS],1,1)      ! find --> tag
                      if i
                         ptr = ptr + nptr + 5
                         CYCLE
                      else
                         if SilentError <> True
                            IF MESSAGE('No End-Comment tag found in comment section after position: ' & FORMAT(ptr,@n11) & '||Copy section to Clipboard?','Error Occurred',icon:exclamation,button:YES+button:NO) =  BUTTON:YES
                               SETCLIPBOARD(WS[Nptr+3 : LS])
                            END
                         end
                         GLO:_XML_LastError = 1000
                         BREAK
                      end
                   end
                end

                ! if cdata, get full value
                ! ------------------------
                if ws[ptr+2] = '['
                   if ws[ptr+3 : PTR+8] = 'CDATA['
                      i = instring(']]' & chr(62),WS,1,Nptr)      ! find ]]> tag
                      if i
                         IsCdata = True
                         FieldValue = ws[ptr+9 : i-1]
                         FV = len(FieldValue)
                         DO AddToQueue
                         ptr = i + 3
                         CYCLE
                      else
                         if SilentError <> True
                            message('No End-Comment CDATA tag found after position: ' & ptr,'Error Occurred',icon:exclamation)
                         end
                         GLO:_XML_LastError = 1000
                         BREAK
                      end
                   end
                else
                   ! Element - Strip all elements completely
                   ! ---------------------------------------
                   PtrTotal = 1
                   ptr = ptr + 2
                   LOOP UNTIL PTR > LS
                      CASE WS[ptr]
                      OF chr(62)
                         PtrTotal-=1
                         if PtrTotal = 0 then break.
                      OF chr(60)
                         PtrTotal+=1
                      END
                      ptr +=1
                   end
                   CYCLE
                end
             end

             ! get field name
             ! --------------
             K = i - Nptr
             if K > 128
                DollName = ws[Nptr : Nptr + 127]
             ELSIF K < 1
                DollName = ''
             ELSE
                DollName = ws[Nptr : i-1]
             END

             K = 0
             KColon = False
             loop j = 1 to 128
                CASE VAL(Dollname[j])
                OF 13 OROF 10 OROF 32 OROF 62
                   Dollname[j] = ' '
                   K = J
                   BREAK
                OF 58
                   kColon = True
                OF 1 TO 42
                   Dollname[j] = '_'        ! correct any invalid characters
                of 60
                   Dollname[j] = '_'        ! correct any invalid characters
                END
            END

             if K > 0
                Dollname  = LOWER(Dollname[1 : K])
                FullValue = WS[NPTR+K : I]
                OrigFV    = LEN(FullValue)
             else
                FullValue=''
                OrigFV = 1
                K=128
             end

             IF Dollname[1] = ' '
                DollName = LEFT(DollName)
                K = LEN(CLIP(Dollname))+1
             end

             ! Check for empty field name
             ! --------------------------
             if Dollname[K-1] = '/'
                Dollname[K-1] = ' '
                Do AddBlankToQueue
                ptr = i + 1
                CYCLE
             end
          else
             if ExpectingMore = True
                WS=''
             else
                WS = WS[ptr : LS]
                ExpectingMore = True
             end
             BREAK
          END

          if kColon = True
             IF INSTRING(':body',clip(DollName),1,1)
                InSoap = True
             END
             if EndOnSoap = True
                if INSTRING(':body',clip(DollName),1,1)
                   ExpectingMore = False
                   EOFFlag = True
                   BREAK
                END
             END
          END

          ! Processing closing tag
          ! ----------------------
          J = INSTRING('/>',FullValue[1:OrigFV],1,1)        ! end <data field=value/>
          if J
              OrigFV = J-1
              Do IncreaseDollPtr
              Do AddElements
              Do AddToQueue
          else
             if Dollname[1] = '/'                 ! end </data>
                !Dollname=Dollname[2 : 128]
                !if DollName  = q:element[dollptr]
                if IsCdata = False
                   Do AddToQueue
                else
                   isCdata = False
                end
                IF InSoap = True
                   if INSTRING(':body',CLIP(DollName),1,1)
                      InSoap = False
                   end
                end
             else
                Do IncreaseDollPtr

                FieldValue=''
                fv=0

                ! BINARY FILE SAVING
                ! -------------------
                IF MOD:BinaryRecords > 0
                    BQUE:FieldName=q:element[DollPtr]
                    GET(BinaryQueue,BQUE:FieldName)
                    IF ~ERRORCODE()
                       DO AddBinaryFile
                    end
                end

                if FullValue
                   Do AddElements
                end

                if IsHTML = True
                   Do CheckHTML
                END

             end
          end
          ptr = i + 1
       else
          VarCheck = VAL(WS[ptr])
          if EncodingType = 1 and VarCheck = 160
             ws[ptr] = ' '
             Do AddWSPTR
          elsif EncodingType = 1 and VarCheck >= 11000000b
             VarCheck2 = VAL(WS[ptr+1])
             IF VarCheck = 226 AND VAL(ws[ptr+1]) = 130 AND VAL(ws[ptr+2]) = 172
                ws[ptr] = ''
                Do AddWSPTR
                ptr+=2
             elsif VarCheck2 > 127
                ws[ptr] = chr( BOR ( BSHIFT(BAND(VarCheck,11b),6) , BAND(val(ws[ptr+1]),111111b) ) )
                Do AddWSPTR
                Ptr+=1
             elsif VarCheck > 13
                Do AddWSPTR
             end
          elsif VarCheck > 13
             Do AddWSPTR
          end
          ptr+=1
       end
     end

     IF MOD:LoadFromFile = False then break.
     IF GLO:_XML_LastError <> 0 then break.
     IF EOFFlag = True then break.

     LS=''
     if ExpectingMore = False then WS=''.

   END
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2296
PROPERTY:END
IncreaseDollPtr   ROUTINE

     if DollPtr < 0 or DollPtr > 63
        Do EndAll
     else
        DollPtr+=1
        Q:ELEMENT[Dollptr] = DollName
     end

DecreaseDollPtr   ROUTINE

     if Dollptr > 0
        Q:Element[DollPtr] = ''
        Q:V1 = ''
        Dollptr-=1
     end
     FieldValue = ''
     FV = 0
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2296
PROPERTY:END
RunJsonParsing  ROUTINE

 CLEAR(json_n)
 CLEAR(jsonArray[])
 CLEAR(jsonHex)
 CLEAR(jsonInRecords)
 CLEAR(jsonUC)

 LOOP

    if mod:Json = true
       mod:json = false
    else
       if MOD:LoadFromFile = True
          Do LoadBlockofDataFromFile
       END
    end

    PTR = 1

    LOOP
       case ws[ptr]
       of chr(123)      ! {
          if jsonInRecords = true
             Do AddJsonRecord
             jsonArray[DollPtr] = True
             jsonInRecords = False
          elsif dollptr = 0
             DollName2 = 'root'
             Do AddJsonName
          end
          Do GetJsonName
       of '"'
          Do GetJsonElement
       of '['
          JsonInRecords = True
       of chr(125)
         Do jSonCloseGroup
       of ']'
         if dollptr > 0
            Q:Element[Dollptr+1] = ''
            ADD(XQue)
            DollPtr-=1
         end
          JsonInRecords = False
       else
          varstr = ws[ptr]
          VarCheck = val(varstr)
          if VarCheck > 32
             if DollName2
                Do GetJsonElement
             end
          end
       end

       PTR +=1
       IF PTR > LS THEN BREAK.
    end

    IF MOD:LoadFromFile = False then break.
    IF GLO:_XML_LastError <> 0 then break.
    IF EOFFlag = True then break.

    LS=''
    if ExpectingMore = False then WS=''.

 end

 ! close ROOT
 if Dollptr > 0
    DO JsonCloseGroup
 end

GetJsonName ROUTINE

    Do AddJsonName

    json_n=False

    LOOP nptr = ptr to ls
        if ws[nptr] = '"'
           if json_n = true
              if ws[nptr+1] = ':'
                 nptr+=1
                 break
              end
           end
           json_n = true
        elsif json_n = true
           DollName2 = DollName2 & ws[nptr]
        END
     END

     PTR = NPTR

AddJsonRecord   ROUTINE

    Do AddJsonName
    Do IncreaseDollPtr
    q:element[DollPtr] = 'array'    ! overwrite with "array"


AddJsonName ROUTINE

     if DollName2
        Do IncreaseDollPtr
        Q:Element[Dollptr] = DollName2  ! overwrite with DollName2
        Q:V1=''
        DollName2 = ''
     end

GetJsonElement   ROUTINE

    if DollName2
       if ws[ptr] = '"'
          Do GetJsonStrValue
       else
          Do GetJsonNumValue
       end
    else
       Do GetJsonDollName
    end

    PTR = NPTR

GetJsonDollName ROUTINE

    loop nptr = ptr+1 to ls
       case ws[nptr]
       of '"'
          if ws[nptr+1] = ':'
             nptr+=1
             BREAK
          else
             DollName2 = DollName2 & ws[nptr]
          end
       else
          DollName2 = DollName2 & ws[nptr]
       end
    end

GetJsonStrValue    ROUTINE

    Q:V1 = ''

    loop nptr = ptr + 1 to ls
        case ws[nptr]
        of '\'
           QuoteType='\'
           cycle
        of '"'
           if QuoteType <> '\'
              break
           end
        end
        if quotetype = '\'
           case ws[nptr]
           of 'b'
              Q:V1 = Q:V1 & chr(8)
           of '\'
              Q:V1 = Q:V1 & '\'
           of '/'
              Q:V1 = Q:V1 & '/'
           of '"'
              Q:V1 = Q:V1 & '"'
           of 'n' orof 'N'
              Q:V1 = Q:V1 & chr(10)
           of 'r' orof 'R'
              Q:V1 = Q:V1 & chr(13)
           of 't' orof 'T'
              Q:V1 = Q:V1 & chr(9)
           of 'u' orof 'U'
              jsonUC = sub(ws,nptr+1,4)
              nptr+=4
           of 'x' orof 'X'
              jsonHex = sub(ws,nptr+1,2)
              VarCheck2 = EVALUATE('0' & CLIP(jsonHex) & 'h')
              Q:V1 = Q:V1 & chr(VarCheck2)
              nptr+=2
           end
           quotetype=''
           CYCLE
        end
        Q:V1 = Q:V1 & ws[nptr]
     end

     Q:Element[dollptr+1] = DollName2
     add(XQue)

     Q:V1 = ''
     DollName2 = ''


GetJsonNumValue    ROUTINE

    Q:V1 = ''

    loop nptr = ptr to ls
        varstr = ws[nptr]
        case varstr
        of '}' orof ','
           break
        else
           VarCheck = val(varstr)
           if VarCheck > 32
              Q:V1 = Q:V1 & ws[nptr]
           end
        end
     end

     Q:Element[dollptr+1] = DollName2
     add(XQue)

     Q:V1 = ''
     DollName2 = ''

     if varstr = '}'
        Do jsonCloseGroup
     end


JsonCloseGroup  ROUTINE

     if dollptr > 0
        Q:Element[Dollptr+1] = ''
        ADD(XQue)
        if Dollptr > 0
           if jsonArray[DollPtr] = True
              jsonInRecords = True
              jsonArray[DollPtr] = False
           end
        end
        DollPtr-=1
     end

[SOURCE]
PROPERTY:BEGIN
PRIORITY 2296
PROPERTY:END
EndParsing  ROUTINE

   LoadTime = CLOCK() - LoadTime

   if ExpectingMore = True and EOFFlag = True
      if SilentError <> True
         MESSAGE('Invalid tag (missing End Bracket) located around position: ' & Ptr & '||Data: ' & CLIP(WS) &'||Pointer: ' & LS,'Error Occurred',icon:exclamation)
      end
   end

   MaxLevel+=1

   if WindowOpened = True
      Close(ProgressWindow)
   elsif UsingTarget
      UsingTarget = 0
   end

   CLEAR(GLO:_xml_InEncoding)
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2296
PROPERTY:END
EndDisposeVariables ROUTINE

   DISPOSE(FullValue)
   DISPOSE(FieldValue)
   DISPOSE(WS)

[SOURCE]
PROPERTY:BEGIN
PRIORITY 2551
PROPERTY:END
LoadBlockOfDataFromFile ROUTINE

    WS = HoldOver
    HoldOver = ''
    M = LEN(WS)
    LS = M

    LOOP
       NEXT(XMLTEXT)
       IF ERRORCODE()
          EOFFlag = true
          BREAK
       END

       J = BYTES(XMLTEXT)
       IF NullInFile = 0
          if TXT:StandLine[2]=CHR(0) OR TXT:StandLine[4]=CHR(0) OR TXT:StandLine[5]=CHR(0) OR TXT:StandLine[6]=CHR(0) OR TXT:StandLine[7]=CHR(0)
             NullInFile = 2
          else
             NullInFile = 1
          end
       end

       IF NullInFile = 2
          LOOP L = 1 TO J
             IF TXT:STANDLINE[L] <> CHR(0)
                M+=1
                WS[M] = TXT:STANDLINE[L]
             END
          END
       ELSE
          WS = WS & TXT:STANDLINE[1 : J]
       END

       IF LargeFile = True
          LS+=J
          if WindowOpened
             Progress:Thermometer+=J
             Display(?Progress:Thermometer)
          elsif UsingTarget
             Progress:Thermometer+=J
             UsingTarget{PROP:PROGRESS} = J
          end
          IF LS > SafeBufferSize THEN BREAK.
       END
       if EOFFlag = True then BREAK.
    END

    IF NullInFile = 2
       M+=1
       WS[M] = CHR(0)
    end

    if LS < SafeBufferSize
       WS = CLIP(WS)
    else
       LOOP I = LS TO 1 BY - 1
          IF WS[I] = '<'
             if ws[i+1] <> '/'
                HoldOver = ws[i : ls]
                WS[I] = CHR(0)       ! NEW EOF
                BREAK
             end
          END
       END
    end

    LS = LEN(WS)
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2551
PROPERTY:END
SetLargeFile    ROUTINE

      WindowTimer+=1
      if WindowTimer = 100
         if WindowOpened
            Progress:Thermometer = ptr
            Display(?Progress:Thermometer)
            WindowTimer = 0
          elsif UsingTarget
            UsingTarget{PROP:PROGRESS} = ptr
          end
          WindowTimer = 0
      end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2551
PROPERTY:END
CheckForHTML    ROUTINE

  HTMLFirstPass = True

  IF LS < 1
     EXIT
  ELSIF LS > 5120
     J = 5120
  ELSE
     J = LS
  END

  i = instring('<<html>',ws[1 : J],1,1)
  if i = 0
     i = instring('<<HTML>',ws[1 : j],1,1)
     if i = 0
        i = instring('="text/html',ws[1 : j],1,1)
     end
  end
  if i > 0 then IsHTML = True.

[SOURCE]
PROPERTY:BEGIN
PRIORITY 2835
PROPERTY:END
AddElements ROUTINE

    if DollPtr < 1 or DollPtr > 63
       Do EndAll
    end

    LOOP

        Do AddElementsGetName

        IF AE_I > OrigFV THEN BREAK.
        IF AE_Start = 0 THEN BREAK.

        Do AddElementsFixName
        Do AddElementsGetFirstQuote
        Do AddElementsGetData
        Do AddElementsConvert
        Do ReplaceCustom
        Do AddElementsAddIt
        Do AddElementsClearAll

        AE_II +=1
        IF AE_II >= OrigFV THEN BREAK.

        Do AddElementsNewValue

   END


AddElementsConvert  ROUTINE

     Q:ELEMENT[DOLLPTR+1] = DollName2

     if ConvertIt = True
        glo:SkipExtended = False
        q:v1 = XML:ConvertFromXML(q:v1)
     end


AddElementsAddIt    ROUTINE

     ADD(XQUE) !  >>>> GPF happens here

AddElementsNewValue ROUTINE

     FullValue = FullValue[AE_II : ORIGFV]
     ORIGFV = LEN(FullValue)
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2835
PROPERTY:END
AddElementsGetName  ROUTINE

    AE_Start = 0

    ! FIND FIRST CHARACTER OF THE FIELD NAME
    LOOP AE_I = 1 TO OrigFV
        if FullValue[AE_I] < 'A' then cycle.                                ! must start with a letter
        AE_Start = AE_I
        BREAK
    END

    ! FIND THE LAST CHARACTER OF THE FIELD NAME
    IF AE_Start
        LOOP AE_I = AE_Start TO OrigFV
          VarCheck = val(FullValue[AE_I])
          case VarCheck
          of 61                     ! = sign (end of field name)
             BREAK
          of 32                     ! blank space is OK

          of 0 to 44                ! invalid symbols
             FullValue[AE_I] = '_'
          of 47 orof 63 orof 64     ! invalid symbols
             FullValue[AE_I] = '_'
          of 60 orof 62             ! cannot use < or > as field name
             FullValue[AE_I] = '_'
          of 160 orof 194
             if EncodingType = 1
                FullValue[AE_I] = '_'
             END
          end
        END
     END
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2835
PROPERTY:END
AddElementsFixName ROUTINE

    IF AE_Start > 0
       DollName2 = LEFT(FullValue[AE_Start : AE_I-1])
       DollName2 = Lower(DollName2)
    else
       DollName2 = ''
    end


[SOURCE]
PROPERTY:BEGIN
PRIORITY 2835
PROPERTY:END
AddElementsGetFirstQuote    ROUTINE

        QuoteType = chr(34)
        AE_I+=1

        ! find first quote (support for ' and ")
        ! --------------------------------------
        loop AE_II = AE_I to OrigFV
           VarCheck = VAL(FullValue[AE_II])
           CASE VarCheck
           OF 34
              QuoteType = chr(34)
              break
           OF 39
              QuoteType = chr(39)
              break
           end
        end

[SOURCE]
PROPERTY:BEGIN
PRIORITY 2835
PROPERTY:END
AddElementsGetData  ROUTINE

        AE_I = AE_II + 1

        ! create data field and check whether to convert it later
        ! -------------------------------------------------------
        ConvertIt = False
        q:v1 = ''
        loop AE_II = AE_I to OrigFV
            if FullValue[AE_II] = QuoteType then break.
            q:v1 = q:v1 & FullValue[AE_II]
            if ConvertIt = False
               if FullValue[AE_II] = '&' then convertIt=true.
               if EncodingType = 1
                  if FullValue[AE_II] > chr(127) then convertIt=True.
               end
            end
        end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2835
PROPERTY:END
AddElementsClearAll ROUTINE

      ! Clear out child element
      ! -----------------------
      IF DOLLPTR < 64
         Q:ELEMENT[DOLLPTR+1] = ''
      END
      q:v1 = ''

      FieldValue = ''
      FV= 0
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2835
PROPERTY:END
ReplaceCustom   ROUTINE

    if ReplaceRecords > 0
       LOOP AE_II = 1 TO ReplaceRecords
            GET(ReplaceQueue,ReplaceRecords)
            Q:V1 = XML:REPLACE(q:v1,RQ:ReplaceFrom,RQ:ReplaceTo)
        END
    end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2835
PROPERTY:END
CheckHTML   ROUTINE

     case DOLLNAME
     of 'meta'
        Do AddToQueue
     of 'img'
        Do AddToQueue
     of 'input'
        Do AddToQueue
     of 'font'
        Do AddToQueue
     of 'br'

     of 'nobr'
        Do AddToQueue
     of 'link'
        Do AddToQueue
     of 'hr'
        Do AddToQueue
     of 'area'
        Do AddToQueue
     of 'embed'
        Do AddToQueue
     of 'script'
        FieldValue = ''
        FV = 0
        HtmlScriptMode = True
     end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3150
PROPERTY:END
AddToQueue  ROUTINE

     DO AddStringElement

     IF ReplaceRecords
        Do ReplaceCustom
     end

     IF glo:_XML_xmlbinaryname
        Q:V1=glo:_XML_xmlbinaryname
        CLEAR(glo:_XML_xmlbinaryname)
     end

     ADD(XQUE)

     if DollPtr > MaxLevel
        MaxLevel = DollPtr
     end

     Do DecreaseDollPtr


AddBlankToQueue ROUTINE

    Do IncreaseDollPtr

    Q:V1 = ''
    ADD(XQUE)

    Do DecreaseDollPtr


AddStringElement    ROUTINE

     if fv = 0
        q:v1 = ''
     else
        IF HtmlScriptMode=False and INSTRING('&',FieldValue[1 : fv],1,1) > 0
           glo:SkipExtended = True
           Q:V1 = XML:ConvertFromXML(FieldValue)
        else
           Q:V1 = FieldValue[1 : fv]
        end
     end

[SOURCE]
PROPERTY:BEGIN
PRIORITY 3150
PROPERTY:END
AddBinaryFile   ROUTINE

     if BQUE:Directory
        glo:_XML_xmlbinaryname  = BQUE:Directory & '\' & xml:CreateEchoToken() & '.xmlobj'
     else
        glo:_XML_xmlbinaryname  = xml:CreateEchoToken()  & '.xmlobj'
     end

     CREATE(XMLBase64File)
     if errorcode()
        if SilentError <> True
           MESSAGE('Unable to Create Binary File.||File: ' & CLIP(glo:_XML_xmlbinaryname) & '||Error: ' & ERROR(),'Error Occurred',icon:exclamation)
        end
        GLO:_XML_LastError = 1055
        EXIT
     else
        OPEN(XMLBase64File)
        if errorcode()
           if SilentError <> True
              MESSAGE('Unable to Open Binary File.||File: ' & CLIP(glo:_XML_xmlbinaryname) & '||Error: ' & ERROR(),'Error Occurred',icon:exclamation)
           end
           GLO:_XML_LastError = 1056
           EXIT
        end
     end

     I+=1

     AE_I = I
     AE_III = 0

     Constant = ''
     Inv = ''
     Outv = ''

     LOOP
        if WS[AE_I] = '=' THEN BREAK.
        VarCheck = VAL(WS[AE_i])
        IF VARCHECK = 60 OR VARCHECK = 62
           AE_I-=1
           BREAK
        ELSIF VarCheck > 32
           Constant = Constant & WS[AE_I]
           AE_III+=1
           if AE_III = 76
              CLEAR(OutV)
              inv = Constant
              K = xmll:ConvertFromBase32(INV[1 : 76],OutV)
              B64:StandLine = Outv[1 : k]
              ADD(XMLBase64File,K)
              Constant = ''
              AE_III = 0
           END
        END
        AE_i+=1
        if ae_I > ls
           if MOD:LoadFromFile = false then break.

           CLEAR(WS)
           LS = 0
           DO LoadBlockOfDataFromFile

           AE_i = 1
           OrigLS = LS
           Ptr    = 1
        end
     END

     ! Put out trailing characters
     ! ---------------------------
     IF AE_III > 0

        CLEAR(OutV)
        INV = Constant

        K = xmll:ConvertFromBase32(INV[1 : AE_III],OutV)

        if K > 0
           B64:StandLine = Outv[1 : k]
           ADD(XMLBase64File,K)
        end
     END

     CLOSE(XMLBase64File)

     obj:filename = glo:_XML_xmlbinaryname
     ADD(BinaryObjects)

     I = AE_I

     ! trailing == instead of =
     ! ========================
     if ws[i+1] = '='
        i+=1
     end

[SOURCE]
PROPERTY:BEGIN
PRIORITY 3150
PROPERTY:END
SetupEncoding   ROUTINE

     GLO:_xml_InEncodingL = False

     CASE MOD:ENCODINGVALUE[1:3]
     OF 'UTF'
        IF MOD:ENCODINGVALUE = 'UTF-16'
           ENCODINGTYPE = 11
        ELSE
           ENCODINGTYPE = 1
           GLO:_xml_InEncodingL = True
        END
     OF 'ISO'
        ENCODINGTYPE = 2
     END

[SOURCE]
PROPERTY:BEGIN
PRIORITY 3150
PROPERTY:END
AddWSPtr    ROUTINE

    IF ptr > UseSize THEN EXIT.

    if fv = 0
       FieldValue = ws[ptr]
       fv=1
    else
       IF FV > UseSize THEN EXIT.
       fv+=1
       FieldValue[FV] = ws[ptr]
       FieldValue[FV+1] = chr(0)
    end

AddWSPtr2    ROUTINE

    if fv = 0
       FieldValue = chr(13) & chr(10)
    else
       FieldValue = FieldValue[1 : fv] & chr(13) & chr(10)
    end
    fv+=2
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3150
PROPERTY:END
EndAll  ROUTINE

  if SilentError <> True
     MESSAGE('Too many Elements.  There are more than 64 Elements (nodes).','Error Occurred',icon:exclamation)
  end
  GLO:_XML_LastError = 1000
  EOFFlag = False

  Do EndParsing
  Do EndDisposeVariables

  Return(GLO:_XML_LastError)
[END]
[END]
[PROCEDURE]
NAME XML:DebugQueue
PROTOTYPE '(<<String>)'
PARAMETERS '(<<InTitle>)'
[COMMON]
FROM Clarion Window
MODIFIED '2014/07/28' '16:32:50'
[DATA]
LocalRequest             LONG
!!> GUID('f542579a-afc2-45be-ad50-1f1c2f5e5926')
OriginalRequest          LONG
!!> GUID('381add7a-f240-499c-bf2f-ff9ba57f0969')
LocalResponse            LONG
!!> GUID('d2dd93b9-ce78-43f4-9369-194051f3e70c')
FilesOpened              LONG
!!> GUID('83aebe6a-6a8d-41a2-9312-4e9c9758a854')
WindowOpened             LONG
!!> GUID('a2d588af-9bec-4aba-aab6-a892df15e5ad')
WindowInitialized        LONG
!!> GUID('5ec50aa3-e7ec-487a-8ca3-a17d49fae697')
ForceRefresh             LONG
!!> GUID('d077beec-c1e2-4b51-9104-f2955ff7a2e1')
[SCREENCONTROLS]
! PROMPT('Show Full Data:'),USE(?ShowFullData:Prompt)
! TEXT,USE(ShowFullData)
[REPORTCONTROLS]
! TEXT,USE(ShowFullData)
ShowFullData             CSTRING(10240)
!!> GUID('35314789-0481-4c06-acc4-e19d6158050c'),PROMPT('Show Full Data:'),HEADER('Show Full Data'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Show Clip Data:'),USE(?ShowClipData:Prompt)
! TEXT,USE(ShowClipData)
[REPORTCONTROLS]
! TEXT,USE(ShowClipData)
ShowClipData             STRING(10240)
!!> GUID('b09527c4-cdb9-4471-90e5-cfc5aaa964ba'),PROMPT('Show Clip Data:'),HEADER('Show Clip Data'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Show Value:'),USE(?ShowValue:Prompt)
! TEXT,USE(ShowValue)
[REPORTCONTROLS]
! TEXT,USE(ShowValue)
ShowValue                STRING(10240)
!!> GUID('1f0a9d4f-765c-4441-b60a-2cd5c69537e9'),PROMPT('Show Value:'),HEADER('Show Value'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Max Elements:'),USE(?MaxElements:Prompt)
! ENTRY(@n-14),USE(MaxElements),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(MaxElements),RIGHT(1)
MaxElements              LONG
!!> GUID('f292bfb2-7351-41e4-a9ce-d67080171459'),PROMPT('Max Elements:'),HEADER('Max Elements'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Level:'),USE(?Level:Prompt)
! ENTRY(@n3),USE(Level)
[REPORTCONTROLS]
! STRING(@n3),USE(Level)
Level                    BYTE
!!> GUID('ed65a22b-25a0-4c28-83af-b16412296562'),PROMPT('Level:'),HEADER('Level'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('48e62b74-a514-4a08-834a-f3be2c4df11a'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('EX:'),USE(?EX:Prompt)
! ENTRY(@n-14),USE(EX),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(EX),RIGHT(1)
EX                       LONG
!!> GUID('14870d6e-e3df-46a5-a8e9-1874723399ac'),PROMPT('EX:'),HEADER('EX'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('X:'),USE(?X:Prompt)
! ENTRY(@n-14),USE(X),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(X),RIGHT(1)
X                        LONG
!!> GUID('978aefd5-9e59-4fc7-a3d2-6e13baf47a82'),PROMPT('X:'),HEADER('X'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Hide Rows:'),USE(?HideRows:Prompt)
! ENTRY(@n3),USE(HideRows)
[REPORTCONTROLS]
! STRING(@n3),USE(HideRows)
HideRows                 BYTE
!!> GUID('7777959c-daf4-4eaa-8ddf-d50ba3ac5622'),PROMPT('Hide Rows:'),HEADER('Hide Rows'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('cx:'),USE(?cx:Prompt)
! ENTRY(@n-14),USE(cx),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(cx),RIGHT(1)
cx                       LONG
!!> GUID('942e0794-5b76-42bc-b90e-3eb9b08e89c8'),PROMPT('cx:'),HEADER('cx'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('cy:'),USE(?cy:Prompt)
! ENTRY(@n-14),USE(cy),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(cy),RIGHT(1)
cy                       LONG
!!> GUID('a333fb0e-8588-4293-a647-e0aadbc10a51'),PROMPT('cy:'),HEADER('cy'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l Find Value:'),USE(?lFindValue:Prompt)
! ENTRY(@s50),USE(lFindValue)
[REPORTCONTROLS]
! STRING(@s50),USE(lFindValue)
lFindValue               STRING(128)
!!> GUID('f5e40bf7-ca5c-41c9-a71e-1655798acf69'),PROMPT('l Find Value:'),HEADER('l Find Value'),PICTURE(@s50)
[SCREENCONTROLS]
! PROMPT('l 1 : Region Control:'),USE(?l1:RegionControl:Prompt)
! ENTRY(@n-14),USE(l1:RegionControl),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l1:RegionControl),RIGHT(1)
l1:RegionControl         LONG
!!> GUID('96846523-a127-422f-bf99-555204c97033'),PROMPT('l 1 : Region Control:'),HEADER('l 1 : Region Control'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('L 1 : Column Selected:'),USE(?L1:ColumnSelected:Prompt)
! ENTRY(@n-14),USE(L1:ColumnSelected),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(L1:ColumnSelected),RIGHT(1)
L1:ColumnSelected        LONG
!!> GUID('c3433824-592c-4a8f-8f77-3c3355a2de5c'),PROMPT('L 1 : Column Selected:'),HEADER('L 1 : Column Selected'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('popupstring:'),USE(?popupstring:Prompt)
! TEXT,USE(popupstring)
[REPORTCONTROLS]
! TEXT,USE(popupstring)
popupstring              STRING(8000)
!!> GUID('119c4657-ba52-4826-bc1a-199756a43deb'),PROMPT('popupstring:'),HEADER('popupstring'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Secondaryqueue:'),USE(?Secondaryqueue:Prompt)
! ENTRY(@s52),USE(Secondaryqueue)
[REPORTCONTROLS]
! STRING(@s52),USE(Secondaryqueue)
Secondaryqueue           QUEUE,PRE(que2)
!!> GUID('733c550d-fd30-4a5a-8af7-71ed9fa5a951'),PROMPT('Secondaryqueue:'),HEADER('Secondaryqueue'),PICTURE(@s52)
[SCREENCONTROLS]
! PROMPT('Find Value:'),USE(?que2:FindValue:Prompt)
! ENTRY(@s50),USE(que2:FindValue)
[REPORTCONTROLS]
! STRING(@s50),USE(que2:FindValue)
FindValue                  STRING(128)
!!> GUID('8f8b038b-5b74-47ff-8a9f-cc36f74e9092'),PROMPT('Find Value:'),HEADER('Find Value'),PICTURE(@s50)
[SCREENCONTROLS]
! PROMPT('First Line:'),USE(?que2:FirstLine:Prompt)
! ENTRY(@n-14),USE(que2:FirstLine),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(que2:FirstLine),RIGHT(1)
FirstLine                  LONG
!!> GUID('e3bfcee4-ebed-4dd4-9d5b-5c51895dd18f'),PROMPT('First Line:'),HEADER('First Line'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
                         END
!!> GUID('c4faac0f-835b-4be7-9b93-cff4de02c220')
[SCREENCONTROLS]
! PROMPT('Local Queue:'),USE(?LocalQueue:Prompt)
! ENTRY(@s255),USE(LocalQueue)
[REPORTCONTROLS]
! STRING(@s255),USE(LocalQueue)
LocalQueue               QUEUE,PRE(l)
!!> GUID('3643af3c-cc7a-4e1f-b416-d3d623c7d7b6'),PROMPT('Local Queue:'),HEADER('Local Queue'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('lnumber:'),USE(?l:lnumber:Prompt)
! ENTRY(@n-14),USE(l:lnumber),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lnumber),RIGHT(1)
lnumber                    LONG
!!> GUID('98b37e6a-362e-4227-9b2e-85a0c076a313'),PROMPT('lnumber:'),HEADER('lnumber'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('lcolor:'),USE(?l:lcolor:Prompt)
! ENTRY(@n-14),USE(l:lcolor),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor),RIGHT(1)
lcolor                     LONG
!!> GUID('9db35597-f4b0-42fb-8424-37c44837cfd9'),PROMPT('lcolor:'),HEADER('lcolor'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 1:'),USE(?l:l1:Prompt)
! ENTRY(@s20),USE(l:l1)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l1)
l1                         STRING(128)
!!> GUID('de7c0836-61af-4f22-83a6-0cb4e3f6a8ff'),PROMPT('l 1:'),HEADER('l 1'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 1:'),USE(?l:lcolor1:Prompt)
! ENTRY(@n-14),USE(l:lcolor1),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor1),RIGHT(1)
lcolor1                    LONG
!!> GUID('c91f41fa-1b7b-44c6-b6a5-42a6d89f9c90'),PROMPT('lcolor 1:'),HEADER('lcolor 1'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 2:'),USE(?l:l2:Prompt)
! ENTRY(@s20),USE(l:l2)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l2)
l2                         STRING(128)
!!> GUID('b9935eaa-9bf8-4fbc-90a2-3f6e019a9c63'),PROMPT('l 2:'),HEADER('l 2'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('Lcolor 2:'),USE(?l:Lcolor2:Prompt)
! ENTRY(@n-14),USE(l:Lcolor2),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:Lcolor2),RIGHT(1)
Lcolor2                    LONG
!!> GUID('3ebba9e6-529a-478f-b4a3-d61750514fde'),PROMPT('Lcolor 2:'),HEADER('Lcolor 2'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 3:'),USE(?l:l3:Prompt)
! ENTRY(@s20),USE(l:l3)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l3)
l3                         STRING(128)
!!> GUID('6a3bbae3-a257-41b1-a12d-d9028737261d'),PROMPT('l 3:'),HEADER('l 3'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 4:'),USE(?l:lcolor3:Prompt)
! ENTRY(@n-14),USE(l:lcolor3),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor3),RIGHT(1)
lcolor3                    LONG
!!> GUID('e47e549e-05cd-4499-959a-af54dc7304a5'),PROMPT('lcolor 4:'),HEADER('lcolor 4'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 4:'),USE(?l:l4:Prompt)
! ENTRY(@s20),USE(l:l4)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l4)
l4                         STRING(128)
!!> GUID('d848cf95-acff-432c-87f8-af3443795cfa'),PROMPT('l 4:'),HEADER('l 4'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 5:'),USE(?l:lcolor4:Prompt)
! ENTRY(@n-14),USE(l:lcolor4),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor4),RIGHT(1)
lcolor4                    LONG
!!> GUID('de163c32-6e50-475b-b1b9-35195b7251ae'),PROMPT('lcolor 5:'),HEADER('lcolor 5'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 5:'),USE(?l:l5:Prompt)
! ENTRY(@s20),USE(l:l5)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l5)
l5                         STRING(128)
!!> GUID('dfe58527-1c6f-4613-8a68-088e9a52b6cb'),PROMPT('l 5:'),HEADER('l 5'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 6:'),USE(?l:lcolor5:Prompt)
! ENTRY(@n-14),USE(l:lcolor5),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor5),RIGHT(1)
lcolor5                    LONG
!!> GUID('3e2cd45a-622a-416f-b20b-f9cbb6de1d8d'),PROMPT('lcolor 6:'),HEADER('lcolor 6'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 6:'),USE(?l:l6:Prompt)
! ENTRY(@s20),USE(l:l6)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l6)
l6                         STRING(128)
!!> GUID('987d5001-0d27-4194-9513-d2d68ee6b8a5'),PROMPT('l 6:'),HEADER('l 6'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 7:'),USE(?l:lcolor6:Prompt)
! ENTRY(@n-14),USE(l:lcolor6),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor6),RIGHT(1)
lcolor6                    LONG
!!> GUID('989b5173-6549-4ed6-b70c-c458d4fb0798'),PROMPT('lcolor 7:'),HEADER('lcolor 7'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 7:'),USE(?l:l7:Prompt)
! ENTRY(@s20),USE(l:l7)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l7)
l7                         STRING(128)
!!> GUID('62e418c8-6f3f-4475-b66a-3a364db03211'),PROMPT('l 7:'),HEADER('l 7'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 8:'),USE(?l:lcolor7:Prompt)
! ENTRY(@n-14),USE(l:lcolor7),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor7),RIGHT(1)
lcolor7                    LONG
!!> GUID('4753ef59-b7aa-4807-ab88-ad55a5b06aa5'),PROMPT('lcolor 8:'),HEADER('lcolor 8'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 8:'),USE(?l:l8:Prompt)
! ENTRY(@s20),USE(l:l8)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l8)
l8                         STRING(128)
!!> GUID('39db10d2-f35c-443a-a6aa-dc3aa055355c'),PROMPT('l 8:'),HEADER('l 8'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 9:'),USE(?l:lcolor8:Prompt)
! ENTRY(@n-14),USE(l:lcolor8),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor8),RIGHT(1)
lcolor8                    LONG
!!> GUID('8cc18594-a30b-4e35-b563-021ed8a61a1e'),PROMPT('lcolor 9:'),HEADER('lcolor 9'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 9:'),USE(?l:l9:Prompt)
! ENTRY(@s20),USE(l:l9)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l9)
l9                         STRING(128)
!!> GUID('fb7cd5a5-494d-491c-8818-2d650578d85b'),PROMPT('l 9:'),HEADER('l 9'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 10:'),USE(?l:lcolor9:Prompt)
! ENTRY(@n-14),USE(l:lcolor9),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor9),RIGHT(1)
lcolor9                    LONG
!!> GUID('b24cda5c-8226-4c0b-84fa-a96ddc00a89c'),PROMPT('lcolor 10:'),HEADER('lcolor 10'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 10:'),USE(?l:l10:Prompt)
! ENTRY(@s20),USE(l:l10)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l10)
l10                        STRING(128)
!!> GUID('8f4311bb-a02f-458a-98c8-e943777d573b'),PROMPT('l 10:'),HEADER('l 10'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 11:'),USE(?l:lcolor10:Prompt)
! ENTRY(@n-14),USE(l:lcolor10),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor10),RIGHT(1)
lcolor10                   LONG
!!> GUID('5fa2dd42-3585-4f71-ad8e-0cab4f7fc31e'),PROMPT('lcolor 11:'),HEADER('lcolor 11'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 11:'),USE(?l:l11:Prompt)
! ENTRY(@s20),USE(l:l11)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l11)
l11                        STRING(128)
!!> GUID('1a14c5b0-1939-470c-9864-ce3ba926bf00'),PROMPT('l 11:'),HEADER('l 11'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 12:'),USE(?l:lcolor11:Prompt)
! ENTRY(@n-14),USE(l:lcolor11),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor11),RIGHT(1)
lcolor11                   LONG
!!> GUID('3baca71b-ccd9-4067-a31a-719f8fb8f42d'),PROMPT('lcolor 12:'),HEADER('lcolor 12'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 12:'),USE(?l:l12:Prompt)
! ENTRY(@s20),USE(l:l12)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l12)
l12                        STRING(128)
!!> GUID('f0f1754b-6df8-42b9-8eff-badd1fb398e5'),PROMPT('l 12:'),HEADER('l 12'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 13:'),USE(?l:lcolor12:Prompt)
! ENTRY(@n-14),USE(l:lcolor12),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor12),RIGHT(1)
lcolor12                   LONG
!!> GUID('f406ac3d-9baa-4efe-b666-d888d26d06ee'),PROMPT('lcolor 13:'),HEADER('lcolor 13'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 13:'),USE(?l:l13:Prompt)
! ENTRY(@s20),USE(l:l13)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l13)
l13                        STRING(128)
!!> GUID('5a791a68-7fbf-4992-b6fc-bf1d5acd3909'),PROMPT('l 13:'),HEADER('l 13'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 14:'),USE(?l:lcolor13:Prompt)
! ENTRY(@n-14),USE(l:lcolor13),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor13),RIGHT(1)
lcolor13                   LONG
!!> GUID('d6b45cfe-e3f0-404a-bd55-cbaf58dd3fac'),PROMPT('lcolor 14:'),HEADER('lcolor 14'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 14:'),USE(?l:l14:Prompt)
! ENTRY(@s20),USE(l:l14)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l14)
l14                        STRING(128)
!!> GUID('94cfadeb-b94a-47a9-a5b9-7d87fbca5227'),PROMPT('l 14:'),HEADER('l 14'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 15:'),USE(?l:lcolor14:Prompt)
! ENTRY(@n-14),USE(l:lcolor14),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor14),RIGHT(1)
lcolor14                   LONG
!!> GUID('b552d2c3-9c3e-4fa6-9999-5b8ff953168b'),PROMPT('lcolor 15:'),HEADER('lcolor 15'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 15:'),USE(?l:l15:Prompt)
! ENTRY(@s20),USE(l:l15)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l15)
l15                        STRING(128)
!!> GUID('5e50c1f3-966a-47f8-bb39-35d0d62b92f3'),PROMPT('l 15:'),HEADER('l 15'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 16:'),USE(?l:lcolor15:Prompt)
! ENTRY(@n-14),USE(l:lcolor15),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor15),RIGHT(1)
lcolor15                   LONG
!!> GUID('5f42966a-84f2-43e3-8b71-38348b0a825f'),PROMPT('lcolor 16:'),HEADER('lcolor 16'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 16:'),USE(?l:l16:Prompt)
! ENTRY(@s20),USE(l:l16)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l16)
l16                        STRING(128)
!!> GUID('0257f802-35ea-4912-b17a-0cface31f383'),PROMPT('l 16:'),HEADER('l 16'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 17:'),USE(?l:lcolor16:Prompt)
! ENTRY(@n-14),USE(l:lcolor16),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor16),RIGHT(1)
lcolor16                   LONG
!!> GUID('070e54fb-36d5-44e6-a43b-d5213eba2d05'),PROMPT('lcolor 17:'),HEADER('lcolor 17'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 17:'),USE(?l:l17:Prompt)
! ENTRY(@s20),USE(l:l17)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l17)
l17                        STRING(128)
!!> GUID('50c3c3b1-fe6b-49af-a744-080af0bd10ed'),PROMPT('l 17:'),HEADER('l 17'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 18:'),USE(?l:lcolor17:Prompt)
! ENTRY(@n-14),USE(l:lcolor17),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor17),RIGHT(1)
lcolor17                   LONG
!!> GUID('031023ff-a1db-44f6-8797-0062e8ab14e7'),PROMPT('lcolor 18:'),HEADER('lcolor 18'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 18:'),USE(?l:l18:Prompt)
! ENTRY(@s20),USE(l:l18)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l18)
l18                        STRING(128)
!!> GUID('59172d5e-c58d-4dd6-bac0-f40cbd8082e0'),PROMPT('l 18:'),HEADER('l 18'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 19:'),USE(?l:lcolor18:Prompt)
! ENTRY(@n-14),USE(l:lcolor18),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor18),RIGHT(1)
lcolor18                   LONG
!!> GUID('4142222e-237a-42a6-ad71-688208f56228'),PROMPT('lcolor 19:'),HEADER('lcolor 19'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 19:'),USE(?l:l19:Prompt)
! ENTRY(@s20),USE(l:l19)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l19)
l19                        STRING(128)
!!> GUID('83f6a79c-74a0-4d42-9eba-5eb5c0cffe01'),PROMPT('l 19:'),HEADER('l 19'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 20:'),USE(?l:lcolor19:Prompt)
! ENTRY(@n-14),USE(l:lcolor19),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor19),RIGHT(1)
lcolor19                   LONG
!!> GUID('5b4d1a05-c6f8-4944-8229-1d0293619665'),PROMPT('lcolor 20:'),HEADER('lcolor 20'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 20:'),USE(?l:l20:Prompt)
! ENTRY(@s20),USE(l:l20)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l20)
l20                        STRING(128)
!!> GUID('61fa9d0d-5c6c-4bc0-9e0e-021223d17563'),PROMPT('l 20:'),HEADER('l 20'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 21:'),USE(?l:lcolor20:Prompt)
! ENTRY(@n-14),USE(l:lcolor20),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor20),RIGHT(1)
lcolor20                   LONG
!!> GUID('1e117b29-2083-443d-ad26-8f1c50f9a5d9'),PROMPT('lcolor 21:'),HEADER('lcolor 21'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 21:'),USE(?l:l21:Prompt)
! ENTRY(@s20),USE(l:l21)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l21)
l21                        STRING(128)
!!> GUID('fb2f2091-0283-4b5f-979f-c88257eca1e9'),PROMPT('l 21:'),HEADER('l 21'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 22:'),USE(?l:lcolor21:Prompt)
! ENTRY(@n-14),USE(l:lcolor21),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor21),RIGHT(1)
lcolor21                   LONG
!!> GUID('44a60635-d9c6-48a8-8461-7a7785edf4e3'),PROMPT('lcolor 22:'),HEADER('lcolor 22'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 22:'),USE(?l:l22:Prompt)
! ENTRY(@s20),USE(l:l22)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l22)
l22                        STRING(128)
!!> GUID('f7fb491c-bf3f-4e5b-a220-b2f1e5ac5e48'),PROMPT('l 22:'),HEADER('l 22'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 23:'),USE(?l:lcolor22:Prompt)
! ENTRY(@n-14),USE(l:lcolor22),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor22),RIGHT(1)
lcolor22                   LONG
!!> GUID('5e911eea-b496-49f0-950e-3337821629b8'),PROMPT('lcolor 23:'),HEADER('lcolor 23'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 23:'),USE(?l:l23:Prompt)
! ENTRY(@s20),USE(l:l23)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l23)
l23                        STRING(128)
!!> GUID('4070013e-4dfc-499b-a492-ab0642d20aa3'),PROMPT('l 23:'),HEADER('l 23'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 24:'),USE(?l:lcolor23:Prompt)
! ENTRY(@n-14),USE(l:lcolor23),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor23),RIGHT(1)
lcolor23                   LONG
!!> GUID('c1519985-6bd2-4813-ae66-fcb5273ef0e8'),PROMPT('lcolor 24:'),HEADER('lcolor 24'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 24:'),USE(?l:l24:Prompt)
! ENTRY(@s20),USE(l:l24)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l24)
l24                        STRING(128)
!!> GUID('516af215-6c3e-4c04-8f59-54e06a027644'),PROMPT('l 24:'),HEADER('l 24'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 25:'),USE(?l:lcolor24:Prompt)
! ENTRY(@n-14),USE(l:lcolor24),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor24),RIGHT(1)
lcolor24                   LONG
!!> GUID('3e8f882c-2a39-4c51-9f34-18833e8b3e75'),PROMPT('lcolor 25:'),HEADER('lcolor 25'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 25:'),USE(?l:l25:Prompt)
! ENTRY(@s20),USE(l:l25)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l25)
l25                        STRING(128)
!!> GUID('4c3d2ed9-204f-482a-b94a-742e9073340b'),PROMPT('l 25:'),HEADER('l 25'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 26:'),USE(?l:lcolor25:Prompt)
! ENTRY(@n-14),USE(l:lcolor25),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor25),RIGHT(1)
lcolor25                   LONG
!!> GUID('19215958-44b1-43f7-8893-f1fcb9f17606'),PROMPT('lcolor 26:'),HEADER('lcolor 26'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 26:'),USE(?l:l26:Prompt)
! ENTRY(@s20),USE(l:l26)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l26)
l26                        STRING(128)
!!> GUID('50ee4f80-289b-443b-9830-68a02eb3e847'),PROMPT('l 26:'),HEADER('l 26'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 27:'),USE(?l:lcolor26:Prompt)
! ENTRY(@n-14),USE(l:lcolor26),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor26),RIGHT(1)
lcolor26                   LONG
!!> GUID('d4ca3e62-1d1b-451a-bf55-f06677db6f8b'),PROMPT('lcolor 27:'),HEADER('lcolor 27'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 27:'),USE(?l:l27:Prompt)
! ENTRY(@s20),USE(l:l27)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l27)
l27                        STRING(128)
!!> GUID('5d19d3b5-2174-4757-a84e-6b42c5a5ff05'),PROMPT('l 27:'),HEADER('l 27'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 28:'),USE(?l:lcolor27:Prompt)
! ENTRY(@n-14),USE(l:lcolor27),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor27),RIGHT(1)
lcolor27                   LONG
!!> GUID('d03e6f68-d69e-430c-a272-06e69617f397'),PROMPT('lcolor 28:'),HEADER('lcolor 28'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 28:'),USE(?l:l28:Prompt)
! ENTRY(@s20),USE(l:l28)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l28)
l28                        STRING(128)
!!> GUID('d8da2be8-bf05-43d6-8622-b477cee36c2a'),PROMPT('l 28:'),HEADER('l 28'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 29:'),USE(?l:lcolor28:Prompt)
! ENTRY(@n-14),USE(l:lcolor28),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor28),RIGHT(1)
lcolor28                   LONG
!!> GUID('c5f42107-7b7e-4b15-ac67-cfb49bd1e298'),PROMPT('lcolor 29:'),HEADER('lcolor 29'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 29:'),USE(?l:l29:Prompt)
! ENTRY(@s20),USE(l:l29)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l29)
l29                        STRING(128)
!!> GUID('b9d2aad5-e4e8-462a-bd47-215b18bfc89e'),PROMPT('l 29:'),HEADER('l 29'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 30:'),USE(?l:lcolor29:Prompt)
! ENTRY(@n-14),USE(l:lcolor29),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor29),RIGHT(1)
lcolor29                   LONG
!!> GUID('4828d9cc-5a3a-4e5e-b621-10c1b16a5e93'),PROMPT('lcolor 30:'),HEADER('lcolor 30'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 30:'),USE(?l:l30:Prompt)
! ENTRY(@s20),USE(l:l30)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l30)
l30                        STRING(128)
!!> GUID('b90cc2ad-a454-4f7d-b0b4-5f7b76676ff5'),PROMPT('l 30:'),HEADER('l 30'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 31:'),USE(?l:lcolor30:Prompt)
! ENTRY(@n-14),USE(l:lcolor30),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor30),RIGHT(1)
lcolor30                   LONG
!!> GUID('b9dea55e-7172-485a-8d0d-6d0d933e3d07'),PROMPT('lcolor 31:'),HEADER('lcolor 31'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 31:'),USE(?l:l31:Prompt)
! ENTRY(@s20),USE(l:l31)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l31)
l31                        STRING(128)
!!> GUID('44b4bbeb-472d-4e52-bdab-af06ac47e5a3'),PROMPT('l 31:'),HEADER('l 31'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 32:'),USE(?l:lcolor31:Prompt)
! ENTRY(@n-14),USE(l:lcolor31),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor31),RIGHT(1)
lcolor31                   LONG
!!> GUID('48e31a8f-f9d5-421a-842e-faf8de56c589'),PROMPT('lcolor 32:'),HEADER('lcolor 32'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l 32:'),USE(?l:l32:Prompt)
! ENTRY(@s20),USE(l:l32)
[REPORTCONTROLS]
! STRING(@s20),USE(l:l32)
l32                        STRING(128)
!!> GUID('5f42ac8c-c281-46e3-abd6-23ceb4f409cc'),PROMPT('l 32:'),HEADER('l 32'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('lcolor 33:'),USE(?l:lcolor32:Prompt)
! ENTRY(@n-14),USE(l:lcolor32),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l:lcolor32),RIGHT(1)
lcolor32                   LONG
!!> GUID('e00efb7a-857d-4eb4-9a06-19ac64fd635d'),PROMPT('lcolor 33:'),HEADER('lcolor 33'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('v 1:'),USE(?l:v1:Prompt)
! TEXT,USE(l:v1)
[REPORTCONTROLS]
! TEXT,USE(l:v1)
v1                         STRING(10240)
!!> GUID('79f4fbff-6a25-444b-b0d6-aa15ed5331d6'),PROMPT('v 1:'),HEADER('v 1'),PICTURE(@s255)
                         END
!!> GUID('6c417f5d-4db2-4688-b40c-3e0ea4df67e6')
[SCREENCONTROLS]
! PROMPT('Work Index:'),USE(?WorkIndex:Prompt)
! ENTRY(@n-14),USE(WorkIndex),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(WorkIndex),RIGHT(1)
WorkIndex                LONG
!!> GUID('b9647c1b-e618-4920-a1d5-d3bd39035c13'),PROMPT('Work Index:'),HEADER('Work Index'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('SAVEL : CURRENTINDEX:'),USE(?SAVEL:CURRENTINDEX:Prompt)
! ENTRY(@n-14),USE(SAVEL:CURRENTINDEX),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(SAVEL:CURRENTINDEX),RIGHT(1)
SAVEL:CURRENTINDEX       LONG
!!> GUID('030adf5f-e879-4d54-a8da-f49c6b5e46e7'),PROMPT('SAVEL : CURRENTINDEX:'),HEADER('SAVEL : CURRENTINDEX'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('SAVEL : W : CSPARM:'),USE(?SAVEL:W:CSPARM:Prompt)
! ENTRY(@s35),USE(SAVEL:W:CSPARM)
[REPORTCONTROLS]
! STRING(@s35),USE(SAVEL:W:CSPARM)
SAVEL:W:CSPARM           STRING(128),DIM(64)
!!> GUID('f2c0545e-705d-4fca-a410-e34d2d08421c'),PROMPT('SAVEL : W : CSPARM:'),HEADER('SAVEL : W : CSPARM'),PICTURE(@s35)
[SCREENCONTROLS]
! PROMPT('Clarion List:'),USE(?ClarionList:Prompt)
! ENTRY(@s75),USE(ClarionList)
[REPORTCONTROLS]
! STRING(@s75),USE(ClarionList)
ClarionList              QUEUE,PRE(CL)
!!> GUID('cf47442e-8d9b-4d9f-9f7d-ff30f6ad1889'),PROMPT('Clarion List:'),HEADER('Clarion List'),PICTURE(@s75)
[SCREENCONTROLS]
! PROMPT('Field Name:'),USE(?CL:FieldName:Prompt)
! ENTRY(@s35),USE(CL:FieldName)
[REPORTCONTROLS]
! STRING(@s35),USE(CL:FieldName)
FieldName                  STRING(128)
!!> GUID('79605947-940c-4f6d-aba0-460cf8aa0ea5'),PROMPT('Field Name:'),HEADER('Field Name'),PICTURE(@s35)
[SCREENCONTROLS]
! PROMPT('Field Type:'),USE(?CL:FieldType:Prompt)
! ENTRY(@s20),USE(CL:FieldType)
[REPORTCONTROLS]
! STRING(@s20),USE(CL:FieldType)
FieldType                  STRING(20)
!!> GUID('273b0305-3971-45c2-b842-163aa8abcce7'),PROMPT('Field Type:'),HEADER('Field Type'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('Field Length:'),USE(?CL:FieldLength:Prompt)
! ENTRY(@s20),USE(CL:FieldLength)
[REPORTCONTROLS]
! STRING(@s20),USE(CL:FieldLength)
FieldLength                STRING(20)
!!> GUID('fd5502d7-dc80-4907-9104-601afa06b08a'),PROMPT('Field Length:'),HEADER('Field Length'),PICTURE(@s20)
                         END
!!> GUID('2bbe9df4-8e8e-4542-89c3-3c83079cab14')
[SCREENCONTROLS]
! PROMPT('Set Number:'),USE(?SetNumber:Prompt)
! ENTRY(@n-14),USE(SetNumber),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(SetNumber),RIGHT(1)
SetNumber                LONG
!!> GUID('ddef190e-2ac8-4400-8009-97ed24a4ba0f'),PROMPT('Set Number:'),HEADER('Set Number'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Start Limit:'),USE(?StartLimit:Prompt)
! ENTRY(@n-14),USE(StartLimit),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(StartLimit),RIGHT(1)
StartLimit               LONG
!!> GUID('35e8b4a6-5830-4d56-97a9-e3b95b643ba4'),PROMPT('Start Limit:'),HEADER('Start Limit'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('End Limit:'),USE(?EndLimit:Prompt)
! ENTRY(@n-14),USE(EndLimit),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(EndLimit),RIGHT(1)
EndLimit                 LONG
!!> GUID('e7690422-4d38-45b9-8c06-a14b4b7a26e8'),PROMPT('End Limit:'),HEADER('End Limit'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('End Parm:'),USE(?EndParm:Prompt)
! ENTRY(@n7),USE(EndParm),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n7),USE(EndParm),RIGHT(1)
EndParm                  LONG
!!> GUID('e4f9b9d0-d7b7-42ea-9c97-79da16a04464'),PROMPT('End Parm:'),HEADER('End Parm'),PICTURE(@n7),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Debug On:'),USE(?DebugOn:Prompt)
! ENTRY(@n3),USE(DebugOn)
[REPORTCONTROLS]
! STRING(@n3),USE(DebugOn)
DebugOn                  BYTE
!!> GUID('62dc8e65-f50f-447d-9171-6db3789b6393'),PROMPT('Debug On:'),HEADER('Debug On'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Width Name:'),USE(?WidthName:Prompt)
! ENTRY(@s35),USE(WidthName)
[REPORTCONTROLS]
! STRING(@s35),USE(WidthName)
WidthName                STRING(128)
!!> GUID('971f2974-6193-4420-892d-617e9bdf17d4'),PROMPT('Width Name:'),HEADER('Width Name'),PICTURE(@s35)
[SCREENCONTROLS]
! PROMPT('Save SV:'),USE(?SaveSV:Prompt)
! ENTRY(@n-14),USE(SaveSV),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(SaveSV),RIGHT(1)
SaveSV                   LONG,DIM(4)
!!> GUID('c78f00b5-34bc-4fb6-893c-c057250522a6'),PROMPT('Save SV:'),HEADER('Save SV'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Expanded:'),USE(?Expanded:Prompt)
! ENTRY(@n3),USE(Expanded)
[REPORTCONTROLS]
! STRING(@n3),USE(Expanded)
Expanded                 BYTE
!!> GUID('aa42c8ed-9514-4aa2-8cc2-04f6111fac88'),PROMPT('Expanded:'),HEADER('Expanded'),PICTURE(@n3)
[PROMPTS]
%ReturnValue FIELD  ()
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (1)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (1)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ButtonAction DEPEND %Control DEFAULT TIMES 24
WHEN  ('') ('No Special Action')
WHEN  ('?AddToQueue') ('No Special Action')
WHEN  ('?AutoFit') ('No Special Action')
WHEN  ('?Button14') ('Call a Procedure')
WHEN  ('?Child') ('No Special Action')
WHEN  ('?Close') ('No Special Action')
WHEN  ('?CopyNode') ('No Special Action')
WHEN  ('?CreateQueue') ('No Special Action')
WHEN  ('?DebugOn') ('No Special Action')
WHEN  ('?Excel') ('No Special Action')
WHEN  ('?Find') ('No Special Action')
WHEN  ('?Group3') ('No Special Action')
WHEN  ('?Group3:2') ('No Special Action')
WHEN  ('?Group3:3') ('No Special Action')
WHEN  ('?Group3:4') ('No Special Action')
WHEN  ('?HideRows') ('No Special Action')
WHEN  ('?KillFromQueue') ('No Special Action')
WHEN  ('?List1') ('No Special Action')
WHEN  ('?NodePointer') ('No Special Action')
WHEN  ('?Parent') ('No Special Action')
WHEN  ('?ShowFullData') ('No Special Action')
WHEN  ('?ShowValue') ('No Special Action')
WHEN  ('?Sibling') ('No Special Action')
WHEN  ('?ViewXML') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 14
WHEN  ('?AddToQueue') ('')
WHEN  ('?AutoFit') ('')
WHEN  ('?Button14') ('')
WHEN  ('?Child') ('')
WHEN  ('?Close') ('')
WHEN  ('?CopyNode') ('')
WHEN  ('?CreateQueue') ('')
WHEN  ('?Excel') ('')
WHEN  ('?Find') ('')
WHEN  ('?KillFromQueue') ('')
WHEN  ('?NodePointer') ('')
WHEN  ('?Parent') ('')
WHEN  ('?Sibling') ('')
WHEN  ('?ViewXML') ('')

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 14
WHEN  ('?AddToQueue') ('')
WHEN  ('?AutoFit') ('')
WHEN  ('?Button14') ('')
WHEN  ('?Child') ('')
WHEN  ('?Close') ('')
WHEN  ('?CopyNode') ('')
WHEN  ('?CreateQueue') ('')
WHEN  ('?Excel') ('')
WHEN  ('?Find') ('')
WHEN  ('?KillFromQueue') ('')
WHEN  ('?NodePointer') ('')
WHEN  ('?Parent') ('')
WHEN  ('?Sibling') ('')
WHEN  ('?ViewXML') ('')

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 14
WHEN  ('?AddToQueue') ()
WHEN  ('?AutoFit') ()
WHEN  ('?Button14') (XMLL:DebugSets)
WHEN  ('?Child') ()
WHEN  ('?Close') ()
WHEN  ('?CopyNode') ()
WHEN  ('?CreateQueue') ()
WHEN  ('?Excel') ()
WHEN  ('?Find') ()
WHEN  ('?KillFromQueue') ()
WHEN  ('?NodePointer') ()
WHEN  ('?Parent') ()
WHEN  ('?Sibling') ()
WHEN  ('?ViewXML') ()

%ButtonThread DEPEND %Control LONG TIMES 14
WHEN  ('?AddToQueue') (0)
WHEN  ('?AutoFit') (0)
WHEN  ('?Button14') (0)
WHEN  ('?Child') (0)
WHEN  ('?Close') (0)
WHEN  ('?CopyNode') (0)
WHEN  ('?CreateQueue') (0)
WHEN  ('?Excel') (0)
WHEN  ('?Find') (0)
WHEN  ('?KillFromQueue') (0)
WHEN  ('?NodePointer') (0)
WHEN  ('?Parent') (0)
WHEN  ('?Sibling') (0)
WHEN  ('?ViewXML') (0)

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 24
WHEN  ('') ('25000')
WHEN  ('?AddToQueue') ('25000')
WHEN  ('?AutoFit') ('25000')
WHEN  ('?Button14') ('25000')
WHEN  ('?Child') ('25000')
WHEN  ('?Close') ('25000')
WHEN  ('?CopyNode') ('25000')
WHEN  ('?CreateQueue') ('25000')
WHEN  ('?DebugOn') ('25000')
WHEN  ('?Excel') ('25000')
WHEN  ('?Find') ('25000')
WHEN  ('?Group3') ('25000')
WHEN  ('?Group3:2') ('25000')
WHEN  ('?Group3:3') ('25000')
WHEN  ('?Group3:4') ('25000')
WHEN  ('?HideRows') ('25000')
WHEN  ('?KillFromQueue') ('25000')
WHEN  ('?List1') ('25000')
WHEN  ('?NodePointer') ('25000')
WHEN  ('?Parent') ('25000')
WHEN  ('?ShowFullData') ('25000')
WHEN  ('?ShowValue') ('25000')
WHEN  ('?Sibling') ('25000')
WHEN  ('?ViewXML') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 14
WHEN  ('?AddToQueue') ('')
WHEN  ('?AutoFit') ('')
WHEN  ('?Button14') ('')
WHEN  ('?Child') ('')
WHEN  ('?Close') ('')
WHEN  ('?CopyNode') ('')
WHEN  ('?CreateQueue') ('')
WHEN  ('?Excel') ('')
WHEN  ('?Find') ('')
WHEN  ('?KillFromQueue') ('')
WHEN  ('?NodePointer') ('')
WHEN  ('?Parent') ('')
WHEN  ('?Sibling') ('')
WHEN  ('?ViewXML') ('')

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 14
WHEN  ('?AddToQueue') ()
WHEN  ('?AutoFit') ()
WHEN  ('?Button14') ()
WHEN  ('?Child') ()
WHEN  ('?Close') ()
WHEN  ('?CopyNode') ()
WHEN  ('?CreateQueue') ()
WHEN  ('?Excel') ()
WHEN  ('?Find') ()
WHEN  ('?KillFromQueue') ()
WHEN  ('?NodePointer') ()
WHEN  ('?Parent') ()
WHEN  ('?Sibling') ()
WHEN  ('?ViewXML') ()

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 14
WHEN  ('?AddToQueue') (0)
WHEN  ('?AutoFit') (0)
WHEN  ('?Button14') (0)
WHEN  ('?Child') (0)
WHEN  ('?Close') (0)
WHEN  ('?CopyNode') (0)
WHEN  ('?CreateQueue') (0)
WHEN  ('?Excel') (0)
WHEN  ('?Find') (0)
WHEN  ('?KillFromQueue') (0)
WHEN  ('?NodePointer') (0)
WHEN  ('?Parent') (0)
WHEN  ('?Sibling') (0)
WHEN  ('?ViewXML') (0)

%ButtonRequest DEPEND %Control DEFAULT TIMES 24
WHEN  ('') ('None')
WHEN  ('?AddToQueue') ('None')
WHEN  ('?AutoFit') ('None')
WHEN  ('?Button14') ('None')
WHEN  ('?Child') ('None')
WHEN  ('?Close') ('None')
WHEN  ('?CopyNode') ('None')
WHEN  ('?CreateQueue') ('None')
WHEN  ('?DebugOn') ('None')
WHEN  ('?Excel') ('None')
WHEN  ('?Find') ('None')
WHEN  ('?Group3') ('None')
WHEN  ('?Group3:2') ('None')
WHEN  ('?Group3:3') ('None')
WHEN  ('?Group3:4') ('None')
WHEN  ('?HideRows') ('None')
WHEN  ('?KillFromQueue') ('None')
WHEN  ('?List1') ('None')
WHEN  ('?NodePointer') ('None')
WHEN  ('?Parent') ('None')
WHEN  ('?ShowFullData') ('None')
WHEN  ('?ShowValue') ('None')
WHEN  ('?Sibling') ('None')
WHEN  ('?ViewXML') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 14
WHEN  ('?AddToQueue') ('')
WHEN  ('?AutoFit') ('')
WHEN  ('?Button14') ('')
WHEN  ('?Child') ('')
WHEN  ('?Close') ('')
WHEN  ('?CopyNode') ('')
WHEN  ('?CreateQueue') ('')
WHEN  ('?Excel') ('')
WHEN  ('?Find') ('')
WHEN  ('?KillFromQueue') ('')
WHEN  ('?NodePointer') ('')
WHEN  ('?Parent') ('')
WHEN  ('?Sibling') ('')
WHEN  ('?ViewXML') ('')

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 14
WHEN  ('?AddToQueue') ()
WHEN  ('?AutoFit') ()
WHEN  ('?Button14') ()
WHEN  ('?Child') ()
WHEN  ('?Close') ()
WHEN  ('?CopyNode') ()
WHEN  ('?CreateQueue') ()
WHEN  ('?Excel') ()
WHEN  ('?Find') ()
WHEN  ('?KillFromQueue') ()
WHEN  ('?NodePointer') ()
WHEN  ('?Parent') ()
WHEN  ('?Sibling') ()
WHEN  ('?ViewXML') ()

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 2
WHEN  ('?HideRows') ()
WHEN  ('?ShowValue') ()

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 2
WHEN  ('?HideRows') ()
WHEN  ('?ShowValue') ()

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?HideRows') ('')
WHEN  ('?ShowValue') ('')

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 2
WHEN  ('?HideRows') ()
WHEN  ('?ShowValue') ()

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 2
WHEN  ('?HideRows') ()
WHEN  ('?ShowValue') ()

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?HideRows') ('')
WHEN  ('?ShowValue') ('')

%PostLookupDuringValidate DEPEND %Control LONG TIMES 24
WHEN  ('') (1)
WHEN  ('?AddToQueue') (1)
WHEN  ('?AutoFit') (1)
WHEN  ('?Button14') (1)
WHEN  ('?Child') (1)
WHEN  ('?Close') (1)
WHEN  ('?CopyNode') (1)
WHEN  ('?CreateQueue') (1)
WHEN  ('?DebugOn') (1)
WHEN  ('?Excel') (1)
WHEN  ('?Find') (1)
WHEN  ('?Group3') (1)
WHEN  ('?Group3:2') (1)
WHEN  ('?Group3:3') (1)
WHEN  ('?Group3:4') (1)
WHEN  ('?HideRows') (1)
WHEN  ('?KillFromQueue') (1)
WHEN  ('?List1') (1)
WHEN  ('?NodePointer') (1)
WHEN  ('?Parent') (1)
WHEN  ('?ShowFullData') (1)
WHEN  ('?ShowValue') (1)
WHEN  ('?Sibling') (1)
WHEN  ('?ViewXML') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 24
WHEN  ('')TIMES 0
WHEN  ('?AddToQueue')TIMES 0
WHEN  ('?AutoFit')TIMES 0
WHEN  ('?Button14')TIMES 0
WHEN  ('?Child')TIMES 0
WHEN  ('?Close')TIMES 0
WHEN  ('?CopyNode')TIMES 0
WHEN  ('?CreateQueue')TIMES 0
WHEN  ('?DebugOn')TIMES 0
WHEN  ('?Excel')TIMES 0
WHEN  ('?Find')TIMES 0
WHEN  ('?Group3')TIMES 0
WHEN  ('?Group3:2')TIMES 0
WHEN  ('?Group3:3')TIMES 0
WHEN  ('?Group3:4')TIMES 0
WHEN  ('?HideRows')TIMES 0
WHEN  ('?KillFromQueue')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?NodePointer')TIMES 0
WHEN  ('?Parent')TIMES 0
WHEN  ('?ShowFullData')TIMES 0
WHEN  ('?ShowValue')TIMES 0
WHEN  ('?Sibling')TIMES 0
WHEN  ('?ViewXML')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 24
WHEN  ('')TIMES 0
WHEN  ('?AddToQueue')TIMES 0
WHEN  ('?AutoFit')TIMES 0
WHEN  ('?Button14')TIMES 0
WHEN  ('?Child')TIMES 0
WHEN  ('?Close')TIMES 0
WHEN  ('?CopyNode')TIMES 0
WHEN  ('?CreateQueue')TIMES 0
WHEN  ('?DebugOn')TIMES 0
WHEN  ('?Excel')TIMES 0
WHEN  ('?Find')TIMES 0
WHEN  ('?Group3')TIMES 0
WHEN  ('?Group3:2')TIMES 0
WHEN  ('?Group3:3')TIMES 0
WHEN  ('?Group3:4')TIMES 0
WHEN  ('?HideRows')TIMES 0
WHEN  ('?KillFromQueue')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?NodePointer')TIMES 0
WHEN  ('?Parent')TIMES 0
WHEN  ('?ShowFullData')TIMES 0
WHEN  ('?ShowValue')TIMES 0
WHEN  ('?Sibling')TIMES 0
WHEN  ('?ViewXML')TIMES 0

%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabDisableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 8
WHEN  ('')TIMES 0
WHEN  ('?AddToQueue')TIMES 0
WHEN  ('?Button14')TIMES 0
WHEN  ('?KillFromQueue')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?NodePointer')TIMES 0
WHEN  ('?ShowFullData')TIMES 0
WHEN  ('?ShowValue')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 8
WHEN  ('')TIMES 0
WHEN  ('?AddToQueue')TIMES 0
WHEN  ('?Button14')TIMES 0
WHEN  ('?KillFromQueue')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?NodePointer')TIMES 0
WHEN  ('?ShowFullData')TIMES 0
WHEN  ('?ShowValue')TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 9
WHEN  ('') ('Default')
WHEN  ('?AddToQueue') ('Default')
WHEN  ('?Button14') ('Default')
WHEN  ('?KillFromQueue') ('Default')
WHEN  ('?List1') ('Default')
WHEN  ('?NodePointer') ('Default')
WHEN  ('?SHEET1') ('Default')
WHEN  ('?ShowFullData') ('Default')
WHEN  ('?ShowValue') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Off')
WHEN  ('?TOOLBAR1') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('')
WHEN  ('?TOOLBAR1') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?TOOLBAR1') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?TOOLBAR1') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?TOOLBAR1') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?TOOLBAR1') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?TOOLBAR1') (0)

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('AIBtn0')
WHEN  ('?IMAGE1') ('AIBtn2')

%AIEnableMimicControl DEPEND %Control LONG TIMES 2
WHEN  ('') (1)
WHEN  ('?IMAGE1') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('?TOOLBAR1')
WHEN  ('?IMAGE1') ('?TOOLBAR1')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?IMAGE1') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?IMAGE1') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?IMAGE1') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?IMAGE1') (0)

[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ControlPreEventHandling
[INSTANCES]
WHEN '?Close'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[GROUP]
PRIORITY 4000
INSTANCE 1
[END]
[END]
WHEN '?List1'
[INSTANCES]
WHEN 'NewSelection'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 do PostNewSelection
[END]
WHEN 'AlertKey'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
     if keycode() = F3key
        Do RunFindNow
     else
        L1:ColumnSelected = xmll:MouseDown(L1:RegionControl,?List1)
        if L1:ColumnSelected
           L1:ColumnSelected-=1
           if L1:ColumnSelected
               Do FillFindQueue
               x = popup(clip(Popupstring))
               if x =< records(SecondaryQueue)
                  get(SecondaryQueue,x)
                  if ~ERRORCODE()
                     SELECT(?List1,que2:FirstLine,l1:ColumnSelected+1)
                     DO PostNewSelection
                  end
                elsif x > records(SecondaryQueue)
                    loop x = 1 to records(SecondaryQueue)
                       clear(ClarionList)
                       get(secondaryQueue,x)
                       CL:FieldName = que2:FindValue
                       add(ClarionList)
                    end
                end
            end
            xmll:mouseUp(L1:RegionControl)
        end
     end
[END]
WHEN 'PreAlertKey'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
CYCLE
[END]
[END]
WHEN '?HideRows'
[INSTANCES]
WHEN 'NewSelection'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  loop i = 1 to HideRows
     ?list1{PROPLIST:Width,i+1} = 0
  end

  loop i = HideRows+1 to (LEVEL)
     if ?List1{PROPLIST:WIDTH,i+1} = 0
        ?List1{PROPLIST:WIDTH,i+1} = 75
    end
  end
[END]
[END]
WHEN '?Excel'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 REMOVE('iQXMLDebug.csv')
 Glo:_XML_XMLFileName = 'iQXMLDebug.csv'
 CREATE(XMLTEXT)
 if ~errorcode()
    open(XMLTEXT)
      loop i = 1 to records(XQue)
        GET(XQUE,I)
        CLEAR(TXT:STANDLINE)
        LOOP EX = 1 TO Level
          txt:standline = txt:standline & chr(34) & CLIP(Q:Element[ex]) & CHR(34) & ','
        END
        txt:standline = txt:standline & chr(34) & CLIP(Q:V1) & CHR(34)
        APPEND(XMLTEXT)
     END
     CLOSE(XMLTEXT)
     if message('File iQXMLDebug.csv exported to CSV file.||Do you want to open it with Excel now?','Exported',icon:question,button:YES+button:NO) = button:YES
        XML:ViewFile('iQXMLDebug.csv')
     end
  end



[END]
[END]
WHEN '?CopyNode'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 CLEAR(ShowClipData)

 LOOP EX = 1 TO MAXIMUM(Q:Element,1)
    IF Q:ELEMENT[EX]='' THEN BREAK.
    if ShowClipData then ShowClipData = clip(ShowClipData) & ','.
    ShowClipData = CLIP(ShowClipData) & chr(39) & clip(Q:Element[EX]) & chr(39)
 END
 SETCLIPBOARD(CLIP(ShowClipData))
[END]
[END]
WHEN '?Find'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    Do RunFindNow
[END]
[END]
WHEN '?ViewXML'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    XML:ViewFile(clip(GLO:_XML_LastLoadedFile))
[END]
[END]
WHEN '?NodePointer'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 Do RunFindNode
[END]
[END]
WHEN '?CreateQueue'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  Do CreateTheQueue
[END]
[END]
WHEN '?AddToQueue'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  Do GetLocalValue
  if lFindValue
     CL:FieldName = lFindValue
     add(ClarionList)
  end


[END]
[END]
WHEN '?KillFromQueue'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  Do GetLocalValue

  loop i = 1 to records(ClarionList)
    get(ClarionList,i)
    if CLIP(CL:FieldName) = CLIP(lFindValue)
       DELETE(ClarionList)
       BREAK
    end
  end
[END]
[END]
[END]
EMBED %AfterWindowOpening
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
LABEL
PROPERTY:END
  XMLL:RestoreWindow('DebugQueue')

  MaxElements = MAXIMUM(Q:Element,1)
  LEVEL = 1

  Window{PROP:FontName + PROP:StatusFont} = 'Arial'
  Window{PROP:FontSize + PROP:StatusFont} = 8

  Window{PROP:StatusText,1} = 'Load Time: ' & (LoadTime * .01) & ' seconds'

  if InTitle
     WINDOW{PROP:TEXT} = WINDOW{PROP:TEXT} & ' [' & InTitle & ']'
  end

  if Glo:_XML_LastLoadedFile
    Window{PROP:StatusText,3} = 'File: ' & Glo:_XML_LastLoadedFile
  end

  Window{PROP:StatusText,2} = 'Encoding: ' & mod:encodingValue

  LOOP I = 1 TO MAXIMUM(Q:ELEMENT,1)
      if w:csparm[i] = '' then break.
      SAVEL:W:CSPARM[I] = W:CSPARM[I]
  END
  SAVEL:CURRENTINDEX = CURRENTINDEX
  EndParm = i-1

  ! Node pointer
  ! ------------
  ?LIST1{PROPSTYLE:Backcolor,1} = 0463A96H
  ?LIST1{PROPSTYLE:FONTCOLOR,1} = COLOR:WHITE

  ! Valid Data within Node
  ! ----------------------
  ?LIST1{PROPSTYLE:Backcolor,2} = 062EEFFH

  L1:RegionControl = xmll:Initiate()

  SETCURSOR(CURSOR:WAIT)

  loop i = 1 to records(XQue)
    get(XQue,i)
    clear(LocalQueue)
    l:v1  = Q:V1
    l:l1 = Q:Element[1]
    l:l2 = Q:Element[2]
    l:l3 = Q:Element[3]
    l:l4 = Q:Element[4]
    l:l5 = Q:Element[5]
    l:l6 = Q:Element[6]
    if l:l6 <> ''
       l:l7 = Q:Element[7]
       l:l8 = Q:Element[8]
       l:l9 = Q:Element[9]
       l:l10 = Q:Element[10]
       l:l11 = Q:Element[11]
       l:l12 = Q:Element[12]
       l:l13 = Q:Element[13]
       l:l14 = Q:Element[14]
       l:l15 = Q:Element[15]
       l:l16 = Q:Element[16]
       l:l17 = Q:Element[17]
       l:l18 = Q:Element[18]
       l:l19 = Q:Element[19]
       if l:l20 <> ''
          l:l20 = Q:Element[20]
          l:l21 = Q:Element[21]
          l:l22 = Q:Element[22]
          l:l23 = Q:Element[23]
          l:l24 = Q:Element[24]
          l:l25 = Q:Element[25]
          l:l26 = Q:Element[26]
          l:l27 = Q:Element[27]
          l:l28 = Q:Element[28]
          l:l29 = Q:Element[29]
          l:l30 = Q:Element[30]
          l:l31 = Q:Element[31]
          l:l32 = Q:Element[32]
       end
    end
    l:lnumber= i

    if i = CurrentIndex
      SetNumber = 1;startlimit = 1;endlimit = EndParm
      Do SetFullLine
      SetNumber = 2;startlimit = EndParm + 1;endlimit = 32
      Do SetFullLine
    END
    ADD(LocalQueue)

    LOOP EX = MaxElements TO LEVEL BY -1
      IF Q:Element[EX] <> ''
          Level = EX;break
      END
    END
  END

  loop i = 1 to 32
     if i > level
        ?list1{PROPLIST:Width,i+1} = 0
     ELSE
       X = GETINI(CLIP(Glo:_XML_XMLFileName),I,,'IQXML.INI')
       IF X
          ?LIST1{PROPLIST:WIDTH,I+1} = X
       ELSE
          ?LIST1{PROPLIST:WIDTH,I+1} = 100
       END
     END
  end

  SETCURSOR()
[END]
EMBED %BeforeWindowClosing
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  XMLL:SaveWindow('DebugQueue')

  if WindowOpened
    LOOP I = 1 TO 32
        if ?list1{proplist:width,i+1} > 0
           PUTINI(CLIP(Glo:_XML_XMLFileName),I,?LIST1{proplist:width,I+1},'IQXML.INI')
        end
    END

    CLEAR(SecondaryQueue)
    FREE(SecondaryQueue)

    CLEAR(LocalQueue)

    FREE(LocalQueue)

    LOOP I = 1 TO MAXIMUM(Q:ELEMENT,1)
         W:CSPARM[I] = SAVEL:W:CSPARM[I]
    END
    CURRENTINDEX = SAVEL:CURRENTINDEX
  end

  MOD:QueueActive=False
[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3600
PROPERTY:END
RunFindNode ROUTINE


  xmll:FindWindow2()
  case GlobalResponse
  of 9
     DO SetItNow2
     if DebugOn = True
        DO HighlightChildren
     end
  of RequestCompleted
     DO SetItNow
     if DebugOn = True
        DO HighlightChildren
     end
  of 10
     StartLimit = 1
     EndLimit = 33
     SetNumber = 0
     x = records(LocalQueue)
     LOOP I =  1 TO X
       GET(LOCALQUEUE,I)
       Do SetFullLine
       PUT(LOCALQUEUE)
     END
     DEBUGON = FALSE
     if records(LocalQueue)
        GET(LOCALQUEUE,1);SELECT(?LIST1,1,1)
     end
     DISPLAY()
     CurrentIndex = 0
     CLEAR(w:csparm[])    ! Clear Node Pointer
  end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3600
PROPERTY:END
RunFindNow  ROUTINE

    if ~FindValue
       xmll:FindWindow()
       if globalresponse = requestcompleted
          Do FindItNow
       end
    else
      do FindItNow
    end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
FindItNow   ROUTINE

   cX = choice(?List1)
   if cx = 0 then cx = 1.
   cY = ?list1{Prop:column}

   loop
      get(XQue,cx)
      if errorcode() then exit.
      cy+=1
      loop x = cy to 34
          if x = 34
             lFindValue = Q:V1
          else
             lFindValue = Q:Element[x-1]
          end
          if instring(upper(clip(FindValue)),upper(clip(lFindValue)),1,1)
             SELECT(?list1,Cx,x)
             DO PostNewSelection
             EXIT
          end
      END
      CX+=1
      cy=1
      IF CX > RECORDS(XQue)
         if MESSAGE('"' & clip(Findvalue)&'" not found.||Continue from start of file?','Find not Found',icon:question,button:yes+button:no) = button:YES
            cx = 1
         else
            BREAK
         END
      END
   END
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
SetitNow    ROUTINE

   if DebugOn = True
      DebugOn = False
      DO HighlightChildren
      DebugOn = True
   end

   WorkIndex = CurrentIndex

   If XML:FindNextNode(FindValue2[1],FindValue2[2],FindValue2[3],FindValue2[4],Findvalue2[5],FindValueImplicit)
      message(XML:GetError(),'Error!',icon:exclamation)
   end
   Do UpdateNodePointer

[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
SetitNow2    ROUTINE

   if DebugOn = True
      DebugOn = False
      DO HighlightChildren
      DebugOn = True
   end

   WorkIndex = CurrentIndex

   X = XML:FindAnyNode(FindValue2[1],FindValue2[2],FindValue2[3],FindValue2[4],Findvalue2[5])
   case X
   of -1
      message('None of the entries were found!','Error!',icon:exclamation)
   of 0
      message('No Data To Find or End of File!','Error!',icon:exclamation)
   else
      message('The entry found was ' & FindValue2[x],'Found!',icon:asterisk)
   end
   Do UpdateNodePointer

[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
UpdateNodePointer  ROUTINE

   loop x = 1 to Maxelements
      if w:csparm[x] = '' then break.
   end
   EndParm = x-1

   get(LocalQueue,WorkIndex)
   if ~errorcode()
      SetNumber = 0;startlimit = 1;endlimit = 32
      Do SetFullLine
      PUT(LocalQueue)
   end

   get(LocalQueue,CurrentIndex)
   if ~errorcode()
      SetNumber = 1;startlimit = 1;endlimit = EndParm+1
      Do SetFullLine
      SetNumber = 2;startlimit = EndParm + 2;endlimit = 33
      Do SetFullLine
      PUT(LocalQueue)
      select(?List1,CurrentIndex,x)
   end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
SetFullLine ROUTINE

    loop ex = StartLimit to EndLimit
          execute ex
           l:lcolor = SetNumber
           l:lcolor1 = SetNumber
           l:lcolor2 = SetNumber
           l:lcolor3 = SetNumber
           l:lcolor4 = SetNumber
           l:lcolor5 = SetNumber
           l:lcolor6 = SetNumber
           l:lcolor7 = SetNumber
           l:lcolor8 = SetNumber
           l:lcolor9 = SetNumber
           l:lcolor10 = SetNumber
           l:lcolor11 = SetNumber
           l:lcolor12 = SetNumber
           l:lcolor13 = SetNumber
           l:lcolor14 = SetNumber
           l:lcolor15 = SetNumber
           l:lcolor16 = SetNumber
           l:lcolor17 = SetNumber
           l:lcolor18 = SetNumber
           l:lcolor19 = SetNumber
           l:lcolor20 = SetNumber
           l:lcolor21 = SetNumber
           l:lcolor22 = SetNumber
           l:lcolor23 = SetNumber
           l:lcolor24 = SetNumber
           l:lcolor25 = SetNumber
           l:lcolor26 = SetNumber
           l:lcolor27 = SetNumber
           l:lcolor28 = SetNumber
           l:lcolor29 = SetNumber
           l:lcolor30 = SetNumber
           l:lcolor31 = SetNumber
           l:lcolor32 = SetNumber
          end
     end

[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
HighlightChildren   ROUTINE

    WorkIndex = CurrentIndex
    if XML:GotoSibling().
    I = POINTER(XQue)
    CurrentIndex = WorkIndex

    LOOP X = (CurrentIndex+1) TO (I-1)
      GET(LocalQueue,X)
      if DebugOn = true
         SetNumber = 3;startlimit = 1;endlimit = EndParm + 1
         Do SetFullLine
         SetNumber = 2;startlimit = EndParm + 2;endlimit = 33
         Do SetFullLine
      else
         SetNumber = 0;startlimit = 1;endlimit = 33
         Do SetFullLine
      end

      PUT(LocalQueue)
    END

    GET(XQUE,CurrentIndex)             ! RESTORE BACK TO RIGHT RECORD
    GET(LocalQueue,CurrentIndex)       ! RESTORE BACK TO RIGHT RECORD
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
R_GotoSibling    ROUTINE

   if DebugOn = True
      DebugOn = False
      DO HighlightChildren
      DebugOn = True
   end

   WorkIndex = CurrentIndex

   If XML:GotoSibling()
      Do ShowError
   end
   Do UpdateNodePointer


R_GotoParent     ROUTINE

   if DebugOn = True
      DebugOn = False
      DO HighlightChildren
      DebugOn = True
   end

   WorkIndex = CurrentIndex

   If XML:GotoParent()
      Do ShowError
   END
   Do UpdateNodePointer

R_GotoChild      ROUTINE

   if DebugOn = True
      DebugOn = False
      DO HighlightChildren
      DebugOn = True
   end

   WorkIndex = CurrentIndex

   If XML:GotoChild()
      Do ShowError
   end
   Do UpdateNodePointer

ShowError   ROUTINE

    message(XML:GetError(),'Error!',icon:asterisk)
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
PostNewSelection    ROUTINE

 EX = CHOICE(?List1)
 if EX
    get(XQue,EX)
 else
    clear(XQUE)
 end

 ShowFullData = CHR(60) & CLIP(Q:Element[1]) & CHR(62)

 LOOP EX = 2 TO Maxelements
    if Q:Element[Ex]
       ShowFullData = ShowFullData & chr(60) & CLIP(Q:Element[Ex]) & chr(62)
    else
       BREAK
    END
 END

 ShowValue = Q:V1
 ShowFullData = ShowFullData & ' [' & clip(xque.V1) & ']'

 Display(?ShowValue)
 Display(?ShowFullData)
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
FillFindQueue   ROUTINE

   CLEAR(popupstring)
   CLEAR(Secondaryqueue)
   FREE(Secondaryqueue)

   loop x = 1 to records(XQue)
     GET(XQue,X)
     if l1:columnselected = 33
        lFindValue = Q:V1
     elsif l1:ColumnSelected
        lFindValue = Q:Element[l1:columnselected]
     end

     if ~lFindValue then cycle.

     que2:findvalue = lfindvalue
     get(SECONDARYQUEUE,QUE2:FINDVALUE)
     IF ERRORCODE()
        que2:firstline = x
        add(SECONDARYQUEUE,que2:findvalue)
     end
   end

   SORT(secondaryqueue,+que2:firstline)
   loop x = 1 to records(secondaryqueue)
     get(secondaryqueue,x)
        IF POPUPSTRING
           popupstring = clip(popupstring) & '|' & clip(que2:findvalue)
        ELSE
           popupstring = Clip(que2:findvalue)
        END
   end

   if l1:columnselected <> 33
      popupstring = clip(popupstring) &'|-|Add all to Clarion Queue'
   end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
GetLocalValue   ROUTINE

  CLEAR(lFindValue)

  cX = choice(?List1)
  if cx = 0 then exit.

  cY = ?list1{Prop:column}

  if cX
     GET(XQue,cX)
     IF ERRORCODE() THEN EXIT.
  else
     CLEAR(XQUE)
     EXIT
  end

  if CY-1 = MaxElements + 1
     lFindValue = Q:V1
  ELSIF cy-1 > 0
     lFindValue = Q:Element[Cy-1]
  END
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
CreateTheQueue  ROUTINE

  xmll:FixupClarionList(ClarionList)

  popupstring = 'ClarionQueue   QUEUE' & chr(13) & chr(10)

  loop I = 1 to records(ClarionList)
    GET(ClarionList,i)
    if CL:FieldType='STRING' OR CL:FieldType = 'CSTRING'
       POPupstring = clip(popupstring) & sub(CL:FieldName,1,40) & ' ' & CLIP(CL:FieldType) & '(' & LEFT(CLIP(CL:FieldLength)) & ')' & CHR(13) & chr(10)
    ELSE
        popupstring = clip(popupstring) & sub(CL:FieldName,1,40) & ' ' & CLIP(CL:FieldType) & CHR(13) & chr(10)
    END

  end

  POPUPSTRING = CLIP(POPUPSTRING) & ' END' & CHR(13) & chr(10)
  SETCLIPBOARD(CLIP(POPUPSTRING))
  MESSAGE('The information was added to the clipboard.','Create Queue')


[SOURCE]
PROPERTY:BEGIN
PRIORITY 9950
PROPERTY:END
!ResizeIT    ROUTINE
!
!    loop i = ?ShowFullData to ?KillFromQueue
!       i{prop:at,2} = window{prop:height}
!
!    if Expanded = True
!!       SaveSV[1] = ?ShowValue{prop:at,1}
!!       SaveSV[2] = ?ShowValue{prop:at,2}
!!       SaveSV[3] = ?ShowValue{prop:at,3}
!!       SaveSV[4] = ?ShowValue{prop:at,4}
!       ?ShowValue{prop:at,1} = ?list1{prop:at,1}
!       ?ShowValue{prop:at,2} = ?list1{prop:at,2}
!       ?ShowValue{prop:at,3} = ?list1{prop:at,3}
!       ?ShowValue{prop:at,4} = ?list1{prop:at,4}
!    else
!!       ?ShowValue{prop:at,1} = SaveSV[1]
!!       ?ShowValue{prop:at,2} = SaveSV[2]
!!       ?ShowValue{prop:at,3} = SaveSV[3]
!!       ?ShowValue{prop:at,4} = SaveSV[4]
!    end
!
[END]
EMBED %WindowEventHandling
[INSTANCES]
WHEN 'AlertKey'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 if keycode() = f3key
    Do RunFindNow
 elsif keycode() = f4key
    Do RunFindNode
 elsif keycode() = f5key
    post(event:Accepted,?Parent)
 elsif keycode() = f6key
    post(event:Accepted,?Sibling)
 elsif keycode() = f7key
    post(event:Accepted,?Child)
 ELSIF KEYCODE() = f10key
    if Expanded = false
       Hide(?List1)
       SaveSV[1] = ?ShowValue{prop:at,1}
       SaveSV[2] = ?ShowValue{prop:at,2}
       SaveSV[3] = ?ShowValue{prop:at,3}
       SaveSV[4] = ?ShowValue{prop:at,4}
       ?ShowValue{prop:at,1} = ?list1{prop:at,1}
       ?ShowValue{prop:at,2} = ?list1{prop:at,2}
       ?ShowValue{prop:at,3} = ?list1{prop:at,3}
       ?ShowValue{prop:at,4} = ?list1{prop:at,4}
       Expanded = True
    else
       Unhide(?List1)
       ?ShowValue{prop:at,1} = SaveSV[1]
       ?ShowValue{prop:at,2} = SaveSV[2]
       ?ShowValue{prop:at,3} = SaveSV[3]
       ?ShowValue{prop:at,4} = SaveSV[4]
       Expanded = False
    end
 end
[END]
[END]
EMBED %ProcedureInitialize
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
if GLO:_XML_SkipDebug
   do ProcedureRETURN
end
MOD:QueueActive=True
[END]
EMBED %ControlPostEventHandling
[INSTANCES]
WHEN '?Sibling'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  Do R_GotoSibling
  if DebugOn = True
     DO HighlightChildren
  end

[END]
[END]
WHEN '?Child'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  Do R_GotoChild
  if DebugOn = True
     DO HighlightChildren
  end
[END]
[END]
WHEN '?Parent'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  Do R_GotoParent
  if DebugOn = True
     DO HighlightChildren
  end
[END]
[END]
WHEN '?DebugOn'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 if CurrentIndex = 0
    message('Not On Any Record!','Highlight Error',icon:asterisk)
    DebugOn = false;display()
 elsif w:csparm[1] = ''
    message('No Node Pointer Set.||Cannot Highlight Records.','Highlight Error',icon:asterisk)
    DebugOn = false;display()
 else
    DO HighlightChildren
 end
[END]
[END]
WHEN '?AutoFit'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 SETCURSOR(cursor:wait)
 CREATE(500,CREATE:string)

 loop startLimit = 1 to Level
    CLEAR(WidthName)
    Clear(CY)
    loop I = 1 TO RECORDS(Xque)
       GET(Xque,I)
       if ~q:Element[StartLimit] then cycle.

       if WidthName <> Q:Element[StartLimit]
          500{PROP:TEXT} = CLIP(Q:Element[StartLimit])
          CX = 500{PROP:WIDTH}
          if CX > CY
             CY = CX
          end
          WidthName = CLIP(Q:Element[StartLimit])
      end
   end
   if CY
      ?List1{Proplist:width,StartLimit + 1} = CY + 4
   end
 END

 DESTROY(500)

 SETCURSOR()
[END]
[END]
[END]
EMBED %PrepareAlerts
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  if CurrentIndex
     ?List1{PROP:SELECTED} = CurrentIndex
     Do PostNewSelection
  end
[END]
[END]
[ADDITION]
NAME Clarion CloseCurrentWindow
[INSTANCE]
INSTANCE 1
[WINDOW]
WINDOW  WINDOW('iQ-XML - Debug XML Queue'),AT(,,677,400),FONT('Tahoma',8,,FONT:regular,CHARSET:ANSI), |
          RESIZE,ALRT(F3Key),ALRT(F4Key),ALRT(F5Key),ALRT(F6Key),ALRT(F7Key),ALRT(F10Key), |
          CENTER,ICON('iqxml.ico'),GRAY,IMM,MAX,STATUS(100,100,-100),SYSTEM
          TOOLBAR,AT(0,0,677,20),USE(?TOOLBAR1),#ORDINAL(1)
            IMAGE('csblue2.jpg'),AT(0,0,,20),USE(?IMAGE1),FULL,#ORDINAL(2)
            BUTTON,AT(421,3,15,14),USE(?AddToQueue),ICON('xmladd.ico'),FLAT,SKIP,TIP('Add to Cla' & |
              'rion Queue List'),#ORIG(?Button8),#ORDINAL(3)
            BUTTON,AT(436,3,15,14),USE(?KillFromQueue),ICON('xmldelete.ico'),FLAT,SKIP,TIP('Remove fro' & |
              'm Clarion Queue List'),#ORIG(?Button8),#ORDINAL(4)
            BUTTON('Excel Export'),AT(455,3,64,14),USE(?Excel),LEFT,ICON('excel16.ico'),FLAT, |
              SKIP,TIP('Export this debug queue to an Excel Spreadsheet.'),TRN,#ORIG(?Button2), |
              #ORDINAL(5)
            GROUP('Group 3'),AT(71,3,1,13),USE(?Group3:2),BEVEL(0,0,156),BOXED,#ORIG(?Group3), |
              #ORDINAL(6)
            END
            BUTTON('Find'),AT(302,3,45,14),USE(?Find),LEFT,KEY(CtrlF),ICON('xmlfind16.ico'), |
              FLAT,SKIP,TIP('F3 - Find an element or data.'),TRN,#ORIG(?Button2),#ORDINAL(7)
            GROUP('Group 3'),AT(349,3,1,13),USE(?Group3:5),BEVEL(0,0,156),BOXED,#ORIG(?Group3:2), |
              #ORDINAL(8)
            END
            BUTTON('Find Node'),AT(1,3,67,14),USE(?NodePointer),LEFT,KEY(CtrlF),ICON('NodePointer16.ico'), |
              FLAT,SKIP,TIP('F4 - Manually position the cursor to the next node.'),TRN,#ORIG(?Button2:3), |
              #ORDINAL(9)
            GROUP('Group 3'),AT(141,3,1,13),USE(?Group3:6),BEVEL(0,0,156),BOXED,#ORIG(?Group3:5), |
              #ORDINAL(10)
            END
            GROUP('Group 3'),AT(244,3,1,13),USE(?Group3:3),BEVEL(0,0,156),BOXED,#ORIG(?Group3:2), |
              #ORDINAL(11)
            END
            BUTTON('Cl&ose'),AT(631,3,47,14),USE(?Close),LEFT,ICON('cancel16.ico'),FLAT,SKIP, |
              TRN,#ORDINAL(12)
            GROUP('Group 3'),AT(299,3,1,13),USE(?Group3:4),BEVEL(0,0,156),BOXED,#ORIG(?Group3:3), |
              #ORDINAL(13)
            END
            BUTTON('Auto Fit'),AT(247,3,51,14),USE(?AutoFit),LEFT,ICON('xmlfit16.ico'),FLAT, |
              TIP('Fit all cells to largest element.'),TRN,#ORIG(?Button13),#ORDINAL(14)
            CHECK,AT(123,3,15,14),USE(DebugOn),KEY(F8Key),ICON('Highlight.ico'),FLAT,TIP('F8 - Highl' & |
              'ight all child records from node pointer.'),TRN,#ORIG(DebugOn),#ORDINAL(15)
            BUTTON,AT(107,3,15,14),USE(?Child),LEFT,KEY(CtrlF),ICON('jsibling.ico'),FLAT,SKIP, |
              TIP('F7 - Goto Child'),TRN,#ORIG(?Button2:8),#ORDINAL(16)
            BUTTON,AT(75,3,15,14),USE(?Parent),LEFT,KEY(CtrlF),ICON('jgrand.ico'),FLAT,SKIP, |
              TIP('F5 - Goto Parent'),TRN,#ORIG(?Button2:3),#ORDINAL(17)
            GROUP('Group 3'),AT(578,3,1,13),USE(?Group3),BEVEL(0,0,156),BOXED,#ORIG(?Group3), |
              #ORDINAL(18)
            END
            BUTTON('Settings'),AT(581,3,49,14),USE(?Button14),LEFT,ICON('setuprates.ico'), |
              FLAT,#ORIG(?Button14),#ORDINAL(19)
            BUTTON,AT(91,3,15,14),USE(?Sibling),LEFT,KEY(CtrlF),ICON('jchild.ico'),FLAT,SKIP, |
              TIP('F6 - Goto Sibling'),TRN,#ORIG(?Button2:7),#ORDINAL(20)
            BUTTON('Copy Node to Clipboard'),AT(144,3,99,14),USE(?CopyNode),LEFT,ICON('copy16.ico'), |
              FLAT,SKIP,TIP('Copy current record as XML:FindNextNode Parm String.'),TRN,#ORIG(?Button2), |
              #ORDINAL(21)
            GROUP('Group 3'),AT(452,4,1,13),USE(?Group3:7),BEVEL(0,0,156),BOXED,#ORIG(?Group3:3), |
              #ORDINAL(22)
            END
            BUTTON('Create Queue'),AT(353,3,69,14),USE(?CreateQueue),LEFT,ICON('xmlcreate16.ico'), |
              FLAT,SKIP,TIP('Create Clarion Queue Structure from marked elements. <0DH,0AH>' & |
              '<0DH,0AH>(see Add/Delete icons in bottom right)'),TRN,#ORIG(?Button2:2),#ORDINAL(23)
            BUTTON('View XML'),AT(519,3,57,14),USE(?ViewXML),LEFT,ICON('gridpen16.ico'),FLAT, |
              SKIP,TIP('Open in XML Browser'),TRN,#ORIG(?Button2:2),#ORDINAL(24)
          END
          TEXT,AT(39,2,,16),USE(ShowFullData),FULL,FONT(,,,FONT:bold,CHARSET:ANSI),VSCROLL, |
            COLOR(00C8FFFFh),#ORIG(ShowFullData),#ORDINAL(25)
          SPIN(@n3),AT(2,5,34,12),USE(HideRows),RANGE(0,32),STEP(1),#ORIG(?Spin1),#ORDINAL(26)
          SHEET,AT(1,22,,359),USE(?SHEET1),FULL,#ORDINAL(27)
            TAB(' XML '),USE(?TAB1),#ORDINAL(28)
              LIST,AT(1,38),USE(?List1),FULL,FONT('Arial',8,,FONT:regular,CHARSET:ANSI),HVSCROLL, |
                ALRT(MouseLeft),KEY(CtrlC),GRID(COLOR:Silver),COLUMN,FORMAT('28L(1)|_MY' & |
                '~Index~@s8@E(00H,0C0C0C0H,00H,0C0C0C0H)80L(1)|_MY~Level 1~@s128@80L(1)' & |
                '|_MY~Level 2~@s128@80L(1)|_MY~Level 3~@s128@80L(1)|_MY~Level 4~@s128@8' & |
                '0L(1)|_MY~Level 5~@s128@80L(1)|_MY~Level 6~@s128@80L(1)|_MY~Level 7~@s' & |
                '128@80L(1)|_MY~Level 8~@s128@80L(1)|_MY~Level 9~@s128@80L(1)|_MY~Level' & |
                ' 10~@s128@80L(1)|_MY~Level 11~@s128@80L(1)|_MY~Level 12~@s128@80L(1)|_' & |
                'MY~Level 13~@s128@80L(1)|_MY~Level 14~@s128@80L|_MY~Level 15~L(1)@s128' & |
                '@80L(1)|_MY~Level 16~@s128@80L(1)|_MY~Level 17~@s128@80L(1)|_MY~Level ' & |
                '18~@s128@80L(1)|_MY~Level 19~@s128@80L(1)|_MY~Level 20~@s128@80L(1)|_M' & |
                'Y~Level 21~@s20@80L(1)|_MY~Level 22~@s20@80L(1)|_MY~Level 23~@s20@80L(' & |
                '1)|_MY~Level 24~@s20@80L(1)|_MY~Level 25~@s20@80L(1)|_MY~Level 26~@s20' & |
                '@80L(1)|_MY~Level 27~@s20@80L(1)|_MY~Level 28~@s20@80L(1)|_MY~Level 29' & |
                '~@s20@80L(1)|_MY~Level 30~@s20@80L(1)|_MY~Levell 31~@s20@80L(1)|_MY~Le' & |
                'vel 32~@s20@512L(1)|M~Data Value~@s255@E(,0FF7DBEH,,)'),FROM(LocalQueue), |
                #FIELDS(l:lnumber,l:l1,l:l2,l:l3,l:l4,l:l5,l:l6,l:l7,l:l8,l:l9,l:l10,l:l11, |
                l:l12,l:l13,l:l14,l:l15,l:l16,l:l17,l:l18,l:l19,l:l20,l:l21,l:l22,l:l23,l:l24, |
                l:l25,l:l26,l:l27,l:l28,l:l29,l:l30,l:l31,l:l32,l:v1),#ORIG(?List1),#ORDINAL(29)
            END
            TAB(' Expand Data Value '),USE(?TAB3),#ORDINAL(30)
              TEXT,AT(1,38),USE(ShowValue),FULL,VSCROLL,#ORIG(ShowValue),#ORDINAL(31)
            END
            TAB(' Comments '),USE(?TAB2),#ORDINAL(32)
              LIST,AT(1,38),USE(?LIST2),FULL,VSCROLL,FORMAT('1020L(2)|M~Comment~L(1)@s255@'), |
                FROM(CommentQueue),#FIELDS(CQ:CommentString),#ORDINAL(33)
            END
          END
        END

[PROCEDURE]
NAME XML:LoadQueue
PROTOTYPE '(*QUEUE,<<BYTE>,<<BYTE>,<<BYTE>,<<LONG>,<<BYTE>),LONG'
PARAMETERS '(LocalQueue,<<Inchildren>,<<inAll>,<<IncludePrefix>,<<MaxRecords>,<<ForceWrite>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/09/30' '14:44:51'
[DATA]
[SCREENCONTROLS]
! PROMPT('fld Ref:'),USE(?fldRef:Prompt)
! ENTRY(@s20),USE(fldRef)
[REPORTCONTROLS]
! STRING(@s20),USE(fldRef)
fldRef                   ANY
!!> GUID('59216f81-0da7-4c3c-95a5-ae68a81cc897'),PROMPT('fld Ref:'),HEADER('fld Ref'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('pfld Ref:'),USE(?pfldRef:Prompt)
! ENTRY(@s20),USE(pfldRef)
[REPORTCONTROLS]
! STRING(@s20),USE(pfldRef)
pfldRef                  ANY
!!> GUID('f4c86ad7-0726-454e-a360-282e293c44f4'),PROMPT('pfld Ref:'),HEADER('pfld Ref'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('Lfield Name:'),USE(?LfieldName:Prompt)
! ENTRY(@s128),USE(LfieldName)
[REPORTCONTROLS]
! STRING(@s128),USE(LfieldName)
LfieldName               CSTRING(129)
!!> GUID('b856e3b3-d931-4e3b-b646-6ad091d13264'),PROMPT('Lfield Name:'),HEADER('Lfield Name'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('p Field Name:'),USE(?pFieldName:Prompt)
! ENTRY(@s128),USE(pFieldName)
[REPORTCONTROLS]
! STRING(@s128),USE(pFieldName)
pFieldName               CSTRING(129)
!!> GUID('d2b02a44-0a0b-4968-8b7b-2c6cbb0804f7'),PROMPT('p Field Name:'),HEADER('p Field Name'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('l Field Dim:'),USE(?lFieldDim:Prompt)
! ENTRY(@n-14),USE(lFieldDim),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(lFieldDim),RIGHT(1)
lFieldDim                LONG
!!> GUID('4bb84b66-4397-4a97-9dbc-47e6a2a9e420'),PROMPT('l Field Dim:'),HEADER('l Field Dim'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG
!!> GUID('905867b7-9efa-49c5-b718-626a01c56c72'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('j:'),USE(?j:Prompt)
! ENTRY(@n-14),USE(j),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(j),RIGHT(1)
j                        LONG
!!> GUID('1a004085-9a45-42b9-bfb0-ca6a43974412'),PROMPT('j:'),HEADER('j'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('jj:'),USE(?jj:Prompt)
! ENTRY(@n-14),USE(jj),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(jj),RIGHT(1)
jj                       LONG
!!> GUID('5a8cebf1-04de-45a2-ae77-7e500cb0905d'),PROMPT('jj:'),HEADER('jj'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('ip:'),USE(?ip:Prompt)
! ENTRY(@n-14),USE(ip),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ip),RIGHT(1)
ip                       LONG
!!> GUID('b76ad862-f752-4afb-87a8-d1d70c344410'),PROMPT('ip:'),HEADER('ip'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Ex:'),USE(?Ex:Prompt)
! ENTRY(@n-14),USE(Ex),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(Ex),RIGHT(1)
Ex                       LONG
!!> GUID('804ceb09-b0e0-4aa2-95c0-a214d77bba51'),PROMPT('Ex:'),HEADER('Ex'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('L:'),USE(?L:Prompt)
! ENTRY(@s128),USE(L)
[REPORTCONTROLS]
! STRING(@s128),USE(L)
L                        STRING(128),DIM(64)
!!> GUID('37c80506-21a0-443a-be4e-3142b82646b0'),PROMPT('L:'),HEADER('L'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('Field Name:'),USE(?FieldName:Prompt)
! ENTRY(@s128),USE(FieldName)
[REPORTCONTROLS]
! STRING(@s128),USE(FieldName)
FieldName                CSTRING(129)
!!> GUID('500ac894-31b2-4126-af65-a5f54693f7a0'),PROMPT('Field Name:'),HEADER('Field Name'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('QF ield Name:'),USE(?QFieldName:Prompt)
! ENTRY(@s128),USE(QFieldName),DECIMAL(14)
[REPORTCONTROLS]
! STRING(@s128),USE(QFieldName),DECIMAL(14)
QFieldName               CSTRING(129)
!!> GUID('739903be-3496-4caa-87d7-edcdeaa4d627'),PROMPT('QF ield Name:'),HEADER('QF ield Name'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('QF ield Name 2:'),USE(?QFieldName2:Prompt)
! ENTRY(@s128),USE(QFieldName2)
[REPORTCONTROLS]
! STRING(@s128),USE(QFieldName2)
QFieldName2              CSTRING(129)
!!> GUID('51b2bf17-e269-47f9-ae26-382f2f1fc1db'),PROMPT('QF ield Name 2:'),HEADER('QF ield Name 2'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('QF ield Name 3:'),USE(?QFieldName3:Prompt)
! ENTRY(@s128),USE(QFieldName3)
[REPORTCONTROLS]
! STRING(@s128),USE(QFieldName3)
QFieldName3              CSTRING(129)
!!> GUID('3c75a4ee-2de1-495d-8968-692531662d8a'),PROMPT('QF ield Name 3:'),HEADER('QF ield Name 3'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('Test Field Value:'),USE(?TestFieldValue:Prompt)
! ENTRY(@s128),USE(TestFieldValue)
[REPORTCONTROLS]
! STRING(@s128),USE(TestFieldValue)
TestFieldValue           CSTRING(129)
!!> GUID('7f4f5603-a4d7-4e60-9eea-57e04edcfa27'),PROMPT('Test Field Value:'),HEADER('Test Field Value'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('Recs:'),USE(?Recs:Prompt)
! ENTRY(@n-14),USE(Recs),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(Recs),RIGHT(1)
Recs                     LONG,AUTO
!!> GUID('46a9e053-f7a9-4713-8be6-f22e0054b4af'),PROMPT('Recs:'),HEADER('Recs'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Max Rows:'),USE(?MaxRows:Prompt)
! ENTRY(@n-14),USE(MaxRows),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(MaxRows),RIGHT(1)
MaxRows                  LONG
!!> GUID('8b799018-b4ad-44a8-8910-02f090cbb239'),PROMPT('Max Rows:'),HEADER('Max Rows'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Add To Queue:'),USE(?AddToQueue:Prompt)
! ENTRY(@n3),USE(AddToQueue)
[REPORTCONTROLS]
! STRING(@n3),USE(AddToQueue)
AddToQueue               BYTE
!!> GUID('8eb5b1df-694b-4bcd-80c1-1943f82965a7'),PROMPT('Add To Queue:'),HEADER('Add To Queue'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Clear At Parent Level:'),USE(?ClearAtParentLevel:Prompt)
! ENTRY(@n-14),USE(ClearAtParentLevel),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ClearAtParentLevel),RIGHT(1)
ClearAtParentLevel       LONG
!!> GUID('010a6811-46df-494c-9513-3e9667ce5bcc'),PROMPT('Clear At Parent Level:'),HEADER('Clear At Parent Level'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Last Level:'),USE(?LastLevel:Prompt)
! ENTRY(@n-14),USE(LastLevel),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(LastLevel),RIGHT(1)
LastLevel                LONG
!!> GUID('a70bbfa3-a413-4e66-974c-e86baf0f852d'),PROMPT('Last Level:'),HEADER('Last Level'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('End All:'),USE(?EndAll:Prompt)
! ENTRY(@n3),USE(EndAll)
[REPORTCONTROLS]
! STRING(@n3),USE(EndAll)
EndAll                   BYTE
!!> GUID('d310e198-a68c-4f03-9587-4f7854f18aea'),PROMPT('End All:'),HEADER('End All'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Total Qualify Records:'),USE(?TotalQualifyRecords:Prompt)
! ENTRY(@n-14),USE(TotalQualifyRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(TotalQualifyRecords),RIGHT(1)
TotalQualifyRecords      LONG,AUTO
!!> GUID('f4c1e970-6946-4335-bcaa-ace883332259'),PROMPT('Total Qualify Records:'),HEADER('Total Qualify Records'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Total Attribute Records:'),USE(?TotalAttributeRecords:Prompt)
! ENTRY(@n-14),USE(TotalAttributeRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(TotalAttributeRecords),RIGHT(1)
TotalAttributeRecords    LONG,AUTO
!!> GUID('ea0a9786-3f90-4ca6-af10-2aa52ae313bc'),PROMPT('Total Attribute Records:'),HEADER('Total Attribute Records'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Total Primary Records:'),USE(?TotalPrimaryRecords:Prompt)
! ENTRY(@n-14),USE(TotalPrimaryRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(TotalPrimaryRecords),RIGHT(1)
TotalPrimaryRecords      LONG,AUTO
!!> GUID('c2fee511-e66d-415f-9d65-9e3b400e78db'),PROMPT('Total Primary Records:'),HEADER('Total Primary Records'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Total Primary FR ecords:'),USE(?TotalPrimaryFRecords:Prompt)
! ENTRY(@n-14),USE(TotalPrimaryFRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(TotalPrimaryFRecords),RIGHT(1)
TotalPrimaryFRecords     LONG
!!> GUID('5a2587b7-e3bc-4985-b54a-ae2724c1528a'),PROMPT('Total Primary FR ecords:'),HEADER('Total Primary FR ecords'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Records Written:'),USE(?RecordsWritten:Prompt)
! ENTRY(@n-14),USE(RecordsWritten),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(RecordsWritten),RIGHT(1)
RecordsWritten           LONG
!!> GUID('94ed0279-6b90-47d1-8649-53e703c14ea4'),PROMPT('Records Written:'),HEADER('Records Written'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('At Sibling:'),USE(?AtSibling:Prompt)
! ENTRY(@n3),USE(AtSibling)
[REPORTCONTROLS]
! STRING(@n3),USE(AtSibling)
AtSibling                BYTE
!!> GUID('b4773c38-0eb0-4254-9c71-82895e546b49'),PROMPT('At Sibling:'),HEADER('At Sibling'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Fill Increments:'),USE(?FillIncrements:Prompt)
! ENTRY(@n3),USE(FillIncrements)
[REPORTCONTROLS]
! STRING(@n3),USE(FillIncrements)
FillIncrements           BYTE
!!> GUID('d0d928e5-ab19-4771-8fcc-30d5a3a8b6f1'),PROMPT('Fill Increments:'),HEADER('Fill Increments'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Clear Pending:'),USE(?ClearPending:Prompt)
! ENTRY(@n3),USE(ClearPending)
[REPORTCONTROLS]
! STRING(@n3),USE(ClearPending)
ClearPending             BYTE
!!> GUID('2f3dc0a1-8023-41bc-a88e-9a058be71673'),PROMPT('Clear Pending:'),HEADER('Clear Pending'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Only Write On Force Write:'),USE(?OnlyWriteOnForceWrite:Prompt)
! ENTRY(@n3),USE(OnlyWriteOnForceWrite)
[REPORTCONTROLS]
! STRING(@n3),USE(OnlyWriteOnForceWrite)
OnlyWriteOnForceWrite    BYTE
!!> GUID('4739d9ed-f912-4355-a366-c0c106116fa6'),PROMPT('Only Write On Force Write:'),HEADER('Only Write On Force Write'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Element Write:'),USE(?ElementWrite:Prompt)
! ENTRY(@n3),USE(ElementWrite)
[REPORTCONTROLS]
! STRING(@n3),USE(ElementWrite)
ElementWrite             BYTE
!!> GUID('2c336aff-e1cc-4571-87c8-cab6f065e35e'),PROMPT('Element Write:'),HEADER('Element Write'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Skip It:'),USE(?SkipIt:Prompt)
! ENTRY(@n3),USE(SkipIt)
[REPORTCONTROLS]
! STRING(@n3),USE(SkipIt)
SkipIt                   BYTE,AUTO
!!> GUID('dacd036c-b06e-442b-9081-821fd6a93c15'),PROMPT('Skip It:'),HEADER('Skip It'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Max Fields:'),USE(?MaxFields:Prompt)
! ENTRY(@n-7),USE(MaxFields),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(MaxFields),RIGHT(1)
MaxFields                SHORT
!!> GUID('60866d42-dc71-4314-9e94-513bedfad025'),PROMPT('Max Fields:'),HEADER('Max Fields'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Field Name Queue:'),USE(?FieldNameQueue:Prompt)
! ENTRY(@s20),USE(FieldNameQueue)
[REPORTCONTROLS]
! STRING(@s20),USE(FieldNameQueue)
FieldNameQueue           QUEUE,PRE(FN)
!!> GUID('27782561-64d1-4694-9717-de2a9f47ff8f'),PROMPT('Field Name Queue:'),HEADER('Field Name Queue'),PICTURE(@s20),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Field Name:'),USE(?FN:FieldName:Prompt)
! ENTRY(@s128),USE(FN:FieldName)
[REPORTCONTROLS]
! STRING(@s128),USE(FN:FieldName)
FieldName                  CSTRING(129)
!!> GUID('d3e066d9-389b-4122-9b5f-29f0bd722631'),PROMPT('Field Name:'),HEADER('Field Name'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Field Dims:'),USE(?FN:FieldDims:Prompt)
! ENTRY(@n-14),USE(FN:FieldDims),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(FN:FieldDims),RIGHT(1)
FieldDims                  LONG
!!> GUID('c4fa4d7c-39a8-4d74-95ab-c9a0a4bf6ca8'),PROMPT('Field Dims:'),HEADER('Field Dims'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
                         END
!!> GUID('a8f39084-a1ed-4b30-aad6-26e0df3fc83d')
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   Do SetupFieldNames
   Do SetupLoadQueue
   Do MainLoop
   Do FillQueue
   Do ProcedureRETURN
[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2361
PROPERTY:END
SetupFieldNames ROUTINE

  LOOP J = 1 TO 512
    LFieldName = WHO(LocalQueue,j)
    if LFieldName = '' THEN BREAK.
    FN:FieldName = LOWER(LFieldName)
    FN:FieldDims  = HOWMANY(LocalQueue,j)
    ADD(FieldNameQueue)
    MaxFields+=1
  END
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2361
PROPERTY:END
SetupLoadQueue    ROUTINE

   LOOP I = 1 to MaxLevel
      L[I] = W:CSPARM[I]
      IF L[I] = ''
         MaxRows = I
         BREAK
      END
   END

   if MaxRows = 0 then MaxRows = 1.

   TotalAttributeRecords = RECORDS(AttributeQueue)
   TotalQualifyRecords   = RECORDS(QualifyQueue)
   TotalPrimaryRecords   = RECORDS(PrimaryQueue)
   TotalPrimaryFRecords  = RECORDS(PrimaryFQueue)

   IF NOT OMITTED(ForceWrite)
      OnlyWriteOnForceWrite = ForceWrite
   END

   ! See if Parent Level Primary Clearing has to be done
   ! ---------------------------------------------------
   Loop I = 1 to TotalPrimaryRecords
     GET(PrimaryQueue,I)
     if PQ:FieldClear=1
        ClearAtParentLevel = I
        BREAK
     END
   END

   ! Prime with Field Values
   ! -----------------------
   CLEAR(LocalQueue)
   Do SetQueueFields
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2361
PROPERTY:END
SetQueueFields  ROUTINE

  if TotalPrimaryFRecords > 0
     loop jj = 1 to MaxFields
        GET(FieldNameQueue,JJ)
        pFieldName = FN:FieldName

         ! ignore field prefix
         ! -------------------
         if IncludePrefix <> True
            ip = instring(':',pFieldName,1,1)
            IF IP > 0 AND IP < 128
               IP+=1
               pFieldName = CLIP(pFieldName[IP : 128])
            end
         end

         PFQ:FieldName = pFieldName
         GET(PrimaryFQueue,+PFQ:FieldName)
         IF ~ERRORCODE()

            pfldRef &= WHAT(LocalQueue,jj)
            pfldRef = PFQ:FieldValue
            pfldRef &= NULL

         end
      end
   end


[SOURCE]
PROPERTY:BEGIN
PRIORITY 2361
PROPERTY:END
MainLoop    ROUTINE

   Recs = RECORDS(XQUE)
   LOOP  I = CurrentIndex to Recs
     GET(XQue,I)

     ! Ensure reading proper document section
     ! --------------------------------------
     EndAll=False
     LOOP EX = 1 to MaxRows
         if l[ex] <> ''
            if l[ex] <> Q:Element[ex]
               EndAll=True
               BREAK
            end
         ELSE
            BREAK
         end
     end
     if EndAll = True then break.
     ! ---------------------------------------

     if InAll = 0
        if Q:Element[MaxRows] = '' then break.           ! end of document section
     else
        if Q:Element[MaxRows] = ''
           if Q:V1 <> ''
              Do LQ_Qualify
              if EndAll = True then break.
              Do LQ_Assign
              ElementWrite=True
           end
           Do FillQueue
           ClearPending = True
           AtSibling=True
        END
     end

     Do MainLoop_PrimaryKey
     Do MainLoop_ClearPending

     ! ignore all child nodes
     ! ----------------------
     if InChildren <> True
        if MaxRows <= MaxLevel
           if Q:Element[MaxRows+1] <> ''
              if ElementWrite=True then ElementWrite=False.
              CYCLE                                                  ! a child node, skip it
           end
        end
     end

     if ElementWrite=True
        ElementWrite=false
     else
        Do LQ_Qualify
        if EndAll = True then break.
        Do LQ_Assign
     end

   end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2361
PROPERTY:END
MainLoop_PrimaryKey     ROUTINE

     ! Clear any PARENT PRIMARY KEY fields needed
     ! ------------------------------------------
     if TotalPrimaryRecords > 0
        if ClearAtParentLevel > 0
           If LastLevel > 0 and LastLevel < 65
               if Q:Element[LastLevel]=''
                  LOOP J = 1 to TotalPrimaryRecords
                     GET(PrimaryQueue,j)
                     CASE pq:FieldClear
                     of 1
                        IF PQ:FieldPrimed
                           IF PQ:FieldPrimed >= LastLevel
                              Do ClearPrimaryField
                              PQ:FieldPrimed = 0
                              PUT(PrimaryQueue)
                           END
                        END
                     of 3
                        IF PQ:FieldPrimed
                           IF PQ:FieldPrimed >= LastLevel
                              Do FillQueue
                              Do SetQueueFields
                              Do ClearPrimaryField
                              PQ:FieldPrimed = 0
                              PUT(PrimaryQueue)
                           END
                        END
                     END
                  end
               end
            end
        end
      end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2361
PROPERTY:END
MainLoop_ClearPending   ROUTINE

     if ClearPending = True
        Do ClearQueueFields
        AtSibling=False
        Do SetQueueFields
        ClearPending=False
     end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2624
PROPERTY:END
LQ_Qualify   ROUTINE

     IF MaxLevel > 64 THEN MaxLevel = 64.

     CLEAR(FieldName)
     LOOP EX = MaxLevel TO 1 BY -1
        if Q:Element[Ex]
           FieldName   = Q:Element[ex]

           IF Mod:LoadBoundaryX = True
              IF FieldName = MOD:LoadBoundry
                 EndAll = True
                 EXIT
              END
           END

           QFieldName  = ''
           QFieldName2 = ''
           QFieldName3 = ''
           if ex > 1
              QFieldName = q:Element[ex-1]          ! Qualified field name    (PARENT)
              if ex > 2
                 QFieldName2 = q:Element[ex-2]      ! Qualified field name 2  (GRANDPARENT)
                 if ex > 3
                    QFieldName3 = q:Element[ex-3]   ! Qualified field name 3  (GREATGRANDPARENT)
                 end
              end
           end
           LastLevel = Ex
           BREAK
        END
     END

     if IncludePrefix = 2
        ip = instring(':',fieldname,1,1)
        if ip > 0 and ip < 128
           ip+=1
           fieldname = fieldname[ip : 128]
        end
        if QFieldName
           ip = instring(':',QFieldName,1,1)
           if ip > 0 and ip < 128
              IP+=1
              QFieldName = QFieldName[ip : 128]
           end
        end
        if qFieldName2
           ip = instring(':',qFieldName2,1,1)
           if ip > 0 and ip < 128
              ip+=1
              qFieldName2 = qFieldName2[ip : 128]
           end
        end
        if qFieldName3
           ip = instring(':',qFieldName3,1,1)
           if ip > 0 and ip < 128
              ip+=1
              qFieldName3 = qFieldName3[ip : 128]
           end
        end
     end

     ! Skip any qualified fields
     ! -------------------------
     if TotalQualifyRecords
        QL:FieldName = FieldName
        GET(QUALIFYQUEUE,QL:FieldName)
        if ~ERRORCODE()
           case ql:Deep
           of 1
              FieldName = CLIP(QFieldName2) & CLIP(QFieldName) & FieldName
           of 2
              FieldName = CLIP(QFieldName3) & CLIP(QFieldName2) & CLIP(QFieldName) & FieldName
           else
              FieldName = CLIP(QFieldName) & FieldName
           end
        END
     END
[SOURCE]
PROPERTY:BEGIN
PRIORITY 2624
PROPERTY:END
LQ_Assign   ROUTINE

     ! ====================================================
     ! 0 = Ignore prefix from file
     ! 1 = Do not ignore prefix from file
     ! 2 = Ignore prefix from file and name spaces from XML
     ! ====================================================

     ! verify it's a good / valid field name
     ! -------------------------------------
     IF FieldName = '' THEN EXIT.
     IF FieldName[1] < 'A' THEN EXIT.

     LOOP J = 1 TO MaxFields
       GET(FieldNameQueue,J)
       LFieldName = FN:FieldName
       LFieldDim  = FN:FieldDims                                     ! check for dimensions

       ! ignore field prefix
       ! -------------------
       if IncludePrefix <> True
          IP = instring(':',lFieldName,1,1)
          IF IP > 0 AND IP < 128
             IP+=1
             lFieldName = lFieldName[IP : 128]
         end
       end

       if lFieldName = FieldName

          if TotalPrimaryRecords
             PQ:FieldName=Fieldname
             GET(PrimaryQueue,PQ:FieldName)
             IF ~ERRORCODE() and PQ:FieldClear = 1                  ! Parent Cascade
                IF PQ:FieldPrimed=0
                   PQ:FieldPrimed=LastLevel
                   PUT(PrimaryQueue)
                end
             end
          end

          if lFieldDim < 2
             if OnlyWriteOnForceWrite = False
                TestFieldValue = WHAT(LocalQueue,j)
                if TestFieldValue <> ''                            ! duplicate elements in queue already
                    DO FillQueue
                    DO SetQueueFields                              ! Put primary fields back
                END
             end
             fldRef &= WHAT(LocalQueue,j)
             DO MarkAsFilled
             fldRef = Q:V1
             fldRef &= NULL
          else
             loop jj = 1 to lFieldDim                           ! Assign to Multi-Dimensional Array
                TestFieldValue = WHAT(LocalQueue,J,JJ)
                if TestFieldValue = ''
                   fldRef &= WHAT(LocalQueue,j,jj)
                   DO MarkAsFilled
                   fldRef = Q:V1
                   fldRef &= NULL
                   BREAK
                END
             END
          end
          if AddToQueue = False and Q:V1 <> ''
             if AT:Required <> 2
                AddToQueue = True
             end
          end
          ! Check for Forced Writes
          ! -----------------------
          if TotalAttributeRecords > 0
             AT:FieldName = FieldName
             GET(AttributeQueue,AT:FieldName)
             IF ~ERRORCODE()
                if AT:ForceWrite = True
                   Do FillQueue
                   Do SetQueueFields
                 end
              end
          end
          BREAK
       end
     end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3240
PROPERTY:END
ClearQueueFields    ROUTINE

  if TotalPrimaryRecords
      LOOP JJ = 1 TO MaxFields
         GET(FieldNameQueue,JJ)
         pFieldName = FN:FieldName

         ! ignore field prefix
         ! -------------------
         if IncludePrefix <> True
            ip = instring(':',pFieldName,1,1)
            if ip > 0 and ip < 128
               ip+=1
               pFieldName = pFieldName[ip : 128]
            end
         end

         ! Primary Key Set
         ! ---------------
         if AtSibling = False
            PQ:FieldName = pFieldName
            get(PrimaryQueue,+PQ:FieldName)
            if errorcode()
               pfldRef &= WHAT(LocalQueue,jj)
               pfldRef = ''
               pfldRef &= NULL
            end
         else
            PQ:FieldName = pFieldName
            GET(PrimaryQueue,+PQ:FieldName)
            if ~errorcode() and PQ:FieldClear = 2
            else
               pfldRef &= WHAT(LocalQueue,jj)
               pfldRef = ''
               pfldRef &= NULL
            end
         end
      end
   else
      clear(LocalQueue)
   end

   ! Clear Filled Values
   ! -------------------
   loop jj = 1 to TotalAttributeRecords
     GET(AttributeQueue,jj)
     if AT:Filled
        AT:Filled = false
        PUT(AttributeQueue)
     end
   end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3240
PROPERTY:END
ClearPrimaryField    ROUTINE

    loop jj = 1 to MaxFields
      GET(FieldNameQueue,jj)
      pFieldName = FN:FieldName

         ! ignore field prefix
         ! -------------------
         if IncludePrefix <> True
            ip = instring(':',pFieldName,1,1)
            if ip > 0 and ip < 128
               ip+=1
               pFieldName = CLIP(pFieldName[ip : 128])
            end
         end

         if pFieldName = PQ:FieldName
            pfldRef &= WHAT(LocalQueue,jj)
            pfldRef = ''
            pfldRef &= NULL
            BREAK
         end
      end

[SOURCE]
PROPERTY:BEGIN
PRIORITY 3600
PROPERTY:END
FillQueue   ROUTINE

   SkipIt = False

   if AddToQueue = True
      LOOP jj = 1 to TotalAttributeRecords
         get(AttributeQueue,JJ)
         if AT:Required = true
            if AT:Filled = false
               SkipIt=true
               BREAK
            END
         END
      END
      IF SkipIt=False
         FillIncrements=True
         Do SetQueueFields
         FillIncrements=False
         ADD(LocalQueue)
         if MaxRecords > 0
            RecordsWritten+=1
            if RecordsWritten = MaxRecords
               Do ProcedureRETURN
            end
         end
      END
   end

   Do ClearQueueFields
   AddToQueue = False


MarkAsFilled    ROUTINE

    if TotalAttributeRecords > 0
       CLEAR(AttributeQueue)
       AT:FieldName = LFieldName
       GET(AttributeQueue,AT:FieldName)
       IF ~ERRORCODE() AND Q:V1
          if AT:Required = 1
             AT:Filled = True
             PUT(AttributeQueue)
          end
          if at:picture
             Q:V1 = LEFT(FORMAT(Q:V1,at:picture))
          end
       end
    END
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
ProcedureRETURN ROUTINE

   if SAVE:CurrentIndex[17]
      CurrentIndex = SAVE:CurrentIndex[17]
      GET(XQue,CurrentIndex)
      IF ~ERRORCODE()
         CLEAR(W:CSPARM[])
         LOOP I = 1 TO SAVE:W:CSPARM[17]
            IF I < 65
               W:CSPARM[I] = Q:Element[i]
            END
         END
      else
         xmll:ShowFunctionError('XML:LoadQueue')
      end
   ELSE
      CurrentIndex=I+1
      if CurrentIndex > RECORDS(XQUE) then CurrentIndex = RECORDS(XQUE).
      GET(XQue,CurrentIndex)                         ! start at next section
      CLEAR(W:CSPARM[])
   END

   ! Clear any primed pointers when closing down
   ! -------------------------------------------
   LOOP J = 1 TO TotalPrimaryRecords
      GET(PrimaryQueue,J)
      if PQ:FieldPrimed
         PQ:FieldPrimed=0
         PUT(PrimaryQueue)
      end
   end

   I = RECORDS(LocalQueue)

   RETURN(I)
[END]
[END]
[PROCEDURE]
NAME XML:Free
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/24' '23:15:01'
[DATA]
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('4df6737d-81b2-4211-a7bb-95fe900a66d0'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  ! Free and clear all XML resources
  ! --------------------------------
  FREE(XQue)
  CLEAR(XQue)

  CLEAR(ReplaceQueue)
  FREE(ReplaceQueue)

  CLEAR(CommentQueue)
  FREE(CommentQueue)

  MOD:LoadBoundry = ''
  Mod:LoadBoundaryX = false

  CLEAR(MaxLevel)
  CLEAR(CurrentIndex)
  CLEAR(FindValue)
  CLEAR(FindValue2)
  CLEAR(W:CSPARM[])
  CLEAR(SAVE:W:CSPARM[])
  CLEAR(SAVE:CurrentIndex[])

  XML:PRIMARYKEYCLEAR()
  XML:PRIMARYFIELDCLEAR()
  XML:QualifyFieldClear()
  XML:AttributeFieldClear()

  CLEAR(LOADTIME)
  CLEAR(MOD:LOADFROMFILE)
  CLEAR(MOD:PROGRESSBYTES)
  CLEAR(MOD:ENCODINGVALUE)

  CLEAR(GLO:_XML_LastLoadedFile)
  CLEAR(GLO:_XML_LastError)
  CLEAR(GLO:_xml_InEncoding)

  LOOP I = 1 TO RECORDS(BinaryObjects)
    GET(BinaryObjects,I)
    REMOVE(obj:filename)
  END

  CLEAR(BinaryObjects)
  FREE(BinaryObjects)
  XML:BinaryFieldClear()

[END]
[END]
[PROCEDURE]
NAME XML:LoadFromFile
PROTOTYPE '(STRING,<<BYTE>,<<BYTE>,<<LONG>,<<BYTE>),SHORT'
PARAMETERS '(STRING InFile,<<BYTE InAppend>,<<BYTE InSilent>,<<LONG FileOverride>,<<BYTE Soaponly>)'
[COMMON]
FROM Clarion Source
MODIFIED '2015/07/01' '21:17:55'
[DATA]
[SCREENCONTROLS]
! PROMPT('My String:'),USE(?MyString:Prompt)
! ENTRY(@s1),USE(MyString)
[REPORTCONTROLS]
! STRING(@s1),USE(MyString)
MyString                 CSTRING(2)
!!> GUID('a854c481-2d48-4a2c-8bc8-d96c589565ad'),PROMPT('My String:'),HEADER('My String'),PICTURE(@s1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 GLO:_XML_LastError = 0

 Glo:_XML_XMLFileName = InFile

 if NOT OMITTED(4)
    SHARE(XMLTEXT,FileOverride)
 else
    OPEN(XMLTEXT)
 end

 IF ERRORCODE()
    GLO:_XML_LastError = Errorcode()
    RETURN(GLO:_XML_LastError)
 ELSE
    SEND(XMLTEXT,'FILEBUFFERS=1000')
    SET(XMLTEXT)
    mod:LoadFromFile = True
    GLO:_XML_LastError = xml:LoadFromString(MyString,InAppend,InSilent,SoapOnly)
    mod:LoadFromFile = False
    CLOSE(XMLTEXT)
    Glo:_XML_LastLoadedFile = GLO:_XML_XMLFileName
 end

 Return(GLO:_XML_LastError)

[END]
[END]
[PROCEDURE]
NAME XMLL:FindWindow
NOEXPORT
[COMMON]
FROM Clarion Window
MODIFIED '2015/04/13' '14:16:39'
[DATA]
LocalRequest             LONG
!!> GUID('ad6dfe92-3bbd-429f-a62c-258714e7b3b3')
OriginalRequest          LONG
!!> GUID('8f4e6b0a-6ce4-4b52-a336-380c316f97cc')
LocalResponse            LONG
!!> GUID('f3ec5fad-25d8-45e4-a124-6524c12297ab')
FilesOpened              LONG
!!> GUID('01efe049-2336-4e43-9e0a-1196105e2e74')
WindowOpened             LONG
!!> GUID('9de577f3-c137-475c-b264-7d47e03b982b')
WindowInitialized        LONG
!!> GUID('8a729718-eb8b-4d25-8c4d-384275c74fd4')
ForceRefresh             LONG
!!> GUID('8f8c505d-7131-45a0-9d72-6915a00bb6bc')
[PROMPTS]
%ReturnValue FIELD  ()
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (1)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (1)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ButtonAction DEPEND %Control DEFAULT TIMES 4
WHEN  ('') ('No Special Action')
WHEN  ('?CancelButton') ('No Special Action')
WHEN  ('?FindValue') ('No Special Action')
WHEN  ('?OkButton') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 2
WHEN  ('?CancelButton') ('')
WHEN  ('?OkButton') ('')

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?CancelButton') ('')
WHEN  ('?OkButton') ('')

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 2
WHEN  ('?CancelButton') ()
WHEN  ('?OkButton') ()

%ButtonThread DEPEND %Control LONG TIMES 2
WHEN  ('?CancelButton') (0)
WHEN  ('?OkButton') (0)

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 4
WHEN  ('') ('25000')
WHEN  ('?CancelButton') ('25000')
WHEN  ('?FindValue') ('25000')
WHEN  ('?OkButton') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?CancelButton') ('')
WHEN  ('?OkButton') ('')

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 2
WHEN  ('?CancelButton') ()
WHEN  ('?OkButton') ()

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 2
WHEN  ('?CancelButton') (0)
WHEN  ('?OkButton') (0)

%ButtonRequest DEPEND %Control DEFAULT TIMES 4
WHEN  ('') ('None')
WHEN  ('?CancelButton') ('None')
WHEN  ('?FindValue') ('None')
WHEN  ('?OkButton') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?CancelButton') ('')
WHEN  ('?OkButton') ('')

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 2
WHEN  ('?CancelButton') ()
WHEN  ('?OkButton') ()

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 1
WHEN  ('?FindValue') ()

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 1
WHEN  ('?FindValue') ()

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 1
WHEN  ('?FindValue') ('')

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 1
WHEN  ('?FindValue') ()

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 1
WHEN  ('?FindValue') ()

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 1
WHEN  ('?FindValue') ('')

%PostLookupDuringValidate DEPEND %Control LONG TIMES 4
WHEN  ('') (1)
WHEN  ('?CancelButton') (1)
WHEN  ('?FindValue') (1)
WHEN  ('?OkButton') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 4
WHEN  ('')TIMES 0
WHEN  ('?CancelButton')TIMES 0
WHEN  ('?FindValue')TIMES 0
WHEN  ('?OkButton')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 4
WHEN  ('')TIMES 0
WHEN  ('?CancelButton')TIMES 0
WHEN  ('?FindValue')TIMES 0
WHEN  ('?OkButton')TIMES 0

%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabDisableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 3
WHEN  ('')TIMES 0
WHEN  ('?CancelButton')TIMES 0
WHEN  ('?FindValue')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 3
WHEN  ('')TIMES 0
WHEN  ('?CancelButton')TIMES 0
WHEN  ('?FindValue')TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 3
WHEN  ('') ('Default')
WHEN  ('?CancelButton') ('Default')
WHEN  ('?FindValue') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 1
WHEN  ('') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 1
WHEN  ('') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('AIBtn0')

%AIEnableMimicControl DEPEND %Control LONG TIMES 1
WHEN  ('') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('?Group1')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ControlPreEventHandling
[INSTANCES]
WHEN '?OkButton'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
LocalResponse=RequestCompleted
Do ProcedureRETURN
[END]
[END]
WHEN '?CancelButton'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Do ProcedureRETURN
[END]
[END]
[END]
[END]
[WINDOW]
Window  WINDOW('Find'),AT(,,246,54),FONT('Tahoma',8,,FONT:regular,CHARSET:ANSI),DOUBLE,CENTER, |
          GRAY
          GROUP(' Find Text '),AT(5,4,183,41),USE(?Group1),BOXED,#ORIG(?Group1)
            ENTRY(@s128),AT(41,21),USE(FindValue),#ORIG(FindValue)
          END
          BUTTON('&Find'),AT(193,7,45,14),USE(?OkButton),DEFAULT
          STRING('Find:'),AT(17,22,15,10),USE(?String1),#ORIG(?String1)
          BUTTON('&Cancel'),AT(193,24,45,14),USE(?CancelButton)
        END

[PROCEDURE]
NAME XML:FindNextNode
PROTOTYPE '(STRING,<<STRING>,<<STRING>,<<STRING>,<<STRING>,<<BYTE>),SHORT'
PARAMETERS '(InFind1,<<InFind2>,<<InFind3>,<<InFind4>,<<inFind5>,<<ElementOnly>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/03/30' '20:47:36'
[DATA]
[SCREENCONTROLS]
! PROMPT('TC:'),USE(?TC:Prompt)
! ENTRY(@n3),USE(TC)
[REPORTCONTROLS]
! STRING(@n3),USE(TC)
TC                       BYTE,AUTO
!!> GUID('1a6ab2ed-c88f-478b-9bf5-38ce59e4b552'),PROMPT('TC:'),HEADER('TC'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Total Records:'),USE(?TotalRecords:Prompt)
! ENTRY(@n-14),USE(TotalRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(TotalRecords),RIGHT(1)
TotalRecords             LONG,AUTO
!!> GUID('67fa408f-0ff0-4dc0-8130-e24a48f0c691'),PROMPT('Total Records:'),HEADER('Total Records'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG
!!> GUID('49461d28-684f-4352-9573-e93332e99bf4'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('j:'),USE(?j:Prompt)
! ENTRY(@n-14),USE(j),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(j),RIGHT(1)
j                        LONG
!!> GUID('6e32d413-0245-4858-97a8-09e14b15a2a7'),PROMPT('j:'),HEADER('j'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l:'),USE(?l:Prompt)
! ENTRY(@n-14),USE(l),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l),RIGHT(1)
l                        LONG
!!> GUID('2622c68d-2cf8-43a7-ab2f-92ba134416ef'),PROMPT('l:'),HEADER('l'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('k:'),USE(?k:Prompt)
! ENTRY(@n-14),USE(k),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(k),RIGHT(1)
k                        LONG
!!> GUID('e6a01c3f-0f45-4948-a80c-1c4ea96ba627'),PROMPT('k:'),HEADER('k'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('R 1:'),USE(?R1:Prompt)
! ENTRY(@s50),USE(R1)
[REPORTCONTROLS]
! STRING(@s50),USE(R1)
R1                       STRING(50)
!!> GUID('eefb7b10-8055-4573-b014-130a83824b54'),PROMPT('R 1:'),HEADER('R 1'),PICTURE(@s50)
[SCREENCONTROLS]
! PROMPT('Start Record:'),USE(?StartRecord:Prompt)
! ENTRY(@n-14),USE(StartRecord),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(StartRecord),RIGHT(1)
StartRecord              LONG
!!> GUID('20d00b84-189d-4c20-9b31-07854bd71cee'),PROMPT('Start Record:'),HEADER('Start Record'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Highest Pointer:'),USE(?HighestPointer:Prompt)
! ENTRY(@n-7),USE(HighestPointer),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(HighestPointer),RIGHT(1)
HighestPointer           SHORT
!!> GUID('4fb77aa8-a0a0-453b-8f3a-0456905f6413'),PROMPT('Highest Pointer:'),HEADER('Highest Pointer'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l In Find:'),USE(?lInFind:Prompt)
! ENTRY(@s50),USE(lInFind)
[REPORTCONTROLS]
! STRING(@s50),USE(lInFind)
lInFind                  CSTRING(51),DIM(5)
!!> GUID('3f661429-b588-43d7-967c-e196bc76dead'),PROMPT('l In Find:'),HEADER('l In Find'),PICTURE(@s50)
[SCREENCONTROLS]
! PROMPT('Full Find:'),USE(?FullFind:Prompt)
! TEXT,USE(FullFind)
[REPORTCONTROLS]
! TEXT,USE(FullFind)
FullFind                 CSTRING(256),AUTO
!!> GUID('8199d803-50f9-4b60-8ea9-6be31c695ace'),PROMPT('Full Find:'),HEADER('Full Find'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Find Wild Card:'),USE(?FindWildCard:Prompt)
! ENTRY(@n3),USE(FindWildCard)
[REPORTCONTROLS]
! STRING(@n3),USE(FindWildCard)
FindWildCard             BYTE,DIM(5)
!!> GUID('c54d8a57-b712-4813-ae41-a1789a9f0948'),PROMPT('Find Wild Card:'),HEADER('Find Wild Card'),PICTURE(@n3),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   TotalRecords = RECORDS(Xque)

   if InFind2=''
      TC = 0
   elsif InFind3=''
      TC = 1
   elsif InFind4=''
      TC = 2
   elsif InFind5=''
      TC = 3
   else
      TC = 4
   end

   LInfind[1] = LOWER(InFind1)
   LInfind[2] = LOWER(InFind2)
   LInfind[3] = LOWER(InFind3)
   LInfind[4] = LOWER(InFind4)
   LInfind[5] = LOWER(InFind5)

   ! check for wild cards
   ! --------------------
   LOOP I =  1 TO 5
     IF SUB(LInfind[i],1,1) = '*'
        FindWildCard[i] = True
        LInfind[I] = SUB(LInfind[i],2,51)
        LInfind[I] = CLIP(LInfind[I])
     END
   END

   if MOD:DebugWalk = True
      if MOD:QueueActive = False
         CLEAR(FullFind)
         LOOP I = 1 TO 5
            IF LINFIND[I] <> ''
               FullFind = FullFind & '<<' & clip(LINFIND[i]) & '>'
            END
         END
         XML:DebugQueue('Step In: ' & FullFind )
      END
   END

   If CurrentIndex = 0
      StartRecord = 1
   else
      StartRecord = CurrentIndex
      LOOP I = 1 to MaxLevel
         if w:csparm[i] = ''
            HighestPointer = I-1
            BREAK
         END
      END
   END

   LOOP I = StartRecord to TotalRecords
     GET(XQue,I)

     ! check if outside of parent
     ! --------------------------
     if w:csparm[1] <> ''
         loop j = 1 to MaxLevel
            if w:csparm[j] = '' and q:element[j] = ''     ! end of parent
                GLO:_XML_LastError = 1005
                Do CheckReturn
                Return(GLO:_XML_LastError)
            elsif w:csparm[j] = ''
                BREAK
            elsif W:CSPARM[j] <> Q:Element[j]
                GLO:_XML_LastError = 1005
                Do CheckReturn
                Return(GLO:_XML_LastError)
            end
         end
     end

     LOOP J = 1 TO MaxLevel
       r1 = Q:Element[j]
       IF ~r1 then break.

       if Mod:LoadBoundaryX = True
          if r1 = MOD:LoadBoundry           ! OUT OF BOUNDS
             GLO:_XML_LastError = 1005
             Do CheckReturn
             Return(GLO:_XML_LastError)
          END
       end

       if FindWildCard[1] = true
          if instring(LInFind[1],r1,1,1) > 0
             Do FindIt
          end
       else
          if r1 = LInFind[1]
             DO FindIt
          end
       end
     end

   end

   GLO:_XML_LastError = 1005
   Do CheckReturn
   RETURN(GLO:_XML_LastError)

[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
FindIt  ROUTINE

   l = 1

   loop k = j+1 to (J + TC)

       r1 = Q:Element[k]
       if ~r1 then exit.

       IF FindWildCard[L+1] = True
          if INSTRING(LInFind[L+1],r1,1,1) = 0 then EXIT.
       ELSE
          if r1 <> LInFind[L+1] then EXIT.
       END

       L+=1
   end

   ! if same exact record and pointer, move on to next
   ! -------------------------------------------------
   if I = StartRecord
      if HighestPointer
         If HighestPointer = (J + L - 1)
            EXIT
         end
      end
   end

   if ElementOnly = True
      if q:element[k] <> '' then exit.
   end

   CurrentIndex = I
   Do SetupCSParms
   GLO:_XML_LastError = 0
   Do CheckReturn
   RETURN(0)


SetupCSParms   ROUTINE

  CLEAR(W:CSPARM[])
  LOOP L = 1 TO (J + TC)
     IF Q:Element[L] = '' THEN BREAK.
     W:CSPARM[L] = Q:Element[l]
  end

[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
CheckReturn    ROUTINE

   if MOD:DebugWalk = True
      if MOD:QueueActive = False
         XML:DebugQueue('Step Out: ReturnCode: ' & GLO:_XML_LastError )
      END
   END
[END]
[END]
[PROCEDURE]
NAME XML:ReadNextRecord
PROTOTYPE '(*queue,*cstring),short'
PARAMETERS '(*outqueue,*outdata)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/25' ' 8:12:29'
[DATA]
[SCREENCONTROLS]
! PROMPT('Ex:'),USE(?Ex:Prompt)
! ENTRY(@n-7),USE(Ex),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(Ex),RIGHT(1)
Ex                       SHORT
!!> GUID('06a6963b-95b6-4f23-88b9-e3bfbba83390'),PROMPT('Ex:'),HEADER('Ex'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    CurrentIndex+=1
    get(XQue,CurrentIndex)
    if errorcode()
       CurrentIndex-=1
       GLO:_XML_LastError = 1001
       return(GLO:_XML_LastError)
    end

    FREE(OUTQUEUE)
    LOOP EX = 1 TO MAXIMUM(Q:Element,1)
       IF Q:ELEMENT[EX] = '' THEN BREAK.
       OUTQUEUE = Q:Element[EX]
       ADD(OUTQUEUE)
    END
    OutData  = Q:V1

    GLO:_XML_LastError = 0
    return(GLO:_XML_LastError)
[END]
[END]
[PROCEDURE]
NAME XML:ReadPreviousRecord
PROTOTYPE '(*QUEUE,*CSTRING),SHORT'
PARAMETERS '(*outqueue,*outdata)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/25' ' 8:12:38'
[DATA]
[SCREENCONTROLS]
! PROMPT('Ex:'),USE(?Ex:Prompt)
! ENTRY(@n-7),USE(Ex),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(Ex),RIGHT(1)
Ex                       SHORT
!!> GUID('eea2241d-ad13-4597-8f66-2dad7ddaf603'),PROMPT('Ex:'),HEADER('Ex'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    if CurrentIndex > 2
       CurrentIndex-=1
       get(XQue,CurrentIndex)
    else
       GLO:_XML_LastError = 1002
       return(GLO:_XML_LastError)
    end

    FREE(OUTQUEUE)
    LOOP EX = 1 TO MAXIMUM(Q:Element,1)
       IF Q:ELEMENT[EX] = '' THEN BREAK.
       OUTQUEUE = Q:Element[EX]
       ADD(OUTQUEUE)
    END

    OutData  = Q:V1

    GLO:_XML_LastError = 0
    return(GLO:_XML_LastError)
[END]
[END]
[PROCEDURE]
NAME XML:ReadCurrentRecord
PROTOTYPE '(*queue,*cstring),short'
PARAMETERS '(*outqueue,*outdata)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/25' '16:50:40'
[DATA]
[SCREENCONTROLS]
! PROMPT('Ex:'),USE(?Ex:Prompt)
! ENTRY(@n-7),USE(Ex),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(Ex),RIGHT(1)
Ex                       SHORT
!!> GUID('5554f1ad-182c-401f-bba2-095d10693d8d'),PROMPT('Ex:'),HEADER('Ex'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    if CurrentIndex
       get(XQue,CurrentIndex)
       if errorcode()
          GLO:_XML_LastError = 1003
          return(GLO:_XML_LastError)
       end
    else
       GLO:_XML_LastError = 1003
       return(GLO:_XML_LastError)
    end

    FREE(OUTQUEUE)
    LOOP EX = 1 TO MAXIMUM(Q:Element,1)
       IF Q:ELEMENT[EX] = '' THEN BREAK.
        OUTQUEUE = Q:Element[EX]
       ADD(OUTQUEUE)
    END

    OutData  = clip(Q:V1)
    GLO:_XML_LastError = 0
    return(GLO:_XML_LastError)
[END]
[END]
[PROCEDURE]
NAME XML:GotoSibling
PROTOTYPE '(),SHORT'
PARAMETERS '()'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '17:07:45'
[DATA]
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG
!!> GUID('ee41d3f9-4993-44d1-8139-42515dc3457b'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Different Element:'),USE(?DifferentElement:Prompt)
! ENTRY(@n-14),USE(DifferentElement),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(DifferentElement),RIGHT(1)
DifferentElement         LONG
!!> GUID('e718afc6-29ae-4730-a92b-6ab88517d9b8'),PROMPT('Different Element:'),HEADER('Different Element'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Total Records:'),USE(?TotalRecords:Prompt)
! ENTRY(@n-14),USE(TotalRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(TotalRecords),RIGHT(1)
TotalRecords             LONG
!!> GUID('6dab355b-73b7-491e-984e-e3f8df8e75c0'),PROMPT('Total Records:'),HEADER('Total Records'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Start Record:'),USE(?StartRecord:Prompt)
! ENTRY(@n-14),USE(StartRecord),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(StartRecord),RIGHT(1)
StartRecord              LONG
!!> GUID('a6ad204e-15e6-402a-be72-7741c3d77a5d'),PROMPT('Start Record:'),HEADER('Start Record'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Ex:'),USE(?Ex:Prompt)
! ENTRY(@n-7),USE(Ex),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(Ex),RIGHT(1)
Ex                       SHORT
!!> GUID('3bf2b164-6213-4a0a-959c-72fc9715202a'),PROMPT('Ex:'),HEADER('Ex'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   TotalRecords = RECORDS(Xque)

   If CurrentIndex = 0
      GLO:_XML_LastError = 1003
      Return(GLO:_XML_LastError)
   end

   StartRecord = CurrentIndex + 1

   ! check for exact sibling match
   ! -----------------------------
   GET(XQUE,StartRecord)
   IF ~ERRORCODE()
      LOOP EX = 1 TO MAXIMUM(Q:ELEMENT,1)
         IF W:CSPARM[EX] <> Q:ELEMENT[EX]
            DifferentElement = True
            BREAK
         elsif w:csparm[ex] = '' and q:element[ex] = ''
            BREAK
         end
      end
   END

   if DifferentElement = True
      LOOP I = StartRecord to TotalRecords
        GET(XQue,i)

        loop ex = 1 to MAXIMUM(Q:ELEMENT,1)
            if w:csparm[ex]
               if w:csparm[ex] <> q:element[ex]
                   GLO:_XML_LastError = 1010
                   Return(GLO:_XML_LastError)
               end
            ELSE
               IF Q:ELEMENT[EX] = ''
                  Do CheckForNext
               END
               BREAK
            END
        end
      end
      GLO:_XML_LastError = 1010
   ELSE
      GLO:_XML_LastError = 0
      CurrentIndex = StartRecord
   END

   Return(GLO:_XML_LastError)


CheckForNext    Routine

     ! assume error
     ! ------------
     GLO:_XML_LastError = 1010

     i+=1

     get(xque,i)
     if errorcode()
        Return(GLO:_XML_LastError)
     end

     loop ex = 1 to MAXIMUM(Q:ELEMENT,1)
         if W:CSPARM[ex]
            if W:CSPARM[ex] <> Q:Element[ex] then RETURN(1).
         ELSE
            BREAK
         end
     end

     ! there is a new element
     ! ----------------------
     CurrentIndex = I
     GLO:_XML_LastError = 0
     Return(GLO:_XML_LastError)
[END]
[END]
[PROCEDURE]
NAME XML:GotoTop
[COMMON]
FROM Clarion Source
MODIFIED '2014/05/04' ' 8:49:22'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  CurrentIndex = 0
  CLEAR(XQue)
  CLEAR(W:CSPARM[])

[END]
[END]
[PROCEDURE]
NAME XML:GetPointer
PROTOTYPE '(),LONG'
PARAMETERS '()'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '16:49:29'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
     RETURN(CurrentINDEX)
[END]
[END]
[PROCEDURE]
NAME XML:SetPointer
PROTOTYPE '(LONG),SHORT'
PARAMETERS '(InPointer)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '17:10:45'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  IF Inpointer > records(Xque)
     GLO:_XML_LastError = 1001
  else
     CurrentIndex = Inpointer
     get(xque,CurrentIndex)
     GLO:_XML_LastError = 0
     clear(w:csparm[])
  end

  return(GLO:_XML_LastError)
[END]
[END]
[PROCEDURE]
NAME XML:SaveState
PROTOTYPE '(),SHORT'
PARAMETERS '()'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '17:10:22'
[DATA]
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-7),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(I),RIGHT(1)
I                        SHORT
!!> GUID('c47c6256-ab8d-4d14-9035-6e8856732efd'),PROMPT('I:'),HEADER('I'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n-7),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(J),RIGHT(1)
J                        SHORT
!!> GUID('63db997f-6c1d-4742-a150-22b0d877b03d'),PROMPT('J:'),HEADER('J'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  loop i = 1 to 16
    if SAVE:W:CSPARM[i] = 0
       LOOP J = 1 TO MAXIMUM(Q:ELEMENT,1)
          if W:CSPARM[J] = ''
             SAVE:W:CSPARM[I] = J-1
             BREAK
          END
       END
       SAVE:CURRENTINDEX[I] = CURRENTINDEX
       RETURN(I)
    END
  END

  RETURN(0)
[END]
[END]
[PROCEDURE]
NAME XML:RestoreState
PROTOTYPE '(SHORT),SHORT'
PARAMETERS '(INSTATE)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '17:09:49'
[DATA]
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('ebedc222-3a51-48aa-a670-088f514a9a20'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  IF INSTATE < 1 OR INSTATE > 16
       GLO:_XML_LastError = 1006
  ELSE
     IF SAVE:CurrentIndex[INSTATE] = 0
        GLO:_XML_LastError = 1007
     ELSE
        CurrentIndex = SAVE:CurrentIndex[INSTATE]
        CLEAR(XQUE)
        GET(XQue,CurrentIndex)
        CLEAR(W:CSPARM[])
        LOOP I = 1 TO SAVE:W:CSPARM[INSTATE]
           W:CSPARM[I] = LOWER(Q:Element[i])
        END
        GLO:_XML_LastError = 0
     END
  END

  RETURN(GLO:_XML_LastError)
[END]
[END]
[PROCEDURE]
NAME XML:FreeState
PROTOTYPE '(SHORT)'
PARAMETERS '(Instate)'
[COMMON]
FROM Clarion Source
MODIFIED '2005/04/11' '14:15:21'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  if INSTATE > 0 AND INSTATE < 11
     SAVE:CurrentIndex[instate] = 0
     SAVE:W:CSPARM[instate] = 0
  end
[END]
[END]
[PROCEDURE]
NAME XMLL:FindWindow2
NOEXPORT
[COMMON]
FROM Clarion Window
MODIFIED '2015/04/13' '14:21:39'
[DATA]
LocalRequest             LONG
!!> GUID('b24756e9-ea1b-4924-92c9-8bfa212be980')
OriginalRequest          LONG
!!> GUID('5c20e0bc-43fc-45e4-ba3c-0fd676c0a6d4')
LocalResponse            LONG
!!> GUID('be4ac4e6-f6e3-4244-9ee7-7e6e4ef93fd5')
FilesOpened              LONG
!!> GUID('045aae46-5e6c-4eed-87b8-be55b83c0645')
WindowOpened             LONG
!!> GUID('fbf9ab23-1177-40b6-b65f-4563c8052c71')
WindowInitialized        LONG
!!> GUID('b24f121e-c041-455f-95b6-abbc753869a0')
ForceRefresh             LONG
!!> GUID('0e4b9058-c23e-4e4b-8536-51b51e920a32')
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('917c45be-9c2e-40e0-8b87-a4c294a45c07'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Workparm:'),USE(?Workparm:Prompt)
! TEXT,USE(Workparm)
[REPORTCONTROLS]
! TEXT,USE(Workparm)
Workparm                 STRING(10240)
!!> GUID('bc1f56a7-7847-47e9-8636-a1640231d87f'),PROMPT('Workparm:'),HEADER('Workparm'),PICTURE(@s255)
[PROMPTS]
%ReturnValue FIELD  ()
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (1)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (1)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ButtonAction DEPEND %Control DEFAULT TIMES 8
WHEN  ('') ('No Special Action')
WHEN  ('?Button3') ('No Special Action')
WHEN  ('?CancelButton') ('No Special Action')
WHEN  ('?Group2') ('No Special Action')
WHEN  ('?Group3') ('No Special Action')
WHEN  ('?OkButton') ('No Special Action')
WHEN  ('?OkButton:2') ('No Special Action')
WHEN  ('?Workparm') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 1
WHEN  ('?Button3') ('')

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 1
WHEN  ('?Button3') ('')

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 1
WHEN  ('?Button3') ()

%ButtonThread DEPEND %Control LONG TIMES 1
WHEN  ('?Button3') (0)

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 8
WHEN  ('') ('25000')
WHEN  ('?Button3') ('25000')
WHEN  ('?CancelButton') ('25000')
WHEN  ('?Group2') ('25000')
WHEN  ('?Group3') ('25000')
WHEN  ('?OkButton') ('25000')
WHEN  ('?OkButton:2') ('25000')
WHEN  ('?Workparm') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 1
WHEN  ('?Button3') ('')

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 1
WHEN  ('?Button3') ()

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 1
WHEN  ('?Button3') (0)

%ButtonRequest DEPEND %Control DEFAULT TIMES 8
WHEN  ('') ('None')
WHEN  ('?Button3') ('None')
WHEN  ('?CancelButton') ('None')
WHEN  ('?Group2') ('None')
WHEN  ('?Group3') ('None')
WHEN  ('?OkButton') ('None')
WHEN  ('?OkButton:2') ('None')
WHEN  ('?Workparm') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 1
WHEN  ('?Button3') ('')

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 1
WHEN  ('?Button3') ()

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 0

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 0

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupDuringValidate DEPEND %Control LONG TIMES 11
WHEN  ('') (1)
WHEN  ('?Button3') (1)
WHEN  ('?CancelButton') (1)
WHEN  ('?FindValue2_1') (1)
WHEN  ('?FindValue2_1:2') (1)
WHEN  ('?FindValue2_1:3') (1)
WHEN  ('?FindValue2_1:4') (1)
WHEN  ('?FindValue2_1:5') (1)
WHEN  ('?Group2') (1)
WHEN  ('?Group3') (1)
WHEN  ('?Workparm') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 6
WHEN  ('')TIMES 0
WHEN  ('?Button3')TIMES 0
WHEN  ('?CancelButton')TIMES 0
WHEN  ('?Group2')TIMES 0
WHEN  ('?Group3')TIMES 0
WHEN  ('?Workparm')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 6
WHEN  ('')TIMES 0
WHEN  ('?Button3')TIMES 0
WHEN  ('?CancelButton')TIMES 0
WHEN  ('?Group2')TIMES 0
WHEN  ('?Group3')TIMES 0
WHEN  ('?Workparm')TIMES 0

%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabDisableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Workparm')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Workparm')TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Default')
WHEN  ('?Workparm') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Off')
WHEN  ('?Workparm') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('')
WHEN  ('?Workparm') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Workparm') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Workparm') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Workparm') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Workparm') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Workparm') (0)

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('AIBtn0')

%AIEnableMimicControl DEPEND %Control LONG TIMES 1
WHEN  ('') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('?Group2')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ControlPreEventHandling
[INSTANCES]
WHEN '?OkButton'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 FindValueImplicit = CHOICE(?LIST1) - 1
 LocalResponse=RequestCompleted
 Do ProcedureRETURN
[END]
[END]
WHEN '?CancelButton'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3600
PROPERTY:END
clear(LocalResponse)
[GROUP]
PRIORITY 4000
INSTANCE 1
[END]
[END]
WHEN '?Button3'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
LocalResponse = 10
Do procedureRETURN

[END]
[END]
WHEN '?OkButton:2'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  FindValueImplicit = CHOICE(?LIST1) - 1
  LocalResponse=9
  Do ProcedureRETURN
[END]
[END]
[END]
EMBED %AfterWindowOpening
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 loop I = 1 to maximum(w:csparm,1)
   if w:csparm[i] = '' then break.
   WorkParm = clip(WorkParm) & chr(60) & clip(w:csparm[i]) & chr(62)
 end
 CLEAR(FINDVALUE2[])
 ?LIST1{PROP:SELECTED} = FindValueImplicit + 1

[END]
[END]
[ADDITION]
NAME Clarion CloseCurrentWindow
[INSTANCE]
INSTANCE 1
[WINDOW]
WINDOW  WINDOW('FindNode (Node Pointer)'),AT(,,249,186),FONT('Tahoma',8,,FONT:regular,CHARSET:ANSI), |
          DOUBLE,CENTER,GRAY,SYSTEM
          GROUP(' Parameters '),AT(5,6,183,113),USE(?Group2),BOXED,#ORIG(?Group2),#ORDINAL(1)
            ENTRY(@s128),AT(13,20,167,12),USE(FindValue2[1]),#ORIG(FindValue2[1]),#ORDINAL(2)
            ENTRY(@s128),AT(13,36,167,12),USE(FindValue2[2],,?FindValue2_1:2),#ORIG(FindValue2[1]), |
              #ORDINAL(3)
            ENTRY(@s128),AT(13,52,167,12),USE(FindValue2[3],,?FindValue2_1:4),#ORIG(FindValue2[1]), |
              #ORDINAL(4)
            ENTRY(@s128),AT(13,68,167,12),USE(FindValue2[4],,?FindValue2_1:3),#ORIG(FindValue2[1]), |
              #ORDINAL(5)
            ENTRY(@s128),AT(13,84,167,12),USE(FindValue2[5],,?FindValue2_1:5),#ORIG(FindValue2[1]), |
              #ORDINAL(6)
            LIST,AT(13,102,167,12),USE(?LIST1),DROP(3),FROM('Default|Implicit Element|E' & |
              'xplicit Element (Top of Node)'),#ORDINAL(7)
          END
          BUTTON('&Find Next Node'),AT(192,2,50,43),USE(?OkButton),ICON('v12view.ico'),DEFAULT, |
            #ORDINAL(8)
          BUTTON('&Find A Node'),AT(193,48,50,43),USE(?OkButton:2),ICON('find32.ico'),#ORDINAL(9)
          BUTTON('&Cancel'),AT(193,94,50,43),USE(?CancelButton),ICON('ctexit.ico'),#ORDINAL(10)
          BUTTON('Clear Node'),AT(193,139,50,43),USE(?Button3),ICON('erase.ico'),#ORIG(?Button3), |
            #ORDINAL(11)
          GROUP('Current Node Pointer'),AT(5,123,183,57),USE(?Group3),BOXED,#ORIG(?Group3), |
            #ORDINAL(12)
            TEXT,AT(13,134,167,42),USE(Workparm),VSCROLL,BOXED,READONLY,SKIP,#ORIG(Workparm), |
              #ORDINAL(13)
          END
        END

[PROCEDURE]
NAME XML:PrimaryKeyCascade
PROTOTYPE '(STRING,<<SHORT>)'
PARAMETERS '(inField,<<InClear>)'
[COMMON]
FROM Clarion Source
MODIFIED '2014/10/29' '14:21:12'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  CLEAR(PrimaryQueue)
  PQ:FieldName  = lower(InField)
  GET(PrimaryQueue,PQ:FieldName)
  IF ~ERRORCODE()
      IF ~OMITTED(2)
         Execute (InClear+1)
         PQ:FieldText='DEFAULT'
         PQ:FieldText='PARENT'
         PQ:FieldText='SAVE'
         END
         PQ:FieldClear = InClear
      ELSE
         CLEAR(PQ:FieldClear)
      END
      PUT(PrimaryQueue)
  ELSE
      IF ~OMITTED(2)
         Execute (InClear+1)
         PQ:FieldText='DEFAULT'
         PQ:FieldText='PARENT'
         PQ:FieldText='SAVE'
         END
         PQ:FieldClear = InClear
      END
      ADD(PrimaryQueue,+PQ:FieldName)
  END


[END]
[END]
[PROCEDURE]
NAME XML:PrimaryKeyClear
PROTOTYPE '(<<STRING>)'
PARAMETERS '(<<Infield>)'
[COMMON]
FROM Clarion Source
MODIFIED '2009/10/16' '16:49:36'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  if omitted(1)
     CLEAR(PrimaryQueue)
     FREE(PrimaryQueue)
  else
     CLEAR(PrimaryQueue)
     PQ:FieldName  = lower(clip(InField))
     GET(PrimaryQueue,PQ:FieldName)
     if ~errorcode()
        DELETE(PrimaryQueue)
     END
  END
[END]
[END]
[PROCEDURE]
NAME XML:GetError
PROTOTYPE '(<<SHORT>),STRING'
PARAMETERS '(<<InError>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/06/29' '13:34:42'
[DATA]
[SCREENCONTROLS]
! PROMPT('Use Error:'),USE(?UseError:Prompt)
! ENTRY(@n-7),USE(UseError),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(UseError),RIGHT(1)
UseError                 SHORT,AUTO
!!> GUID('b05160c8-d55b-4778-b522-90b44997ca6a'),PROMPT('Use Error:'),HEADER('Use Error'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   if omitted(1) OR InError = 0
      UseError = GLO:_XML_LastError
   else
      UseError = InError
   end

   case UseError
   of 2
      return('File not found')
   of 3
      return('Path not found')
   of 5
      return('Access Denied')
   of 37
      return('File Already Open')
   of 45
      return('Invalid File Name')
   of 4
      return('Too Many Open Files')
   of 1000
      return('Error Parsing Document')
   of 1001
      return('Read past end of file')
    of 1002
      return('Read past beginning of file')
    of 1003
      return('Not on any record')
    of 1004
      return('Not in Specified Parent')
    of 1005
      return('Node Not Found')
    of 1006
      return('Invalid Parameters Specified')
    of 1007
      return('Cannot Restore State - State Never Saved')
    OF 1010
        RETURN('Sibling Not Found')
    of 1011
        RETURN('Child Not Found')
    of 1012
        RETURN('Parent Not Found')
    of 1020
      return('Find Content Not Found')
    of 1050
      return('Not a valid XML File')
    of 1051
      return('Missing attribute Tag in XML File')
    of 1052
      return('Missing element Tag in XML File')
    of 1053
      return('Missing end of comment tag in XML File')
    of 1054
      return('Missing end of CDATA tag in XML File')
    of 1055
      return('Unable to Create Binary File')
    of 1056
      return('Unable to Open Binary File')
    else
       return('Error: ' & UseError)
    end


[END]
[END]
[PROCEDURE]
NAME XML:PrimaryFieldCascade
PROTOTYPE '(STRING,STRING)'
PARAMETERS '(InVar,InValue)'
[COMMON]
FROM Clarion Source
MODIFIED '2014/10/29' '14:23:12'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  PFQ:FieldName = lower(InVar)
  PFQ:FieldValue = InValue
  ADD(PrimaryFQueue,+PFQ:FieldName)
[END]
[END]
[PROCEDURE]
NAME XML:GotoParent
PROTOTYPE '(),SHORT'
PARAMETERS '()'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '17:07:28'
[DATA]
[SCREENCONTROLS]
! PROMPT('Total Records:'),USE(?TotalRecords:Prompt)
! ENTRY(@n-14),USE(TotalRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(TotalRecords),RIGHT(1)
TotalRecords             LONG,AUTO
!!> GUID('625fad3c-f0c4-4bd8-a5f7-b98b9d7318f9'),PROMPT('Total Records:'),HEADER('Total Records'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('52a4d1de-71e1-4475-a0da-b484676c8ccb'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Start Record:'),USE(?StartRecord:Prompt)
! ENTRY(@n-14),USE(StartRecord),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(StartRecord),RIGHT(1)
StartRecord              LONG
!!> GUID('5c7ef35e-ddd5-45a7-b937-ef95f7c11951'),PROMPT('Start Record:'),HEADER('Start Record'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Parms:'),USE(?Parms:Prompt)
! ENTRY(@n-14),USE(Parms),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(Parms),RIGHT(1)
Parms                    LONG
!!> GUID('260eb870-2923-4441-8370-2a4c2e9faca1'),PROMPT('Parms:'),HEADER('Parms'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   TotalRecords = RECORDS(Xque)

   GET(Xque,CurrentIndex)
   If errorcode() or CurrentIndex  = 0
      GLO:_XML_LastError = 1003
   ELSE
      LOOP I = 1 TO MAXIMUM(Q:ELEMENT,1)
         IF W:CSPARM[I] = ''
            Parms=I-1;break
         end
      end

      if parms = 0
         GLO:_XML_LastError = 1012
      else
         StartRecord = CurrentIndex - 1
         LOOP I = StartRecord to 1 BY -1
            GET(XQue,I)
            if q:Element[parms] = ''
               I = I + 1
               BREAK
            END
         END
         IF I = 0 THEN I = 1.
         w:csparm[PARMS] = ''
         GLO:_XML_LastError=0
         CurrentIndex = I
      end
   END

   RETURN(GLO:_XML_LastError)

[END]
[END]
[PROCEDURE]
NAME XML:GotoChild
PROTOTYPE '(),SHORT'
PARAMETERS '()'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '17:05:50'
[DATA]
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG
!!> GUID('3f48bd0a-4ea5-42f0-baf4-f7c54de72342'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Ex:'),USE(?Ex:Prompt)
! ENTRY(@n-7),USE(Ex),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(Ex),RIGHT(1)
Ex                       SHORT
!!> GUID('4e651bb3-e4b1-4b12-9b58-37e72ba8f79b'),PROMPT('Ex:'),HEADER('Ex'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Total Records:'),USE(?TotalRecords:Prompt)
! ENTRY(@n-14),USE(TotalRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(TotalRecords),RIGHT(1)
TotalRecords             LONG,AUTO
!!> GUID('80b19109-4c7c-40eb-95e3-bc85f028e752'),PROMPT('Total Records:'),HEADER('Total Records'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Start Record:'),USE(?StartRecord:Prompt)
! ENTRY(@n-14),USE(StartRecord),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(StartRecord),RIGHT(1)
StartRecord              LONG,AUTO
!!> GUID('224b37e3-c4b6-4d6b-94d4-47543c04299f'),PROMPT('Start Record:'),HEADER('Start Record'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   TotalRecords = RECORDS(Xque)
   StartRecord = CurrentIndex

   If CurrentIndex = 0
      GLO:_XML_LastError = 1003
      Return(GLO:_XML_LastError)
   end

   LOOP I = StartRecord to TotalRecords
     GET(XQue,i)

     loop ex = 1 to MAXIMUM(Q:ELEMENT,1)
         if w:csparm[ex]
            if w:csparm[ex] <> lower(q:element[ex])
                GLO:_XML_LastError = 1011
                Return(GLO:_XML_LastError)
            end
         ELSE
            IF Q:ELEMENT[EX] = ''
               GLO:_XML_LastError = 1011
               Return(GLO:_XML_LastError)
            ELSIF Q:ELEMENT[EX+1] = ''
               BREAK
            ELSE
               GLO:_XML_LastError = 0
               w:csparm[ex] = lower(q:element[ex])
               CurrentIndex = I
               RETURN(GLO:_XML_LastError)
            END
         END
     end
   end

   GLO:_XML_LastError = 1011
   Return(GLO:_XML_LastError)

[END]
[END]
[PROCEDURE]
NAME XML:PrimaryFieldClear
[COMMON]
FROM Clarion Source
MODIFIED '2011/02/12' ' 8:02:35'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  CLEAR(PrimaryFQueue)
  FREE(PrimaryFQueue)


[END]
[END]
[PROCEDURE]
NAME XML:AutoRootSet
[COMMON]
FROM Clarion Source
MODIFIED '2014/10/25' ' 9:46:58'
[DATA]
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n-14),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(J),RIGHT(1)
J                        LONG
!!> GUID('2462e11c-6957-4d5c-8c90-07396ec0350d'),PROMPT('J:'),HEADER('J'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    GET(XQUE,CurrentIndex)
    IF ~ERRORCODE()
       LOOP J = 1 TO MAXIMUM(Q:ELEMENT,1)
          if W:CSPARM[J] = ''
             SAVE:W:CSPARM[17] = J-1
             BREAK
          END
       END
       SAVE:CURRENTINDEX[17] = CURRENTINDEX
    ELSE
       xmll:ShowFunctionError('XML:AutoSetRoot')
    END


[END]
[END]
[PROCEDURE]
NAME XML:AutoRootClear
[COMMON]
FROM Clarion Source
MODIFIED '2007/04/12' '14:16:57'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    SAVE:W:CSPARM[17]=0
    SAVE:CurrentIndex[17]=0

[END]
[END]
[PROCEDURE]
NAME XML:FindNextContent
PROTOTYPE '(STRING,BYTE,BYTE),SHORT'
PARAMETERS '(InFind,InMatch,InCase)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '17:05:13'
[DATA]
[SCREENCONTROLS]
! PROMPT('Total Records:'),USE(?TotalRecords:Prompt)
! ENTRY(@n-14),USE(TotalRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(TotalRecords),RIGHT(1)
TotalRecords             LONG
!!> GUID('e493e314-cbff-4277-99c7-a01bc3067d1e'),PROMPT('Total Records:'),HEADER('Total Records'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Start Record:'),USE(?StartRecord:Prompt)
! ENTRY(@n-14),USE(StartRecord),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(StartRecord),RIGHT(1)
StartRecord              LONG
!!> GUID('59a5aa46-f9a1-49eb-9314-d54d1d412076'),PROMPT('Start Record:'),HEADER('Start Record'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG
!!> GUID('eb34e469-1909-4c3b-8822-707f0cb5b32f'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('j:'),USE(?j:Prompt)
! ENTRY(@n-14),USE(j),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(j),RIGHT(1)
j                        LONG
!!> GUID('a30d11d0-6ba1-4cdf-8145-927c5345eb9b'),PROMPT('j:'),HEADER('j'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('In Find Length:'),USE(?InFindLength:Prompt)
! ENTRY(@n-14),USE(InFindLength),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(InFindLength),RIGHT(1)
InFindLength             LONG
!!> GUID('60ce1339-9edf-472c-8a60-6b707807b268'),PROMPT('In Find Length:'),HEADER('In Find Length'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l:'),USE(?l:Prompt)
! ENTRY(@n-14),USE(l),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l),RIGHT(1)
l                        LONG
!!> GUID('b345f663-f6bb-4bce-838f-98432dcd424f'),PROMPT('l:'),HEADER('l'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('In Find Value:'),USE(?InFindValue:Prompt)
! TEXT,USE(InFindValue)
[REPORTCONTROLS]
! TEXT,USE(InFindValue)
InFindValue              STRING(10240)
!!> GUID('21a540b4-350a-4467-a040-3c1f3f4d2000'),PROMPT('In Find Value:'),HEADER('In Find Value'),PICTURE(@s255)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   if InFind = ''
      GLO:_XML_LastError = 1006
      Return(GLO:_XML_LastError)
   end

   InFindValue = InFind
   if InCase = false
      InFindValue = upper(InFindValue)
   end
   InFindLength = len(clip(InFindValue))

   TotalRecords = RECORDS(Xque)

   If CurrentIndex = 0
      StartRecord = 1
   else
      StartRecord = CurrentIndex + 1
   end

   LOOP I = StartRecord to TotalRecords
     get(xque,i)

     ! check if outside of parent
     ! --------------------------
     if w:csparm[1] <> ''
         loop j = 1 to MAXIMUM(Q:ELEMENT,1)
            if w:csparm[j] = '' and q:element[j] = ''     ! end of parent
                GLO:_XML_LastError = 1020
                Return(GLO:_XML_LastError)
            elsif w:csparm[j] = ''
                BREAK
            elsif LOWER(W:CSPARM[j]) <> Q:Element[j]
                GLO:_XML_LastError = 1020
                Return(GLO:_XML_LastError)
            end
         end
     end

     if Mod:LoadBoundaryX = True
        if q:element[j] = MOD:LoadBoundry THEN BREAK.
     end

     if InMatch = False
         if InCase = False
             if Instring(InFindValue[1 : InFindLength],UPPER(Q:V1),1,1)
                Do FindIt
             END
         else
             if Instring(InFindValue[1 : InFindLength],Q:V1,1,1)
                 Do FindIt
             END
         end
     else
         if InCase = False
             if UPPER(Q:V1) = InFindValue
                Do FindIt
             END
         else
             if Q:V1 = InFindValue
                 Do FindIt
             END
         end
     end
   end

   GLO:_XML_LastError = 1020
   return(GLO:_XML_LastError)

FindIt  ROUTINE

   CurrentIndex = I
   Do SetupCSParms
   GLO:_XML_LastError = 0
   RETURN(0)

SetupCSParms   ROUTINE

  CLEAR(w:csparm[])
  loop l = 1 to 64
     if q:element[l] = '' THEN BREAK.
     w:csparm[l] = Q:ELEMENT[L]
  end

[END]
[END]
[PROCEDURE]
NAME XML:QualifyFieldSet
PROTOTYPE '(STRING,<<BYTE>)'
PARAMETERS '(InFieldName,<<InDeep>)'
[COMMON]
FROM Clarion Source
MODIFIED '2015/05/11' '18:37:36'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    CLEAR(QUALIFYQUEUE)
    QL:FieldName = LOWER(InFieldName)
    GET(QUALIFYQUEUE,QL:FieldName)
    IF ERRORCODE()
       IF ~OMITTED(2) THEN QL:DEEP = INDEEP.
       ADD(QUALIFYQUEUE,QL:FieldName)
    ELSE
       ! UPDATE WITH NEW QUALIFIER LEVEL
       QL:DEEP = INDEEP
       PUT(QUALIFYQUEUE)
    END
[END]
[END]
[PROCEDURE]
NAME XML:QualifyFieldClear
PROTOTYPE '(<<STRING>)'
PARAMETERS '(<<InFieldName>)'
[COMMON]
FROM Clarion Source
MODIFIED '2009/10/16' '16:49:29'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  IF InFieldName
     QL:FieldName = lower(clip(InFieldName))
     GET(QualifyQueue,QL:FieldName)
     if ~ERRORCODE()
        DELETE(QualifyQueue)
     END
  ELSE
     CLEAR(QualifyQueue)
     FREE(QualifyQueue)
  END
[END]
[END]
[PROCEDURE]
NAME XML:AttributeFieldSet
PROTOTYPE '(STRING,<<BYTE>,<<STRING>)'
PARAMETERS '(InFieldName,<<InReq>,<<InPic>)'
[COMMON]
FROM Clarion Source
MODIFIED '2015/04/06' '19:23:38'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END

    CLEAR(ATTRIBUTEQUEUE)
    AT:FieldName = LOWER(InFieldName)
    GET(ATTRIBUTEQUEUE,AT:FieldName)
    IF ERRORCODE()
       if ~OMITTED(2)
          if InReq >= 100
             AT:ForceWrite=true
             R# = Inreq - 100
             AT:Required = R#
          else
             AT:Required = InReq
             AT:ForceWrite = false
          end
       END
       if ~OMITTED(3)
          AT:Picture = InPic
       END
       ADD(ATTRIBUTEQUEUE,AT:FieldName)
    ELSE
       if ~OMITTED(2)
          if InReq >= 100
             AT:ForceWrite=true
             R# = Inreq - 100
             AT:Required = R#
          else
             AT:Required = InReq
             AT:ForceWrite = false
          end
       END
       if ~OMITTED(3)
          AT:Picture = InPic
       END
       PUT(ATTRIBUTEQUEUE)
    END
[END]
[END]
[PROCEDURE]
NAME XML:AttributeFieldClear
PROTOTYPE '(<<STRING>)'
PARAMETERS '(<<InFieldName>)'
[COMMON]
FROM Clarion Source
MODIFIED '2005/04/25' '11:58:13'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  IF InFieldName
     AT:FieldName = lower(InFieldName)
     GET(AttributeQueue,AT:FieldName)
     if ~ERRORCODE()
        DELETE(AttributeQueue)
     END
  ELSE
     CLEAR(AttributeQueue)
     FREE(AttributeQueue)
  END
[END]
[END]
[PROCEDURE]
NAME XML:SetProgressWindow
PROTOTYPE '(LONG,<<STRING>)'
PARAMETERS '(InBytes,<<InPString>)'
[COMMON]
FROM Clarion Source
MODIFIED '2014/07/19' '18:24:30'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  MOD:ProgressBytes = InBytes
  MOD:ProgressString = InPString
[END]
[END]
[PROCEDURE]
NAME XML:ReadCurrentData
PROTOTYPE '(*cstring),short'
PARAMETERS '(*OutData)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/07/09' '17:39:26'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    get(XQue,CurrentIndex)
    if errorcode()
       GLO:_XML_LastError = 1003
    ELSE
       OutData  = CLIP(Q:V1)
       GLO:_XML_LastError = 0
    END

    return(GLO:_XML_LastError)
[END]
[END]
[PROCEDURE]
NAME XMLL:DebugSets
NOEXPORT
[COMMON]
FROM Clarion Window
MODIFIED '2015/04/13' '15:39:58'
[DATA]
LocalRequest             LONG
!!> GUID('8914e684-e68d-471c-bc75-dd11727164c9')
OriginalRequest          LONG
!!> GUID('5e17bc26-6e52-4bff-9a1e-fd94090c7136')
LocalResponse            LONG
!!> GUID('b7e743f6-6354-4130-bc07-f65458136645')
FilesOpened              LONG
!!> GUID('8858c2f6-475e-4ce6-b3f1-198fde4c8362')
WindowOpened             LONG
!!> GUID('5ba8d657-8fe7-49c4-b11f-95a630842f70')
WindowInitialized        LONG
!!> GUID('30143750-ee13-46ba-8815-50fd42a303ef')
ForceRefresh             LONG
!!> GUID('d0543079-d34a-4996-b801-ee33320e54b3')
[SCREENCONTROLS]
! PROMPT('Current Node:'),USE(?CurrentNode:Prompt)
! ENTRY(@s128),USE(CurrentNode)
[REPORTCONTROLS]
! STRING(@s128),USE(CurrentNode)
CurrentNode              STRING(128)
!!> GUID('7aafd40e-052f-444d-96b1-75cfde5429a5'),PROMPT('Current Node:'),HEADER('Current Node'),PICTURE(@s128),TYPEMODE(INS)
[PROMPTS]
%ReturnValue FIELD  ()
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (1)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (1)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ButtonAction DEPEND %Control DEFAULT TIMES 7
WHEN  ('') ('No Special Action')
WHEN  ('?Group1') ('No Special Action')
WHEN  ('?Group4') ('No Special Action')
WHEN  ('?List1') ('No Special Action')
WHEN  ('?List2') ('No Special Action')
WHEN  ('?List3') ('No Special Action')
WHEN  ('?List4') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 0

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 0

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 0

%ButtonThread DEPEND %Control LONG TIMES 0

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 7
WHEN  ('') ('25000')
WHEN  ('?Group1') ('25000')
WHEN  ('?Group4') ('25000')
WHEN  ('?List1') ('25000')
WHEN  ('?List2') ('25000')
WHEN  ('?List3') ('25000')
WHEN  ('?List4') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 0

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 0

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 0

%ButtonRequest DEPEND %Control DEFAULT TIMES 7
WHEN  ('') ('None')
WHEN  ('?Group1') ('None')
WHEN  ('?Group4') ('None')
WHEN  ('?List1') ('None')
WHEN  ('?List2') ('None')
WHEN  ('?List3') ('None')
WHEN  ('?List4') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 0

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 0

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 0

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 0

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupDuringValidate DEPEND %Control LONG TIMES 7
WHEN  ('') (1)
WHEN  ('?Group1') (1)
WHEN  ('?Group4') (1)
WHEN  ('?List1') (1)
WHEN  ('?List2') (1)
WHEN  ('?List3') (1)
WHEN  ('?List4') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 7
WHEN  ('')TIMES 0
WHEN  ('?Group1')TIMES 0
WHEN  ('?Group4')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?List2')TIMES 0
WHEN  ('?List3')TIMES 0
WHEN  ('?List4')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 7
WHEN  ('')TIMES 0
WHEN  ('?Group1')TIMES 0
WHEN  ('?Group4')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?List2')TIMES 0
WHEN  ('?List3')TIMES 0
WHEN  ('?List4')TIMES 0

%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?List2')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?List2')TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Default')
WHEN  ('?List2') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 1
WHEN  ('') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 1
WHEN  ('') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('AIBtn0')

%AIEnableMimicControl DEPEND %Control LONG TIMES 1
WHEN  ('') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('?List1')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %BeforeControlsSetup
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    CurrentNode = XML:ReadCurrentNode()
[END]
[END]
[WINDOW]
Window  WINDOW('iQ-XML - Attribute Settings'),AT(,,499,295),FONT('Tahoma',8,,FONT:regular), |
          DOUBLE,CENTER,GRAY,IMM,SYSTEM
          LIST,AT(7,17,231,114),USE(?List1),VSCROLL,GRID(COLOR:Silver),FORMAT('135L(1)|M~' & |
            'Field Name~@s128@111L(2)|M~Field Text~@s50@'),FROM(PrimaryQueue),#FIELDS(PQ:FieldName, |
            PQ:FieldText),#ORIG(?List1),#ORDINAL(1)
          LIST,AT(253,17,231,114),USE(?List3),VSCROLL,GRID(COLOR:Silver),FORMAT('111L(1)|M~' & |
            'Field Name~@s128@150L(1)|M~Deep~@s50@'),FROM(QualifyQueue),#FIELDS(QL:FieldName, |
            QL:Deep),#ORIG(?List3),#ORDINAL(2)
          GROUP(' Primary Fields Set '),AT(2,141,245,134),USE(?Group2),BOXED,#ORIG(?Group2), |
            #ORDINAL(3)
          END
          GROUP('Attribute Fields Set '),AT(250,141,245,134),USE(?Group4),BOXED,#ORIG(?Group4), |
            #ORDINAL(4)
            LIST,AT(256,153,231,114),USE(?List4),GRID(COLOR:Silver),FORMAT('135L(1)|M~F' & |
              'ield Name~@s50@26L(1)|M~Req~@s50@30L(1)|M~Picture~@s4@48L(1)|M~Force~@s19@'), |
              FROM(AttributeQueue),#FIELDS(AT:FieldName,AT:Required,AT:Picture,AT:ForceWrite), |
              #ORIG(?List4),#ORDINAL(5)
          END
          GROUP(' Primary Keys Cascaded '),AT(2,5,245,134),USE(?Group1),BOXED,#ORIG(?Group1), |
            #ORDINAL(6)
          END
          GROUP(' Qualified Fields Set '),AT(249,5,245,134),USE(?Group3),BOXED,#ORIG(?Group3), |
            #ORDINAL(7)
          END
          LIST,AT(7,154,231,111),USE(?List2),GRID(COLOR:Silver),FORMAT('135L(2)|M~Field' & |
            ' Name~@s50@150L(1)|M~Field Value~@s50@'),FROM(PrimaryFQueue),#FIELDS(PFQ:FieldName, |
            PFQ:FieldValue),#ORIG(?List2),#ORDINAL(8)
          STRING('Current Node:'),AT(2,279),USE(?STRING1),#ORDINAL(10000)
          STRING(@s128),AT(53,279,443,10),USE(CurrentNode),#ORDINAL(10001)
        END

[PROCEDURE]
NAME XML:DebugTrace
PROTOTYPE '(BYTE)'
PARAMETERS '(InType)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/07/09' '18:07:53'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  IF InType <> 200
     MOD:DebugWalk = InType
  end
[END]
[END]
[PROCEDURE]
NAME XML:BinaryFieldSet
PROTOTYPE '(STRING,<<STRING>)'
PARAMETERS '(InFieldName,<<InDirectory>)'
[COMMON]
FROM Clarion Source
MODIFIED '2014/07/21' '17:37:32'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  CLEAR(BinaryQueue)
  BQUE:FieldName = lower(InFieldName)
  GET(BinaryQueue,BQUE:FieldName)
  if ~errorcode()
     if omitted(2)
        BQUE:Directory = ''
     ELSE
        BQUE:Directory = InDirectory
     END
     PUT(BinaryQueue)
  ELSE
     if omitted(2)
        BQUE:Directory = ''
     ELSE
        BQUE:Directory = InDirectory
     END
     ADD(BinaryQueue,BQUE:FieldName)
  END
  MOD:BinaryRecords = RECORDS(BinaryQueue)
[END]
[END]
[PROCEDURE]
NAME XML:BinaryFieldClear
PROTOTYPE '(<<STRING>)'
PARAMETERS '(<<InFieldName>)'
[COMMON]
FROM Clarion Source
MODIFIED '2008/01/02' '17:36:47'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  IF OMITTED(1)
     CLEAR(BinaryQueue)
     FREE(BinaryQueue)
  else
     BQUE:FieldName = lower(InFieldName)
     GET(BinaryQueue,BQUE:FieldName)
     IF ~ERRORCODE()
        DELETE(BinaryQueue)
     END
  END
  MOD:BinaryRecords = RECORDS(BinaryQueue)
[END]
[END]
[PROCEDURE]
NAME XML:AddReplaceEntry
PROTOTYPE '(STRING,STRING)'
PARAMETERS '(In1,In2)'
[COMMON]
FROM Clarion Source
MODIFIED '2013/07/19' '13:56:27'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 RQ:ReplaceFrom = in1
 RQ:ReplaceTo = in2
 add(ReplaceQueue)
[END]
[END]
[PROCEDURE]
NAME XML:SetEncoding
PROTOTYPE '(STRING,<<BYTE>)'
PARAMETERS '(InEncoding,<<IncludeCreate>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/03/14' '10:00:41'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    GLO:_xml_InEncoding = InEncoding
    GLO:_xml_InWriteEncoding = IncludeCreate

    IF GLO:_xml_InEncoding='UTF-8'
       GLO:_xml_InEncodingL = True
    else
       GLO:_xml_InEncodingL = False
    END
[END]
[END]
[PROCEDURE]
NAME XML:GetSoapContent
PROTOTYPE '(STRING,*CSTRING),BYTE'
PARAMETERS '(InValue,*OutValue)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/07/09' '17:38:41'
[DATA]
[SCREENCONTROLS]
! PROMPT('CKVALUE:'),USE(?CKVALUE:Prompt)
! ENTRY(@s127),USE(CKVALUE)
[REPORTCONTROLS]
! STRING(@s127),USE(CKVALUE)
CKVALUE                  CSTRING(128)
!!> GUID('7510f014-1c0e-483a-866d-9e87d3f67b50'),PROMPT('CKVALUE:'),HEADER('CKVALUE'),PICTURE(@s127),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('CK:'),USE(?CK:Prompt)
! ENTRY(@s128),USE(CK)
[REPORTCONTROLS]
! STRING(@s128),USE(CK)
CK                       CSTRING(128),DIM(16)
!!> GUID('f9a7adc7-d445-42c6-9856-9c728f4ef29e'),PROMPT('CK:'),HEADER('CK'),PICTURE(@s127),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Elements:'),USE(?Elements:Prompt),RIGHT
! ENTRY(@n-14),USE(Elements),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(Elements),RIGHT(1)
Elements                 LONG
!!> GUID('80895af6-f973-48b0-bb5b-acd758e9ce2e'),PROMPT('Elements:'),HEADER('Elements'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt),RIGHT
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('408aaa0a-19d3-4aa3-9c91-5e5b04477098'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt),RIGHT
! ENTRY(@n-14),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(J),RIGHT(1)
J                        LONG
!!> GUID('dbf771cf-fe67-49ce-920a-6fc503a0049d'),PROMPT('J:'),HEADER('J'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('K:'),USE(?K:Prompt)
! ENTRY(@n-14),USE(K),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(K),RIGHT(1)
K                        LONG
!!> GUID('9056a877-e98e-420e-8488-98960033de69'),PROMPT('K:'),HEADER('K'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('L:'),USE(?L:Prompt),RIGHT
! ENTRY(@n-14),USE(L),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(L),RIGHT(1)
L                        LONG
!!> GUID('3c349ba2-b919-40ad-a9f2-bd4627618a47'),PROMPT('L:'),HEADER('L'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('M:'),USE(?M:Prompt)
! ENTRY(@n-14),USE(M),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(M),RIGHT(1)
M                        LONG
!!> GUID('78bfd772-7877-46f4-9385-8780e29f0a87'),PROMPT('M:'),HEADER('M'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('found:'),USE(?found:Prompt)
! ENTRY(@n3),USE(found)
[REPORTCONTROLS]
! STRING(@n3),USE(found)
found                    BYTE
!!> GUID('470d02bc-6919-4ba8-9c3e-6b7ac55ec513'),PROMPT('found:'),HEADER('found'),PICTURE(@n3),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 LOOP I = 1 TO LEN(InValue)
    IF INVALUE[I] = '.'
       DO AddToLook
    ELSE
       CKVALUE = CKVALUE & INVALUE[I]
    END
 END
 Do AddToLook

 ELEMENTS+=1    ! INCLUDE BLANK EOF

 LOOP I = 1 TO RECORDS(XQue)
    GET(XQue,I)
    IF sub(Q:Element[1],1,4) <> 'soap' THEN BREAK.

    ! find out where data starts
    ! --------------------------
    LOOP J = 2 TO 64
       IF Q:Element[J] = '' THEN BREAK.
       IF SUB(Q:ELEMENT[J],1,4) = 'soap' THEN CYCLE.
       BREAK
    END

    IF Q:ELEMENT[j] <> ''
       FOUND = TRUE
       LOOP K = 1 TO ELEMENTS
          M = K + J - 1
          IF K < 17 AND M > 0 AND M < 64
             IF CK[K] <> Q:Element[M]
                FOUND=FALSE
                BREAK
             END
          ELSE
             FOUND=FALSE
             BREAK
          END
       END
       IF FOUND = TRUE THEN BREAK.
    END
 END

 if FOUND = true
    OutValue = Q:V1
 end

 RETURN(FOUND)

AddToLook   ROUTINE

   IF CKValue
      Elements+=1
      CK[Elements] = LOWER(CKVALUE)
      CKVALUE = ''
   END
[END]
[END]
[PROCEDURE]
NAME XML:GetRawContent
PROTOTYPE '(STRING,*CSTRING),BYTE'
PARAMETERS '(InValue,*OutValue)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/26' '16:06:50'
[DATA]
[SCREENCONTROLS]
! PROMPT('CKVALUE:'),USE(?CKVALUE:Prompt)
! ENTRY(@s127),USE(CKVALUE)
[REPORTCONTROLS]
! STRING(@s127),USE(CKVALUE)
CKVALUE                  CSTRING(128)
!!> GUID('762eef1f-7d7a-4a8b-bc9a-189839aeb16d'),PROMPT('CKVALUE:'),HEADER('CKVALUE'),PICTURE(@s127),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('CK:'),USE(?CK:Prompt)
! ENTRY(@s128),USE(CK)
[REPORTCONTROLS]
! STRING(@s128),USE(CK)
CK                       CSTRING(128),DIM(12)
!!> GUID('6e8bad64-92a5-4c2b-9025-5b61dadfa081'),PROMPT('CK:'),HEADER('CK'),PICTURE(@s127),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Elements:'),USE(?Elements:Prompt),RIGHT
! ENTRY(@n-14),USE(Elements),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(Elements),RIGHT(1)
Elements                 LONG
!!> GUID('d97b4019-79df-4d85-9452-572429582286'),PROMPT('Elements:'),HEADER('Elements'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt),RIGHT
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('c94ae812-cde6-4bc8-a8cc-fa21bb7c0053'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('k:'),USE(?k:Prompt),RIGHT
! ENTRY(@n-14),USE(k),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(k),RIGHT(1)
k                        LONG
!!> GUID('8768db3a-455d-4d9f-886a-5b2d43958b52'),PROMPT('k:'),HEADER('k'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('found:'),USE(?found:Prompt)
! ENTRY(@n3),USE(found)
[REPORTCONTROLS]
! STRING(@n3),USE(found)
found                    BYTE
!!> GUID('b551faa3-db1e-4f00-8170-8ca0f230ac36'),PROMPT('found:'),HEADER('found'),PICTURE(@n3),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 LOOP I = 1 TO LEN(InValue)
    IF INVALUE[I] = '.'
       DO AddToLook
    ELSE
       CKVALUE = CKVALUE & INVALUE[I]
    END
 END
 Do AddToLook

 ELEMENTS+=1    ! INCLUDE BLANK EOF

 LOOP I = 1 TO RECORDS(XQue)
    GET(XQue,I)

    FOUND = TRUE
    LOOP K = 1 TO ELEMENTS
       IF CK[K] <> Q:Element[K]
          FOUND=FALSE
          BREAK
       END
    END
    IF FOUND = TRUE THEN BREAK.

 END

 if FOUND = true
    OutValue = Q:V1
 end

 RETURN(FOUND)

AddToLook   ROUTINE

   IF CKValue
      Elements+=1
      CK[Elements] = LOWER(CKVALUE)
      CKVALUE = ''
   END
[END]
[END]
[PROCEDURE]
NAME XML:ReadComment
PROTOTYPE '(BYTE,*CSTRING),BYTE'
PARAMETERS '(InStart,*OutValue)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '17:08:38'
[DATA]
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('80215390-f5d0-4390-aeef-c6f87bbb3ec2'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Return Byte:'),USE(?ReturnByte:Prompt)
! ENTRY(@n3),USE(ReturnByte)
[REPORTCONTROLS]
! STRING(@n3),USE(ReturnByte)
ReturnByte               BYTE
!!> GUID('aa1a620a-7bf8-4b5c-8ef7-3de9027b4f1c'),PROMPT('Return Byte:'),HEADER('Return Byte'),PICTURE(@n3),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   if inStart = true
      i = 1
   else
      i = pointer(CommentQueue)
      i+=1
   end

   get(CommentQueue,i)
   if errorcode()
      OutValue = ''
      ReturnByte = 1
   else
      OutValue = CQ:CommentString
      ReturnByte = 0
   end

   Return(ReturnByte)
[END]
[END]
[PROCEDURE]
NAME XML:FindAnyNode
PROTOTYPE '(STRING,<<STRING>,<<STRING>,<<STRING>,<<STRING>),SHORT'
PARAMETERS '(STRING p1,<<STRING p2>,<<STRING p3>,<<STRING p4>,<<STRING p5>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '17:04:43'
[DATA]
[SCREENCONTROLS]
! PROMPT('Search Value:'),USE(?SearchValue:Prompt)
! ENTRY(@s128),USE(SearchValue)
[REPORTCONTROLS]
! STRING(@s128),USE(SearchValue)
SearchValue              STRING(128),DIM(5)
!!> GUID('85b3d939-3790-4b24-92ce-06c39a12f608'),PROMPT('Search Value:'),HEADER('Search Value'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('b02e6019-4637-4a83-9b78-741c2659afac'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n-14),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(J),RIGHT(1)
J                        LONG
!!> GUID('55e92d13-c897-4076-a324-ed60323c5ff2'),PROMPT('J:'),HEADER('J'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Start Record:'),USE(?StartRecord:Prompt)
! ENTRY(@n-14),USE(StartRecord),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(StartRecord),RIGHT(1)
StartRecord              LONG
!!> GUID('3b388a8d-1084-449b-b0a1-ef0062af67be'),PROMPT('Start Record:'),HEADER('Start Record'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Total Records:'),USE(?TotalRecords:Prompt)
! ENTRY(@n-14),USE(TotalRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(TotalRecords),RIGHT(1)
TotalRecords             LONG
!!> GUID('596353ef-d1c5-4cec-98d1-0853d040387e'),PROMPT('Total Records:'),HEADER('Total Records'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Highest Pointer:'),USE(?HighestPointer:Prompt)
! ENTRY(@n-7),USE(HighestPointer),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(HighestPointer),RIGHT(1)
HighestPointer           SHORT
!!> GUID('337b1163-ed80-44ed-8969-2a694a6b8b67'),PROMPT('Highest Pointer:'),HEADER('Highest Pointer'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Return Value:'),USE(?ReturnValue:Prompt)
! ENTRY(@n-7),USE(ReturnValue),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(ReturnValue),RIGHT(1)
ReturnValue              SHORT
!!> GUID('797b35b4-f422-485b-9428-924003a02678'),PROMPT('Return Value:'),HEADER('Return Value'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Base Value:'),USE(?BaseValue:Prompt)
! ENTRY(@n-7),USE(BaseValue),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(BaseValue),RIGHT(1)
BaseValue                SHORT
!!> GUID('4f28c486-9aa1-488e-94a8-8497cf9211a2'),PROMPT('Base Value:'),HEADER('Base Value'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   CLEAR(SearchValue[])

   SearchValue[1] = LOWER(P1)
   SearchValue[2] = LOWER(P2)
   SearchValue[3] = LOWER(P3)
   SearchValue[4] = LOWER(P4)
   SearchValue[5] = LOWER(P5)

   TotalRecords = RECORDS(Xque)

   If CurrentIndex < 2
      StartRecord = 1
      BaseValue = 1
   else
      StartRecord = CurrentIndex + 1
      LOOP I = 1 TO MAXIMUM(Q:ELEMENT,1)
         IF Q:element[I] = ''
            BaseValue = i-1
            BREAK
         END
      END
   end

   if BaseValue > 0

      LOOP I = StartRecord to TotalRecords
        GET(XQUE,I)

        IF BaseValue > 1
           if Q:element[BaseValue] = ''
              ReturnValue = -1
              BREAK
           end
        end

        LOOP J = BaseValue TO MAXIMUM(Q:Element,1)

          CASE Q:Element[J]
          OF ''
             BREAK
          OF SearchValue[1]
             ReturnValue = 1
             Do SetupCSParms
          OF SearchValue[2]
             ReturnValue = 2
             Do SetupCSParms
          OF SearchValue[3]
             ReturnValue = 3
             Do SetupCSParms
          OF SearchValue[4]
             ReturnValue = 4
             Do SetupCSParms
          OF SearchValue[5]
             ReturnValue = 5
             Do SetupCSParms
          END

          IF ReturnValue > 0 THEN BREAK.
       end

       if ReturnValue <> 0 THEN BREAK.

     end

  end

  RETURN(ReturnValue)

SetupCSParms   ROUTINE

  CurrentIndex = I

  CLEAR(W:CSPARM[])
  LOOP I = 1 TO J
     IF Q:Element[I] = '' THEN BREAK.
     W:CSPARM[I] = Q:Element[I]
  end
[END]
[END]
[PROCEDURE]
NAME XML:SetBoundry
PROTOTYPE '(STRING InField)'
PARAMETERS '(STRING InField)'
[COMMON]
FROM Clarion Source
MODIFIED '2015/04/06' '20:01:24'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    if InField
       MOD:LoadBoundry = LOWER(InField)
       Mod:LoadBoundaryX = True
    else
       MOD:LoadBoundry = ''
       Mod:LoadBoundaryX = false
    end
[END]
[END]
[PROCEDURE]
NAME XML:ReadCurrentNode
PROTOTYPE '(),STRING'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '17:09:22'
[DATA]
[SCREENCONTROLS]
! PROMPT('Return E:'),USE(?ReturnE:Prompt)
! ENTRY(@s128),USE(ReturnE)
[REPORTCONTROLS]
! STRING(@s128),USE(ReturnE)
ReturnE                  STRING(128)
!!> GUID('b30aed42-d403-4d04-bf4d-0eec06e85ffd'),PROMPT('Return E:'),HEADER('Return E'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-7),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(I),RIGHT(1)
I                        SHORT
!!> GUID('b91284cf-5151-423c-8ad6-edd82383ce50'),PROMPT('I:'),HEADER('I'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   If CurrentIndex = 0
      GET(XQue,1)
   else
      GET(XQue,CurrentIndex)
   end

   LOOP I = 1 to MaxLevel
      if w:csparm[i] = ''
         I = I-1
         BREAK
      END
   END

   IF I <= 0 THEN I = 1.

   if I < 65
      ReturnE = Q:Element[i]
   end

   return(clip(ReturnE))
[END]
[END]
[PROCEDURE]
NAME XML:RootFromFile
PROTOTYPE '(STRING,<<LONG>,*CSTRING),SHORT'
PARAMETERS '(STRING InFile,<<LONG FileOverride>,*CSTRING ReturnRoot)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/26' '16:07:29'
[DATA]
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('2b8a7c5c-7eb2-4433-abd8-6ac99f028681'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n-14),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(J),RIGHT(1)
J                        LONG
!!> GUID('dec13597-4a87-4e75-84e1-3a471a1e7104'),PROMPT('J:'),HEADER('J'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('K:'),USE(?K:Prompt)
! ENTRY(@n-14),USE(K),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(K),RIGHT(1)
K                        LONG
!!> GUID('98c910a2-aad0-4931-a04c-1b45a5bc3bde'),PROMPT('K:'),HEADER('K'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('In Comment:'),USE(?InComment:Prompt)
! ENTRY(@n3),USE(InComment)
[REPORTCONTROLS]
! STRING(@n3),USE(InComment)
InComment                BYTE
!!> GUID('3eeacbc4-e853-462d-ac78-b5b3398dcc1a'),PROMPT('In Comment:'),HEADER('In Comment'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Root Name:'),USE(?RootName:Prompt)
! ENTRY(@s128),USE(RootName)
[REPORTCONTROLS]
! STRING(@s128),USE(RootName)
RootName                 CSTRING(129)
!!> GUID('2502c83a-b859-413d-b709-cd943f8ea2a0'),PROMPT('Root Name:'),HEADER('Root Name'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Nxt Chr:'),USE(?NxtChr:Prompt)
! ENTRY(@s1),USE(NxtChr)
[REPORTCONTROLS]
! STRING(@s1),USE(NxtChr)
NxtChr                   STRING(1)
!!> GUID('91315f99-6900-49c9-83a0-1d9c53a0b3eb'),PROMPT('Nxt Chr:'),HEADER('Nxt Chr'),PICTURE(@s1),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 GLO:_XML_LastError = 0

 Glo:_XML_XMLFileName = InFile

 if NOT OMITTED(2)
    SHARE(XMLTEXT,FileOverride)
 else
    OPEN(XMLTEXT)
 end

 IF ERRORCODE()
    GLO:_XML_LastError = Errorcode()
    RETURN(GLO:_XML_LastError)
 ELSE
    SET(XMLTEXT)
    NEXT(XMLTEXT)
    IF ~ERRORCODE()
       J = BYTES(XMLTEXT)
       LOOP I = 1 TO J
          if InComment = True
             if XMLTEXT.StandLine[I] <> '>' THEN CYCLE.
             InComment = False
          end
          IF XMLTEXT.StandLine[I] = '<'
             NxtChr = XMLTEXT.StandLine[I + 1]
             case NxtChr
             of '!' orof '?'
                InComment = True
                CYCLE
             end
             Do GetRoot
             BREAK
          END
       END
    END
    CLOSE(XMLTEXT)
    Glo:_XML_LastLoadedFile = GLO:_XML_XMLFileName
 end

 ReturnRoot = RootName

 Return(GLO:_XML_LastError)


GetRoot ROUTINE

  i+=1
  LOOP K = I TO J
     NxtChr = XMLTEXT.StandLine[K]
     if NxtChr = '>' then break.
     if NxtChr = ' ' then break.
     RootName = RootName & NxtChr
  END
[END]
[END]
[PROCEDURE]
NAME XML:RootFromString
PROTOTYPE '(*CSTRING),STRING'
PARAMETERS '(*CSTRING p1)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/26' '16:11:41'
[DATA]
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('e6dcac28-52b4-40f8-918d-9f31bdcf9bbd'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n-14),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(J),RIGHT(1)
J                        LONG
!!> GUID('9c53c990-75dd-4274-a058-219f41953606'),PROMPT('J:'),HEADER('J'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('K:'),USE(?K:Prompt)
! ENTRY(@n-14),USE(K),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(K),RIGHT(1)
K                        LONG
!!> GUID('b112f05d-493d-42c4-b2d4-5a57229dbf6f'),PROMPT('K:'),HEADER('K'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Nxt Chr:'),USE(?NxtChr:Prompt)
! ENTRY(@s1),USE(NxtChr)
[REPORTCONTROLS]
! STRING(@s1),USE(NxtChr)
NxtChr                   STRING(1)
!!> GUID('e59cf08c-3e32-4d2e-8dd6-66ab69815697'),PROMPT('Nxt Chr:'),HEADER('Nxt Chr'),PICTURE(@s1),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('In Comment:'),USE(?InComment:Prompt)
! ENTRY(@n3),USE(InComment)
[REPORTCONTROLS]
! STRING(@n3),USE(InComment)
InComment                BYTE
!!> GUID('babface6-0e2a-41c4-a287-154eea227bd4'),PROMPT('In Comment:'),HEADER('In Comment'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Root Name:'),USE(?RootName:Prompt)
! ENTRY(@s128),USE(RootName)
[REPORTCONTROLS]
! STRING(@s128),USE(RootName)
RootName                 CSTRING(129)
!!> GUID('f10ca952-9834-464f-834e-a66c520d1f28'),PROMPT('Root Name:'),HEADER('Root Name'),PICTURE(@s128),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END

   J = len(P1)
   LOOP I = 1 TO J
      if InComment = True
         if p1[I] <> '>' THEN CYCLE.
         InComment = False
      end
      IF p1[I] = '<'
         if I < J
            NxtChr = p1[I + 1]
            case NxtChr
            of '!' orof '?'
                InComment = True
                CYCLE
            end
         end
         Do GetRoot
         BREAK
      END
   END

   Return(RootName)


GetRoot ROUTINE

  i+=1
  LOOP K = I TO J
     NxtChr = p1[K]
     if NxtChr = '>' then break.
     if NxtChr = ' ' then break.
     RootName = RootName & NxtChr
  END
[END]
[END]
[PROCEDURE]
NAME XML:IsValid
PROTOTYPE '(),BYTE'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/26' '16:07:09'
[DATA]
[SCREENCONTROLS]
! PROMPT('Save Pointer:'),USE(?SavePointer:Prompt)
! ENTRY(@n-14),USE(SavePointer),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(SavePointer),RIGHT(1)
SavePointer              LONG,AUTO
!!> GUID('11b4c82f-a24a-41ca-adca-0bf0ed4c6fca'),PROMPT('Save Pointer:'),HEADER('Save Pointer'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('New Pointer:'),USE(?NewPointer:Prompt)
! ENTRY(@n-14),USE(NewPointer),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(NewPointer),RIGHT(1)
NewPointer               LONG,AUTO
!!> GUID('6111fd5f-71d4-47cb-8c4f-7b98a5c2a23d'),PROMPT('New Pointer:'),HEADER('New Pointer'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Is Valid:'),USE(?IsValid:Prompt)
! ENTRY(@n3),USE(IsValid)
[REPORTCONTROLS]
! STRING(@n3),USE(IsValid)
IsValid                  BYTE
!!> GUID('6ab2fe24-c67a-4f60-809f-9983938b6a14'),PROMPT('Is Valid:'),HEADER('Is Valid'),PICTURE(@n3),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END

    SavePointer = POINTER(XQue)
    NewPointer = RECORDS(XQUE)

    GET(XQue,NewPointer)
    IF ~ERRORCODE()

       if Q:Element[1] <> '' and Q:Element[2] = '' and Q:Element[3] = '' and Q:V1=''
          IsValid = True
       end
    end

    GET(xQue,SavePointer)

    RETURN(IsValid)



[END]
[END]
[PROCEDURE]
NAME XML:DumpMemory
PROTOTYPE '(STRING InFile)'
PARAMETERS '(STRING InFile)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/05/29' ' 8:45:27'
[DATA]
[SCREENCONTROLS]
! PROMPT('Full Line:'),USE(?FullLine:Prompt)
! ENTRY(@s255),USE(FullLine)
[REPORTCONTROLS]
! STRING(@s255),USE(FullLine)
FullLine                 CSTRING(4096)
!!> GUID('95de74bb-0797-44f9-ac07-9afe3437ad5d'),PROMPT('Full Line:'),HEADER('Full Line'),PICTURE(@s255),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG
!!> GUID('f516112f-006e-46d2-981c-f08cbbff59f7'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('j:'),USE(?j:Prompt)
! ENTRY(@n-14),USE(j),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(j),RIGHT(1)
j                        LONG
!!> GUID('fc114290-9f3a-4640-9482-8c7b8b4d7960'),PROMPT('j:'),HEADER('j'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END

   SA:WriteToFileSetName(InFile,True,0)

   SA:WriteLine('MaxLevel=' & MaxLevel)
   SA:WriteLine('CurrentIndex=' & CurrentIndex)

   LOOP I = RECORDS(XQue) TO 1 BY -1
     GET(XQue,I)
     FullLine = ''
     loop j = 1 to 64
        if Q:Element[j] = '' then break.
        FullLine = FullLine & clip(Q:Element[j]) & '|'
     END
     SA:WriteLine('---------- ' & i & ' ----------')
     SA:WriteLine('Element=' & FullLine)
     SA:WriteLine('Value=' & Q:V1)
   END

[END]
[END]
[END]
[MODULE]
[COMMON]
DESCRIPTION 'Intenal Functions'
FROM Clarion GENERATED
MODIFIED '2012/03/24' ' 9:03:32'
[DATA]
[SCREENCONTROLS]
! PROMPT('My Queue Pictures:'),USE(?MyQueuePictures:Prompt)
! ENTRY(@s1),USE(MyQueuePictures)
[REPORTCONTROLS]
! STRING(@s1),USE(MyQueuePictures)
MyQueuePictures          QUEUE,PRE()
!!> GUID('1ee5b324-879a-4bfd-bbd7-1836f5f25f6d'),PROMPT('My Queue Pictures:'),HEADER('My Queue Pictures'),PICTURE(@s21)
[SCREENCONTROLS]
! PROMPT('Field Names:'),USE(?FieldNames:Prompt)
! ENTRY(@s32),USE(FieldNames)
[REPORTCONTROLS]
! STRING(@s32),USE(FieldNames)
FieldNames                 STRING(32)
!!> GUID('3faf0fb3-08c7-4404-941f-84ce6b69bd9a'),PROMPT('Field Names:'),HEADER('Field Names'),PICTURE(@s32)
[SCREENCONTROLS]
! PROMPT('Picture String:'),USE(?PictureString:Prompt)
! ENTRY(@s20),USE(PictureString)
[REPORTCONTROLS]
! STRING(@s20),USE(PictureString)
PictureString              CSTRING(21)
!!> GUID('96acbce7-2fdc-4a85-9108-4c5b7a6913ba'),PROMPT('Picture String:'),HEADER('Picture String'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('Show It:'),USE(?ShowIt:Prompt)
! ENTRY(@s4),USE(ShowIt)
[REPORTCONTROLS]
! STRING(@s4),USE(ShowIt)
ShowIt                     STRING(4)
!!> GUID('acefb4b7-0090-4f35-a09d-37f2c63bd89e'),PROMPT('Show It:'),HEADER('Show It'),PICTURE(@s4)
                         END
!!> GUID('dccc1c78-4cc1-4eac-b0bf-ddbf0a76073b')
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME XML:PickFileToDebug
[COMMON]
FROM Clarion Source
MODIFIED '2015/07/01' '20:34:56'
[DATA]
[SCREENCONTROLS]
! PROMPT('File To Load:'),USE(?FileToLoad:Prompt)
! ENTRY(@s255),USE(FileToLoad)
[REPORTCONTROLS]
! STRING(@s255),USE(FileToLoad)
FileToLoad               STRING(255)
!!> GUID('eaba93e8-5016-4086-8bd3-bc630a6cbe8e'),PROMPT('File To Load:'),HEADER('File To Load'),PICTURE(@s255)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  if FILEDIALOG('Pick XML File',FileToLoad,'XML Files|*.xml|XSD Files|*.xsd|HTML Files|*.html|JSON Files|*.json|All Files|*.*',FILE:KEEPDIR)
     if ~XML:LoadFromFile(FileToLoad,False,False)
         XML:DebugQueue()
     else
         MESSAGE('Error Occurred!||' & xml:GetError(),'Error!',icon:exclamation)
     end
     XML:FREE()
  end
[END]
[END]
[PROCEDURE]
NAME XML:DebugMyQueue
PROTOTYPE '(*queue,<<string>)'
PARAMETERS '(PassQueue,<<intitle>)'
[COMMON]
FROM Clarion Window
MODIFIED '2016/05/25' '10:50:55'
[DATA]
[SCREENCONTROLS]
! PROMPT('Find In Queue:'),USE(?FindInQueue:Prompt)
! ENTRY(@s35),USE(FindInQueue)
[REPORTCONTROLS]
! STRING(@s35),USE(FindInQueue)
FindInQueue              STRING(35)
!!> GUID('ba3defa3-272b-4e3a-b425-71de721ff09f'),PROMPT('Find In Queue:'),HEADER('Find In Queue'),PICTURE(@s35),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Get Pointer:'),USE(?GetPointer:Prompt)
! ENTRY(@n-14),USE(GetPointer),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(GetPointer),RIGHT(1)
GetPointer               LONG
!!> GUID('f29f5f0a-5e91-4f05-8ce8-a5a63b9b5e4f'),PROMPT('Get Pointer:'),HEADER('Get Pointer'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
LocalRequest             LONG
!!> GUID('6bd988d9-8281-42d0-8c00-ae3f7939307d')
OriginalRequest          LONG
!!> GUID('eeae4bc5-d771-48bf-a3f3-6c0dd03b0430')
LocalResponse            LONG
!!> GUID('f32f5296-ddd8-4d81-a9a6-aa8702e990ea')
FilesOpened              LONG
!!> GUID('443dc755-7f79-4b62-acce-2946db4271e4')
WindowOpened             LONG
!!> GUID('be5e25db-9d81-41e9-8e21-ec60a342564f')
WindowInitialized        LONG
!!> GUID('5b9e8ac5-fb54-4ebb-a6f3-69dbadc417c8')
ForceRefresh             LONG
!!> GUID('0cbae7a6-9d2c-4b94-abd1-262a85e76e1c')
[SCREENCONTROLS]
! PROMPT('Total Columns:'),USE(?TotalColumns:Prompt)
! ENTRY(@n-7),USE(TotalColumns),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(TotalColumns),RIGHT(1)
TotalColumns             SHORT
!!> GUID('3e5b9873-5162-4269-827e-efe6f281650f'),PROMPT('Total Columns:'),HEADER('Total Columns'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('L 2 : Column Selected:'),USE(?L2:ColumnSelected:Prompt)
! ENTRY(@n-7),USE(L2:ColumnSelected),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(L2:ColumnSelected),RIGHT(1)
L2:ColumnSelected        SHORT
!!> GUID('63a84e5f-e670-419a-b57a-506c393ff3ce'),PROMPT('L 2 : Column Selected:'),HEADER('L 2 : Column Selected'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('L 2 : Region Control:'),USE(?L2:RegionControl:Prompt)
! ENTRY(@n-14),USE(L2:RegionControl),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(L2:RegionControl),RIGHT(1)
L2:RegionControl         LONG
!!> GUID('cacf4fca-a431-4af7-a218-a4a29ea302be'),PROMPT('L 2 : Region Control:'),HEADER('L 2 : Region Control'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('L 2 : Current Sort:'),USE(?L2:CurrentSort:Prompt)
! ENTRY(@n3),USE(L2:CurrentSort)
[REPORTCONTROLS]
! STRING(@n3),USE(L2:CurrentSort)
L2:CurrentSort           BYTE
!!> GUID('d0dd7dad-42d8-416e-a5f5-f95ad1ab8795'),PROMPT('L 2 : Current Sort:'),HEADER('L 2 : Current Sort'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('t 1:'),USE(?t1:Prompt)
! ENTRY(@n-7),USE(t1),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(t1),RIGHT(1)
t1                       SHORT
!!> GUID('90d295a1-067d-40a8-91c9-2dbffa6a0238'),PROMPT('t 1:'),HEADER('t 1'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('t 2:'),USE(?t2:Prompt)
! ENTRY(@n-7),USE(t2),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(t2),RIGHT(1)
t2                       SHORT
!!> GUID('8087eeea-a47c-47f7-96d7-659c663e4d67'),PROMPT('t 2:'),HEADER('t 2'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('s I:'),USE(?sI:Prompt)
! ENTRY(@n-14),USE(sI),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(sI),RIGHT(1)
sI                       LONG
!!> GUID('150448cd-99ee-4aff-8168-f7450d31134a'),PROMPT('s I:'),HEADER('s I'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('dragging:'),USE(?dragging:Prompt)
! ENTRY(@n3),USE(dragging)
[REPORTCONTROLS]
! STRING(@n3),USE(dragging)
dragging                 BYTE
!!> GUID('66ed1081-ee70-4817-9d8c-9b89ca0068ae'),PROMPT('dragging:'),HEADER('dragging'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('s 1:'),USE(?s1:Prompt)
! ENTRY(@n-7),USE(s1),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(s1),RIGHT(1)
s1                       SHORT
!!> GUID('fd53b251-7a19-4327-aff7-21f9c285683b'),PROMPT('s 1:'),HEADER('s 1'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('ssi:'),USE(?ssi:Prompt)
! ENTRY(@n-14),USE(ssi),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ssi),RIGHT(1)
ssi                      LONG
!!> GUID('6ddb15c8-11c7-4b47-ac6b-26cbf3ecde81'),PROMPT('ssi:'),HEADER('ssi'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Win Height:'),USE(?WinHeight:Prompt)
! ENTRY(@n-14),USE(WinHeight),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(WinHeight),RIGHT(1)
WinHeight                LONG
!!> GUID('a2420661-8aba-4346-8911-0adfd8a5454b'),PROMPT('Win Height:'),HEADER('Win Height'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('fi:'),USE(?fi:Prompt)
! ENTRY(@n-14),USE(fi),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(fi),RIGHT(1)
fi                       LONG
!!> GUID('c460eec3-c584-4e5d-9060-7289916a6891'),PROMPT('fi:'),HEADER('fi'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Bookmark:'),USE(?Bookmark:Prompt)
! ENTRY(@n-14),USE(Bookmark),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(Bookmark),RIGHT(1)
Bookmark                 LONG
!!> GUID('0d6b9bf5-7300-4df4-81b7-ead35aede805'),PROMPT('Bookmark:'),HEADER('Bookmark'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('ci:'),USE(?ci:Prompt)
! ENTRY(@n-14),USE(ci),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ci),RIGHT(1)
ci                       LONG
!!> GUID('9372338a-ab66-4f80-b01d-802270a1f751'),PROMPT('ci:'),HEADER('ci'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('foundit:'),USE(?foundit:Prompt)
! ENTRY(@n3),USE(foundit)
[REPORTCONTROLS]
! STRING(@n3),USE(foundit)
foundit                  BYTE
!!> GUID('241b25f8-0ee1-45c5-ade8-ef5feab00365'),PROMPT('foundit:'),HEADER('foundit'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Use Value:'),USE(?UseValue:Prompt)
! ENTRY(@s128),USE(UseValue)
[REPORTCONTROLS]
! STRING(@s128),USE(UseValue)
UseValue                 CSTRING(129)
!!> GUID('25bcd5ec-3df8-401c-9d47-c15e964ec773'),PROMPT('Use Value:'),HEADER('Use Value'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Local Queue:'),USE(?LocalQueue:Prompt)
! ENTRY(@s20),USE(LocalQueue)
[REPORTCONTROLS]
! STRING(@s20),USE(LocalQueue)
LocalQueue               QUEUE,PRE()
!!> GUID('24d85032-0e67-4469-bb9d-4748e37a6539'),PROMPT('Local Queue:'),HEADER('Local Queue'),PICTURE(@s20),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 1:'),USE(?f1:Prompt)
! ENTRY(@s128),USE(f1)
[REPORTCONTROLS]
! STRING(@s128),USE(f1)
f1                         STRING(128)
!!> GUID('997fb3b6-73db-4bc6-b970-f3dc7fe7b4b2'),PROMPT('f 1:'),HEADER('f 1'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 2:'),USE(?f2:Prompt)
! ENTRY(@s128),USE(f2)
[REPORTCONTROLS]
! STRING(@s128),USE(f2)
f2                         STRING(128)
!!> GUID('ae64bb61-5046-4024-836b-b60ee24fc7c8'),PROMPT('f 2:'),HEADER('f 2'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 3:'),USE(?f3:Prompt)
! ENTRY(@s128),USE(f3)
[REPORTCONTROLS]
! STRING(@s128),USE(f3)
f3                         STRING(128)
!!> GUID('a58c8d13-11cd-449a-bebc-c47584f8983d'),PROMPT('f 3:'),HEADER('f 3'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 4:'),USE(?f4:Prompt)
! ENTRY(@s128),USE(f4)
[REPORTCONTROLS]
! STRING(@s128),USE(f4)
f4                         STRING(128)
!!> GUID('6b7f235f-f253-4cf6-9d8c-55248e80c1e9'),PROMPT('f 4:'),HEADER('f 4'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 5:'),USE(?f5:Prompt)
! ENTRY(@s128),USE(f5)
[REPORTCONTROLS]
! STRING(@s128),USE(f5)
f5                         STRING(128)
!!> GUID('3bcb2b80-b66f-4021-94c0-0474f480464f'),PROMPT('f 5:'),HEADER('f 5'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 6:'),USE(?f6:Prompt)
! ENTRY(@s128),USE(f6)
[REPORTCONTROLS]
! STRING(@s128),USE(f6)
f6                         STRING(128)
!!> GUID('64176033-6b7a-4e78-ac8e-e62d2245a91b'),PROMPT('f 6:'),HEADER('f 6'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 7:'),USE(?f7:Prompt)
! ENTRY(@s128),USE(f7)
[REPORTCONTROLS]
! STRING(@s128),USE(f7)
f7                         STRING(128)
!!> GUID('872eba99-d416-4ce3-bf36-3ebab3e4e143'),PROMPT('f 7:'),HEADER('f 7'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 8:'),USE(?f8:Prompt)
! ENTRY(@s128),USE(f8)
[REPORTCONTROLS]
! STRING(@s128),USE(f8)
f8                         STRING(128)
!!> GUID('4edebdc1-6ab0-454d-a6db-2745d3ef0d77'),PROMPT('f 8:'),HEADER('f 8'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 9:'),USE(?f9:Prompt)
! ENTRY(@s128),USE(f9)
[REPORTCONTROLS]
! STRING(@s128),USE(f9)
f9                         STRING(128)
!!> GUID('950bed54-c509-469c-9e7a-d0505777a831'),PROMPT('f 9:'),HEADER('f 9'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 10:'),USE(?f10:Prompt)
! ENTRY(@s128),USE(f10)
[REPORTCONTROLS]
! STRING(@s128),USE(f10)
f10                        STRING(128)
!!> GUID('d259cd16-8aff-4951-bc9c-c6a10b593db5'),PROMPT('f 10:'),HEADER('f 10'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 11:'),USE(?f11:Prompt)
! ENTRY(@s128),USE(f11)
[REPORTCONTROLS]
! STRING(@s128),USE(f11)
f11                        STRING(128)
!!> GUID('d010de07-9826-4c01-b714-d65cb8ee83e4'),PROMPT('f 11:'),HEADER('f 11'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 12:'),USE(?f12:Prompt)
! ENTRY(@s128),USE(f12)
[REPORTCONTROLS]
! STRING(@s128),USE(f12)
f12                        STRING(128)
!!> GUID('ba154e90-13c4-4e32-92f7-d021b5c4cea9'),PROMPT('f 12:'),HEADER('f 12'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 13:'),USE(?f13:Prompt)
! ENTRY(@s128),USE(f13)
[REPORTCONTROLS]
! STRING(@s128),USE(f13)
f13                        STRING(128)
!!> GUID('16593cfc-2470-4df6-b208-646f1675e454'),PROMPT('f 13:'),HEADER('f 13'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 14:'),USE(?f14:Prompt)
! ENTRY(@s128),USE(f14)
[REPORTCONTROLS]
! STRING(@s128),USE(f14)
f14                        STRING(128)
!!> GUID('726a89ab-999d-4664-b0ae-c870fb94dcb0'),PROMPT('f 14:'),HEADER('f 14'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 15:'),USE(?f15:Prompt)
! ENTRY(@s128),USE(f15)
[REPORTCONTROLS]
! STRING(@s128),USE(f15)
f15                        STRING(128)
!!> GUID('7155edc3-64a0-4fbf-ab8e-3cd2d94be5b3'),PROMPT('f 15:'),HEADER('f 15'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 16:'),USE(?f16:Prompt)
! ENTRY(@s128),USE(f16)
[REPORTCONTROLS]
! STRING(@s128),USE(f16)
f16                        STRING(128)
!!> GUID('2360f317-c50e-42d7-8429-ab2ea7a8bce6'),PROMPT('f 16:'),HEADER('f 16'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 17:'),USE(?f17:Prompt)
! ENTRY(@s128),USE(f17)
[REPORTCONTROLS]
! STRING(@s128),USE(f17)
f17                        STRING(128)
!!> GUID('bec1b16a-a2ad-4655-95a5-e32f0be8909e'),PROMPT('f 17:'),HEADER('f 17'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 18:'),USE(?f18:Prompt)
! ENTRY(@s128),USE(f18)
[REPORTCONTROLS]
! STRING(@s128),USE(f18)
f18                        STRING(128)
!!> GUID('a31ba58f-23d5-4879-9fda-77ce3a58b66c'),PROMPT('f 18:'),HEADER('f 18'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 19:'),USE(?f19:Prompt)
! ENTRY(@s128),USE(f19)
[REPORTCONTROLS]
! STRING(@s128),USE(f19)
f19                        STRING(128)
!!> GUID('deb94c61-1350-4adb-8fe1-7a0b46c72046'),PROMPT('f 19:'),HEADER('f 19'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 20:'),USE(?f20:Prompt)
! ENTRY(@s128),USE(f20)
[REPORTCONTROLS]
! STRING(@s128),USE(f20)
f20                        STRING(128)
!!> GUID('67d19741-c40f-4c48-8205-8a077d57c3ee'),PROMPT('f 20:'),HEADER('f 20'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 21:'),USE(?f21:Prompt)
! ENTRY(@s128),USE(f21)
[REPORTCONTROLS]
! STRING(@s128),USE(f21)
f21                        STRING(128)
!!> GUID('d83bd0e7-4d15-4624-ad4d-ed7c960931e2'),PROMPT('f 21:'),HEADER('f 21'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 22:'),USE(?f22:Prompt)
! ENTRY(@s128),USE(f22)
[REPORTCONTROLS]
! STRING(@s128),USE(f22)
f22                        STRING(128)
!!> GUID('dbec186b-d8a9-4a89-8f06-5afc3d35d7b9'),PROMPT('f 22:'),HEADER('f 22'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 23:'),USE(?f23:Prompt)
! ENTRY(@s128),USE(f23)
[REPORTCONTROLS]
! STRING(@s128),USE(f23)
f23                        STRING(128)
!!> GUID('335a2c01-b452-4fa2-8db9-8a42e4c35c44'),PROMPT('f 23:'),HEADER('f 23'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 24:'),USE(?f24:Prompt)
! ENTRY(@s128),USE(f24)
[REPORTCONTROLS]
! STRING(@s128),USE(f24)
f24                        STRING(128)
!!> GUID('e8e50228-3290-4870-a858-de3d402b6a0b'),PROMPT('f 24:'),HEADER('f 24'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 25:'),USE(?f25:Prompt)
! ENTRY(@s128),USE(f25)
[REPORTCONTROLS]
! STRING(@s128),USE(f25)
f25                        STRING(128)
!!> GUID('c890110b-9de9-41a9-af4e-c5cbf77c42ba'),PROMPT('f 25:'),HEADER('f 25'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 26:'),USE(?f26:Prompt)
! ENTRY(@s128),USE(f26)
[REPORTCONTROLS]
! STRING(@s128),USE(f26)
f26                        STRING(128)
!!> GUID('4b7e1e62-408b-4db7-990e-90254c5baf6c'),PROMPT('f 26:'),HEADER('f 26'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 27:'),USE(?f27:Prompt)
! ENTRY(@s128),USE(f27)
[REPORTCONTROLS]
! STRING(@s128),USE(f27)
f27                        STRING(128)
!!> GUID('d8e8d622-b4a4-4fc2-901c-f4386e28f7f6'),PROMPT('f 27:'),HEADER('f 27'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 28:'),USE(?f28:Prompt)
! ENTRY(@s128),USE(f28)
[REPORTCONTROLS]
! STRING(@s128),USE(f28)
f28                        STRING(128)
!!> GUID('2be1066e-482e-4ecc-9f24-4af98f37702c'),PROMPT('f 28:'),HEADER('f 28'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 29:'),USE(?f29:Prompt)
! ENTRY(@s128),USE(f29)
[REPORTCONTROLS]
! STRING(@s128),USE(f29)
f29                        STRING(128)
!!> GUID('b149da71-31c3-4005-8f76-fd953dba0b90'),PROMPT('f 29:'),HEADER('f 29'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 30:'),USE(?f30:Prompt)
! ENTRY(@s128),USE(f30)
[REPORTCONTROLS]
! STRING(@s128),USE(f30)
f30                        STRING(128)
!!> GUID('a488d288-e94f-48d3-9584-ae2239b090ea'),PROMPT('f 30:'),HEADER('f 30'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 31:'),USE(?f31:Prompt)
! ENTRY(@s128),USE(f31)
[REPORTCONTROLS]
! STRING(@s128),USE(f31)
f31                        STRING(128)
!!> GUID('398f6799-a300-4235-8c84-fa9078b17a38'),PROMPT('f 31:'),HEADER('f 31'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 32:'),USE(?f32:Prompt)
! ENTRY(@s128),USE(f32)
[REPORTCONTROLS]
! STRING(@s128),USE(f32)
f32                        STRING(128)
!!> GUID('7586b879-d0fb-472e-a61c-d4773e7f9519'),PROMPT('f 32:'),HEADER('f 32'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 33:'),USE(?f33:Prompt)
! ENTRY(@s128),USE(f33)
[REPORTCONTROLS]
! STRING(@s128),USE(f33)
f33                        STRING(128)
!!> GUID('2876db2e-bf95-4c64-932f-7126768a2282'),PROMPT('f 33:'),HEADER('f 33'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 34:'),USE(?f34:Prompt)
! ENTRY(@s128),USE(f34)
[REPORTCONTROLS]
! STRING(@s128),USE(f34)
f34                        STRING(128)
!!> GUID('dbcda764-9904-4229-ae31-3278038cd321'),PROMPT('f 34:'),HEADER('f 34'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 35:'),USE(?f35:Prompt)
! ENTRY(@s128),USE(f35)
[REPORTCONTROLS]
! STRING(@s128),USE(f35)
f35                        STRING(128)
!!> GUID('60c4b56b-dc21-4fd7-b1d1-f1848605529e'),PROMPT('f 35:'),HEADER('f 35'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 36:'),USE(?f36:Prompt)
! ENTRY(@s128),USE(f36)
[REPORTCONTROLS]
! STRING(@s128),USE(f36)
f36                        STRING(128)
!!> GUID('19920119-ab9f-44dd-87c3-178cc05c2971'),PROMPT('f 36:'),HEADER('f 36'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 37:'),USE(?f37:Prompt)
! ENTRY(@s128),USE(f37)
[REPORTCONTROLS]
! STRING(@s128),USE(f37)
f37                        STRING(128)
!!> GUID('babc8b5b-3308-4e11-bb0d-a324af5285f8'),PROMPT('f 37:'),HEADER('f 37'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 38:'),USE(?f38:Prompt)
! ENTRY(@s128),USE(f38)
[REPORTCONTROLS]
! STRING(@s128),USE(f38)
f38                        STRING(128)
!!> GUID('5a725c76-fb0c-407b-9c62-385fc559bbd5'),PROMPT('f 38:'),HEADER('f 38'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 39:'),USE(?f39:Prompt)
! ENTRY(@s128),USE(f39)
[REPORTCONTROLS]
! STRING(@s128),USE(f39)
f39                        STRING(128)
!!> GUID('e1cc0ca0-85ce-4e65-82b7-09bedb61fc5f'),PROMPT('f 39:'),HEADER('f 39'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('f 40:'),USE(?f40:Prompt)
! ENTRY(@s128),USE(f40)
[REPORTCONTROLS]
! STRING(@s128),USE(f40)
f40                        STRING(128)
!!> GUID('36edf466-6a51-4f9d-b138-c0aaa8a37048'),PROMPT('f 40:'),HEADER('f 40'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('F 41:'),USE(?F41:Prompt)
! ENTRY(@s128),USE(F41)
[REPORTCONTROLS]
! STRING(@s128),USE(F41)
F41                        STRING(128)
!!> GUID('100a1c77-76b7-4f52-9523-22398b5cf9b3'),PROMPT('F 41:'),HEADER('F 41'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('F 42:'),USE(?F42:Prompt)
! ENTRY(@s128),USE(F42)
[REPORTCONTROLS]
! STRING(@s128),USE(F42)
F42                        STRING(128)
!!> GUID('7663f7c7-0186-439f-985d-0bb1011807b7'),PROMPT('F 42:'),HEADER('F 42'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('F 43:'),USE(?F43:Prompt)
! ENTRY(@s128),USE(F43)
[REPORTCONTROLS]
! STRING(@s128),USE(F43)
F43                        STRING(128)
!!> GUID('03d24229-f36b-4a03-bc83-34fe7a5e4364'),PROMPT('F 43:'),HEADER('F 43'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('F 44:'),USE(?F44:Prompt)
! ENTRY(@s128),USE(F44)
[REPORTCONTROLS]
! STRING(@s128),USE(F44)
F44                        STRING(128)
!!> GUID('3c521f7b-8033-4823-bd4e-8d2e63cbf8dc'),PROMPT('F 44:'),HEADER('F 44'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('F 45:'),USE(?F45:Prompt)
! ENTRY(@s128),USE(F45)
[REPORTCONTROLS]
! STRING(@s128),USE(F45)
F45                        STRING(128)
!!> GUID('c95103f1-0657-4040-b221-2dabed26d32a'),PROMPT('F 45:'),HEADER('F 45'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('F 46:'),USE(?F46:Prompt)
! ENTRY(@s128),USE(F46)
[REPORTCONTROLS]
! STRING(@s128),USE(F46)
F46                        STRING(128)
!!> GUID('440c4486-dab9-45e1-9266-ae5d6ecf1424'),PROMPT('F 46:'),HEADER('F 46'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('F 47:'),USE(?F47:Prompt)
! ENTRY(@s128),USE(F47)
[REPORTCONTROLS]
! STRING(@s128),USE(F47)
F47                        STRING(128)
!!> GUID('06bb0472-14ba-47a7-bf55-c473665b45a5'),PROMPT('F 47:'),HEADER('F 47'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('F 48:'),USE(?F48:Prompt)
! ENTRY(@s128),USE(F48)
[REPORTCONTROLS]
! STRING(@s128),USE(F48)
F48                        STRING(128)
!!> GUID('db48eb2d-ddd2-41fe-ba91-d293d08ed656'),PROMPT('F 48:'),HEADER('F 48'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('F 49:'),USE(?F49:Prompt)
! ENTRY(@s128),USE(F49)
[REPORTCONTROLS]
! STRING(@s128),USE(F49)
F49                        STRING(128)
!!> GUID('8ae80b19-f390-48ae-aaf7-04efa82d5717'),PROMPT('F 49:'),HEADER('F 49'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('F 50:'),USE(?F50:Prompt)
! ENTRY(@s128),USE(F50)
[REPORTCONTROLS]
! STRING(@s128),USE(F50)
F50                        STRING(128)
!!> GUID('9da6d727-650c-4e22-b4ac-30ee5881a810'),PROMPT('F 50:'),HEADER('F 50'),PICTURE(@s128),TYPEMODE(INS)
                         END
!!> GUID('3bcf225d-8d0b-46d8-a94b-49614aacbc45')
[SCREENCONTROLS]
! PROMPT('Ref Field:'),USE(?RefField:Prompt)
! ENTRY(@s20),USE(RefField)
[REPORTCONTROLS]
! STRING(@s20),USE(RefField)
RefField                 ANY
!!> GUID('ea5faca8-d222-4036-96e6-37d02e635a47'),PROMPT('Ref Field:'),HEADER('Ref Field'),PICTURE(@s20),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('2c121951-e108-4704-ac10-108c98d5f195'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n-14),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(J),RIGHT(1)
J                        LONG
!!> GUID('b18bac12-ead6-404e-9633-8a6fe138187a'),PROMPT('J:'),HEADER('J'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('k:'),USE(?k:Prompt)
! ENTRY(@n-14),USE(k),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(k),RIGHT(1)
k                        LONG
!!> GUID('43f4605e-edd3-4dbf-8bb2-881ff3a4b5ca'),PROMPT('k:'),HEADER('k'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('l:'),USE(?l:Prompt)
! ENTRY(@n-14),USE(l),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(l),RIGHT(1)
l                        LONG
!!> GUID('cd7743c0-afdd-4523-ac1c-58ecb518fc35'),PROMPT('l:'),HEADER('l'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('m:'),USE(?m:Prompt)
! ENTRY(@n-14),USE(m),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(m),RIGHT(1)
m                        LONG
!!> GUID('9722a0c9-532b-4a99-a45a-6c74b46176b3'),PROMPT('m:'),HEADER('m'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('n:'),USE(?n:Prompt)
! ENTRY(@n-7),USE(n),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(n),RIGHT(1)
n                        SHORT
!!> GUID('ca41bbcd-a0f3-45d1-bd26-c0ce63273a73'),PROMPT('n:'),HEADER('n'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('LF ield Name:'),USE(?LFieldName:Prompt)
! ENTRY(@s50),USE(LFieldName)
[REPORTCONTROLS]
! STRING(@s50),USE(LFieldName)
LFieldName               STRING(50)
!!> GUID('798d72a4-438d-48c7-8b94-df184da4f466'),PROMPT('LF ield Name:'),HEADER('LF ield Name'),PICTURE(@s50),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('l Dim Field:'),USE(?lDimField:Prompt)
! ENTRY(@n-7),USE(lDimField),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(lDimField),RIGHT(1)
lDimField                SHORT
!!> GUID('363111a8-7230-4b72-a4f5-b28ae11ee8d3'),PROMPT('l Dim Field:'),HEADER('l Dim Field'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('nstr:'),USE(?nstr:Prompt)
! ENTRY(@s19),USE(nstr)
[REPORTCONTROLS]
! STRING(@s19),USE(nstr)
nstr                     CSTRING(20)
!!> GUID('c0186c92-4c08-40c5-8c9c-bffbe03243c7'),PROMPT('nstr:'),HEADER('nstr'),PICTURE(@s19),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('OPN:'),USE(?OPN:Prompt)
! ENTRY(@s19),USE(OPN)
[REPORTCONTROLS]
! STRING(@s19),USE(OPN)
OPN                      CSTRING(20)
!!> GUID('a3eadc08-89b4-4f95-9063-a978a0700c30'),PROMPT('OPN:'),HEADER('OPN'),PICTURE(@s19),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('URLT o Call:'),USE(?URLToCall:Prompt)
! ENTRY(@s129),USE(URLToCall)
[REPORTCONTROLS]
! STRING(@s129),USE(URLToCall)
URLToCall                CSTRING(130)
!!> GUID('f3a02fe6-2447-43c9-ad9e-5684df56d7db'),INITIAL('128<0>{126}'),PROMPT('URLT o Call:'),HEADER('URLT o Call'),PICTURE(@s129),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Current Line Number:'),USE(?CurrentLineNumber:Prompt)
! ENTRY(@n-14),USE(CurrentLineNumber),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(CurrentLineNumber),RIGHT(1)
CurrentLineNumber        LONG
!!> GUID('1a568f97-7bb2-4b9d-ab26-27df50f866c2'),PROMPT('Current Line Number:'),HEADER('Current Line Number'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Use Field:'),USE(?UseField:Prompt)
! ENTRY(@s50),USE(UseField)
[REPORTCONTROLS]
! STRING(@s50),USE(UseField)
UseField                 CSTRING(51)
!!> GUID('ef5b30c4-8119-4467-a982-6b6a76950d81'),PROMPT('Use Field:'),HEADER('Use Field'),PICTURE(@s50),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Expand Queue:'),USE(?ExpandQueue:Prompt)
! ENTRY(@s20),USE(ExpandQueue)
[REPORTCONTROLS]
! STRING(@s20),USE(ExpandQueue)
ExpandQueue              QUEUE,PRE()
!!> GUID('2418c66b-96a4-4a2b-af10-6d72a5091b12'),PROMPT('Expand Queue:'),HEADER('Expand Queue'),PICTURE(@s20),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Orig Order:'),USE(?OrigOrder:Prompt)
! ENTRY(@n-7),USE(OrigOrder),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(OrigOrder),RIGHT(1)
OrigOrder                  SHORT
!!> GUID('d012b5ed-0900-4d93-937c-853b416ad48b'),PROMPT('Orig Order:'),HEADER('Orig Order'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Fielda:'),USE(?Fielda:Prompt)
! ENTRY(@s50),USE(Fielda)
[REPORTCONTROLS]
! STRING(@s50),USE(Fielda)
Fielda                     STRING(50)
!!> GUID('fcc2f061-a296-48cc-ac49-dd653e2fffe7'),PROMPT('Fielda:'),HEADER('Fielda'),PICTURE(@s50),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Fieldb:'),USE(?Fieldb:Prompt)
! ENTRY(@s255),USE(Fieldb)
[REPORTCONTROLS]
! STRING(@s255),USE(Fieldb)
Fieldb                     STRING(1024)
!!> GUID('9705f4b8-9dd4-4a06-b2e1-8bb326ea76e2'),PROMPT('Fieldb:'),HEADER('Fieldb'),PICTURE(@s255),TYPEMODE(INS)
                         END
!!> GUID('60914e03-bc48-4414-9f91-d5c431846911')
[PROMPTS]
%ReturnValue FIELD  ()
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (1)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (1)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ButtonAction DEPEND %Control DEFAULT TIMES 10
WHEN  ('') ('No Special Action')
WHEN  ('?Bookmarked') ('No Special Action')
WHEN  ('?CurrentLineNumber') ('No Special Action')
WHEN  ('?DatePictures') ('No Special Action')
WHEN  ('?Export') ('No Special Action')
WHEN  ('?Findb') ('No Special Action')
WHEN  ('?List1') ('No Special Action')
WHEN  ('?List2') ('No Special Action')
WHEN  ('?OkButton') ('No Special Action')
WHEN  ('?Pictures') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 3
WHEN  ('?Export') ('')
WHEN  ('?OkButton') ('')
WHEN  ('?Pictures') ('')

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 3
WHEN  ('?Export') ('')
WHEN  ('?OkButton') ('')
WHEN  ('?Pictures') ('')

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 3
WHEN  ('?Export') ()
WHEN  ('?OkButton') ()
WHEN  ('?Pictures') ()

%ButtonThread DEPEND %Control LONG TIMES 3
WHEN  ('?Export') (0)
WHEN  ('?OkButton') (0)
WHEN  ('?Pictures') (0)

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 10
WHEN  ('') ('25000')
WHEN  ('?Bookmarked') ('25000')
WHEN  ('?CurrentLineNumber') ('25000')
WHEN  ('?DatePictures') ('25000')
WHEN  ('?Export') ('25000')
WHEN  ('?Findb') ('25000')
WHEN  ('?List1') ('25000')
WHEN  ('?List2') ('25000')
WHEN  ('?OkButton') ('25000')
WHEN  ('?Pictures') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 3
WHEN  ('?Export') ('')
WHEN  ('?OkButton') ('')
WHEN  ('?Pictures') ('')

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 3
WHEN  ('?Export') ()
WHEN  ('?OkButton') ()
WHEN  ('?Pictures') ()

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 3
WHEN  ('?Export') (0)
WHEN  ('?OkButton') (0)
WHEN  ('?Pictures') (0)

%ButtonRequest DEPEND %Control DEFAULT TIMES 10
WHEN  ('') ('None')
WHEN  ('?Bookmarked') ('None')
WHEN  ('?CurrentLineNumber') ('None')
WHEN  ('?DatePictures') ('None')
WHEN  ('?Export') ('None')
WHEN  ('?Findb') ('None')
WHEN  ('?List1') ('None')
WHEN  ('?List2') ('None')
WHEN  ('?OkButton') ('None')
WHEN  ('?Pictures') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 3
WHEN  ('?Export') ('')
WHEN  ('?OkButton') ('')
WHEN  ('?Pictures') ('')

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 3
WHEN  ('?Export') ()
WHEN  ('?OkButton') ()
WHEN  ('?Pictures') ()

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 1
WHEN  ('?CurrentLineNumber') ()

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 1
WHEN  ('?CurrentLineNumber') ()

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 1
WHEN  ('?CurrentLineNumber') ('')

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 1
WHEN  ('?CurrentLineNumber') ()

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 1
WHEN  ('?CurrentLineNumber') ()

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 1
WHEN  ('?CurrentLineNumber') ('')

%PostLookupDuringValidate DEPEND %Control LONG TIMES 8
WHEN  ('') (1)
WHEN  ('?CurrentLineNumber') (1)
WHEN  ('?Export') (1)
WHEN  ('?FindInQueue') (1)
WHEN  ('?List1') (1)
WHEN  ('?List2') (1)
WHEN  ('?OkButton') (1)
WHEN  ('?Pictures') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 7
WHEN  ('')TIMES 0
WHEN  ('?CurrentLineNumber')TIMES 0
WHEN  ('?Export')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?List2')TIMES 0
WHEN  ('?OkButton')TIMES 0
WHEN  ('?Pictures')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 7
WHEN  ('')TIMES 0
WHEN  ('?CurrentLineNumber')TIMES 0
WHEN  ('?Export')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?List2')TIMES 0
WHEN  ('?OkButton')TIMES 0
WHEN  ('?Pictures')TIMES 0

%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabDisableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 6
WHEN  ('')TIMES 0
WHEN  ('?CurrentLineNumber')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?List2')TIMES 0
WHEN  ('?OkButton')TIMES 0
WHEN  ('?Pictures')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 6
WHEN  ('')TIMES 0
WHEN  ('?CurrentLineNumber')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?List2')TIMES 0
WHEN  ('?OkButton')TIMES 0
WHEN  ('?Pictures')TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 6
WHEN  ('') ('Default')
WHEN  ('?CurrentLineNumber') ('Default')
WHEN  ('?List1') ('Default')
WHEN  ('?List2') ('Default')
WHEN  ('?OkButton') ('Default')
WHEN  ('?Pictures') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 1
WHEN  ('') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 1
WHEN  ('') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('AIBtn0')

%AIEnableMimicControl DEPEND %Control LONG TIMES 1
WHEN  ('') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('?List1')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ControlPreEventHandling
[INSTANCES]
WHEN '?OkButton'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[GROUP]
PRIORITY 4000
INSTANCE 1
[END]
[END]
WHEN '?Export'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Do ExportQueue
[END]
[END]
WHEN '?Pictures'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  XML:DebugMyQueuePic(INTitle)
  DO Repicture
  DO SyncQueue
[END]
[END]
WHEN '?List2'
[INSTANCES]
WHEN 'PreAlertKey'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    CYCLE
[END]
WHEN 'AlertKey'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
     Do StopDragging
     if keycode() = mouseleft
        L2:ColumnSelected = xmll:MouseDown(L2:RegionControl,?List2,True)
        if L2:ColumnSelected
           L2:CurrentSort = L2:ColumnSelected
           execute L2:CurrentSort
           sort(ExpandQueue,OrigOrder)
           sort(ExpandQueue,Fielda)
           sort(ExpandQueue,Fieldb)
           end
        end
         xmll:mouseUp(L2:RegionControl)
      end

[END]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  Do StopDragging
  if keycode() = mouseleft2
     get(ExpandQueue,choice(?list2))
     if ~errorcode()
        XML:DebugMyQueue2(Fieldb)
     end
  end
[END]
[END]
WHEN '?PANEL1'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   Dragging = True
   hide(?PANEL1)
   SETCURSOR(CURSOR:SizeNS)

[END]
WHEN 'MouseMove'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  Do ResizeIT
[END]
WHEN 'MouseUp'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  Do StopDragging
[END]
[END]
WHEN '?Findb'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END

   if FindInQueue = ''
      select(?FindInQueue)
   else
      do FindIt
   end
[END]
[END]
WHEN '?DatePictures'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  LOOP I = 1 TO RECORDS(MYQUEUEPICTURES)
     GET(MyQueuePictures,I)
     IF INSTRING('DATE',UPPER(FieldNames),1,1)
        PictureString='@D017B';PUT(MyQueuePictures)
     END
   END
  DO Repicture
  DO SyncQueue
[END]
[END]
WHEN '?Bookmarked'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 I = POPUP('Set Bookmark|-|' & CHOOSE(bookmark = 0,'~','') & 'Goto Bookmark ' )
 case i
 of 2
     select(?List1,bookmark)
     display()
  of 1
     bookmark = choice(?List1)
     message('Row ' & BookMark & ' has been saved.','Bookmark',icon:asterisk)
  end

[END]
[END]
[END]
EMBED %AfterWindowOpening
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  Window{PROP:MinHeight} = 200
  Window{PROP:MinWidth} = 470

  if InTitle
     WINDOW{prop:text} = clip(InTitle)
  end

  XMLL:RestoreWindow('DebugMyQueue')
  s1 = GETREG(REG_LOCAL_MACHINE,'SOFTWARE\IQXML\DebugMyQueue','s1')

  Do CheckWinRanges

  FREE(MyQueuePictures)

  L2:RegionControl = XMLL:Initiate(?list2)



[END]
EMBED %ProcedureInitialize
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
if glo:_XML_skipdebug
   do ProcedureRETURN
END
[END]
EMBED %ControlPostEventHandling
[INSTANCES]
WHEN '?List1'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
CHANGE(?CurrentLineNumber,choice(?List1))

[END]
WHEN 'NewSelection'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
DO SyncQueue
[END]
WHEN 'Selected'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
DO SyncQueue
[END]
[END]
WHEN '?CurrentLineNumber'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
if CurrentLineNumber
   get(LocalQueue,CurrentLineNumber)
   ?list1{prop:selected} = CurrentLineNumber
end
[END]
WHEN 'NewSelection'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
if CurrentLineNumber
   get(LocalQueue,CurrentLineNumber)
   ?list1{prop:selected} = CurrentLineNumber
end
[END]
[END]
[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 9950
PROPERTY:END
  ?CurrentLineNumber{prop:width} = 44
[SOURCE]
PROPERTY:BEGIN
PRIORITY 9950
PROPERTY:END
ResizeIT    ROUTINE

   WinHeight = window{prop:height}
   if Dragging = True
      s1 = MOUSEY()
      Do CheckWinRanges

      ?List1{prop:height} = S1-4
      SETPOSITION(?list2,,S1+4,,WinHeight - (s1+4) - 28)

   else
      Do CheckWinRanges
      SYSTEM{PROP:LAZYDISPLAY} = 1
      ?List1{prop:Width} = WINDOW{Prop:width} - 6
      t2 = ?List1{prop:width}

      case s1
      of 1
         t1 = (WinHeight - 35 ) /2
         ?List1{prop:height} = t1
         setposition(?List2,,t1+7,t2,t1)
      of 2
         ?List1{prop:height} = 113
         setposition(?list2,,113+7,t2,WinHeight - 113 - 32)
      of 3
         ?List1{prop:height} = WinHeight - 113 - 32
         setposition(?list2,,?List1{prop:height}+7,t2,113)
      ELSE
         ?List1{prop:height} = S1-4
         SETPOSITION(?list2,,S1+4,t2,WinHeight - (s1+4) - 28)
      end

      t1 =  WinHeight - 20
      setposition(?OKBUTTON,window{Prop:width} - 68, t1)
      setposition(?Export,window{Prop:width} - 136,t1)
      setposition(?Pictures,window{Prop:width} - 204, t1)
      setposition(?DatePictures,window{Prop:width} - 230, t1)
      ?Bookmarked{prop:at,2} = t1
      ?CurrentLineNumber{prop:at,2} = t1

      ?findb{prop:at,2} = t1
      ?FindInQueue{prop:at,2} = t1

      SETPOSITION(?PANEL1,,?List2{PROP:AT,2}-4,T2)
      SYSTEM{PROP:LAZYDISPLAY} = 0
   end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 9950
PROPERTY:END
CheckWinRanges  ROUTINE

  if s1  < 80
     s1 = 80
  elsif s1  > WinHeight - 75
     s1 = WinHeight - 75
  end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 9950
PROPERTY:END
StopDragging    ROUTINE

  if Dragging = True
     Dragging = False
     UNHIDE(?panel1)
     Do ResizeIT
     SETCURSOR()
  end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 9950
PROPERTY:END
Repicture  ROUTINE

    loop i = 1 to records(MyQueuePictures)
       get(MyQueuePictures,i)
       ?list1{proplist:PICTURE,I} = PictureString
       if ShowIt='Show'
          ?list1{proplist:width,i} = 100
       else
          ?list1{proplist:width,i} = 0
       END
    END
[SOURCE]
PROPERTY:BEGIN
PRIORITY 9950
PROPERTY:END
SyncQueue   ROUTINE

  free(ExpandQueue)
  clear(ExpandQueue)

  k = choice(?List1)
  if k = 0 then exit.

  n=0

  GET(PassQueue,k)

  if ~errorcode()

     loop k = 1 to 500

       LFieldName = WHO(PassQueue,k)
       if LFieldName = '' then break.

       lDimField = HOWMANY(PassQueue,k)

       if lDimField > 1
          loop l = 1 to ldimField
             Fielda = clip(Lower(LFieldName)) & '[' & l & ']'
             RefField &= WHAT(PassQueue,k,l)
             Fieldb = REFFIELD
             N+=1
             OrigOrder=n
             add(ExpandQueue)
             RefField &= NULL
          end
       else
          Fielda = clip(Lower(LFieldName))
          RefField &= WHAT(PassQueue,k)
          Fieldb = REFFIELD

          get(MyQueuePictures,k)
          if ~errorcode()
             Fieldb = format(Fieldb,clip(PictureString))
          END
          N+=1
          OrigOrder=n
          add(ExpandQueue)
          RefField &= NULL
       end
     end

   end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 9950
PROPERTY:END
LoadFields  ROUTINE

 loop j = 1 to 50

    LFieldName = WHO(PassQueue,j)
    if LFieldName = '' then break.

    lDimField = HOWMANY(PassQueue,j)


    if lDimField > 1
       loop i = 1 to ldimField
          M+=1
          useField = clip(Lower(LFieldName))
          ?list1{PROPLIST:Header,m} = useField & '[' & i & ']'
          if instring('date',usefield,1,1)
            ?list1{PROPLIST:WIDTH,m} = 50
          else
            ?list1{PROPLIST:WIDTH,m} = 100
          end
          FieldNames=useField & '[' & i & ']'
          PictureString='@s128'
          ShowIt='Show'
          add(MyQueuePictures)
       end
    else
       M+=1
       useField = clip(Lower(LFieldName))
       ?list1{PROPLIST:Header,m} = useField
       if instring('date',usefield,1,1)
          ?list1{PROPLIST:WIDTH,m} = 50
       else
          ?list1{PROPLIST:WIDTH,m} = 100
       end
       FieldNames=lFieldName
       PictureString='@s128'
       ShowIt='Show'
       add(MyQueuePictures)
    end

  end

  TotalColumns = j-1

[SOURCE]
PROPERTY:BEGIN
PRIORITY 9950
PROPERTY:END
HideFields  ROUTINE

  ! hide the rest of the fields
  ! ---------------------------
  M+=1
  Loop I = m to 50
     ?list1{PROPLIST:WIDTH,I} = 0
  end

  i = records(PassQueue)
  loop j = 1 to i
     GET(passqueue,j)
     Clear(LocalQueue)
     clear(m)
     loop k = 1 to 50
        lFieldName = WHO(Passqueue,k)
        if lFieldName = '' then break.

        ldimfield = HOWMANY(Passqueue,K)
        if lDimField > 1
           loop l = 1 to lDimfield
              M+=1
              RefField &= WHAT(PassQueue,k,l)
               execute m
               f1 = RefField
               f2 = RefField
               f3 = RefField
               f4 = RefField
               f5 = RefField
               f6 = RefField
               f7 = RefField
               f8 = RefField
               f9 = RefField
               f10 = RefField
               f11 = RefField
               f12 = RefField
               f13 = RefField
               f14 = RefField
               f15 = RefField
               f16 = RefField
               f17 = RefField
               f18 = RefField
               f19 = RefField
               f20 = RefField
               f21 = RefField
               f22 = RefField
               f23 = RefField
               f24 = RefField
               f25 = RefField
               f26 = RefField
               f27 = RefField
               f28 = RefField
               f29 = RefField
               f30 = RefField
               f31 = RefField
               f32 = RefField
               f33 = RefField
               f34 = RefField
               f35 = RefField
               f36 = RefField
               f37 = RefField
               f38 = RefField
               f39 = RefField
               f40 = RefField
               f41 = RefField
               f42 = RefField
               f43 = RefField
               f44 = RefField
               f45 = RefField
               f46 = RefField
               f47 = RefField
               f48 = RefField
               f49 = RefField
               f50 = RefField
               end
               RefField &= NULL
           end
        else
           M+=1
           RefField &= WHAT(PassQueue,k)
           execute m
           f1 = RefField
           f2 = RefField
           f3 = RefField
           f4 = RefField
           f5 = RefField
           f6 = RefField
           f7 = RefField
           f8 = RefField
           f9 = RefField
           f10 = RefField
           f11 = RefField
           f12 = RefField
           f13 = RefField
           f14 = RefField
           f15 = RefField
           f16 = RefField
           f17 = RefField
           f18 = RefField
           f19 = RefField
           f20 = RefField
           f21 = RefField
           f22 = RefField
           f23 = RefField
           f24 = RefField
           f25 = RefField
           f26 = RefField
           f27 = RefField
           f28 = RefField
           f29 = RefField
           f30 = RefField
           f31 = RefField
           f32 = RefField
           f33 = RefField
           f34 = RefField
           f35 = RefField
           f36 = RefField
           f37 = RefField
           f38 = RefField
           f39 = RefField
           f40 = RefField
           f41 = RefField
           f42 = RefField
           f43 = RefField
           f44 = RefField
           f45 = RefField
           f46 = RefField
           f47 = RefField
           f48 = RefField
           f49 = RefField
           f50 = RefField
           end
           RefField &= NULL
        end
     end
     ADD(LocalQueue)
  end

  Window{PROP:TEXT} = Window{PROP:TEXT} & ' [' &   records(LocalQueue) & ' record(s)]'
[SOURCE]
PROPERTY:BEGIN
PRIORITY 9950
PROPERTY:END
ExportQueue ROUTINE

 REMOVE('IQXMLResults.csv')
 glo:_XML_xmlbinaryname = 'IQXMLResults.csv'

 CREATE(XMLBase64File)
 IF  ~ERRORCODE()
    OPEN(XMLBase64File)

      CLEAR(B64:STANDLINE)
      LOOP J = 1 to TotalColumns
          B64:standline = clip(B64:standline) & chr(34) & CLIP(?List1{proplist:header,j}) & CHR(34) & ','
      END
      B64:STANDLINE = SUB(B64:STANDLINE,1,LEN(CLIP(B64:STANDLINE))-1) & CHR(13) & CHR(10)
      ADD(XMLBase64File,LEN(CLIP(B64:STANDLINE)))

      LOOP I = 1 TO RECORDS(LocalQueue)
        GET(LocalQueue,I)
          CLEAR(B64:STANDLINE)

          LOOP J = 1 to TotalColumns
             Execute J
             UseValue = clip(F1)
             UseValue = clip(F2)
             UseValue = clip(F3)
             UseValue = clip(F4)
             UseValue = clip(F5)
             UseValue = clip(F6)
             UseValue = clip(F7)
             UseValue = clip(F8)
             UseValue = clip(F9)
             UseValue = clip(F10)
             UseValue = clip(F11)
             UseValue = clip(F12)
             UseValue = clip(F13)
             UseValue = clip(F14)
             UseValue = clip(F15)
             UseValue = clip(F16)
             UseValue = clip(F17)
             UseValue = clip(F18)
             UseValue = clip(F19)
             UseValue = clip(F20)
             UseValue = clip(F21)
             UseValue = clip(F22)
             UseValue = clip(F23)
             UseValue = clip(F24)
             UseValue = clip(F25)
             UseValue = clip(F26)
             UseValue = clip(F27)
             UseValue = clip(F28)
             UseValue = clip(F29)
             UseValue = clip(F30)
             UseValue = clip(F31)
             UseValue = clip(F32)
             UseValue = clip(F33)
             UseValue = clip(F34)
             UseValue = clip(F35)
             UseValue = clip(F36)
             UseValue = clip(F37)
             UseValue = clip(F38)
             UseValue = clip(F39)
             UseValue = clip(F40)
             UseValue = clip(F41)
             UseValue = clip(F42)
             UseValue = clip(F43)
             UseValue = clip(F44)
             UseValue = clip(F45)
             UseValue = clip(F46)
             UseValue = clip(F47)
             UseValue = clip(F48)
             UseValue = clip(F49)
             UseValue = clip(F50)
             end
             get(MyQueuePictures,j)
             if PictureString <> ''
                UseValue = format(UseValue,PictureString)
                UseValue = left(UseValue)
                UseValue = clip(UseValue)
             end
             if j = 1
               B64:standline = chr(34) & UseValue & CHR(34)
            else
               B64:standline = clip(B64:standline) & ',' & chr(34) & UseValue & CHR(34)
            end
          end
          B64:standline=CLIP(B64:standline) & CHR(13) & CHR(10)
          ADD(XMLBase64File,LEN(CLIP(B64:STANDLINE)))
       END
     CLOSE(XMLBase64File)
     if message('File IQXMLResults.csv exported to CSV file.||Do you want to open it with Excel now?','Exported',icon:question,button:YES+button:NO) = button:YES
        OPN = 'open'        ! set value
        NSTR = ''           ! set to NULL
        UrltoCall='IQXMLResults.csv'
        ShellExecute(GetDesktopWindow(),OPN,UrltoCall,NSTR,NSTR,5)
     end
  else
     message('Cannot create IQXMLResults.csv file at this time.||Error: ' & error(),'Error!',icon:exclamation)
  end



[SOURCE]
PROPERTY:BEGIN
PRIORITY 9950
PROPERTY:END
FindIt  ROUTINE

 SI = CurrentLineNumber

 LOOP
  foundIt = false
  if ssi = 0 then ssi = 1.

  LOOP Fi = si to records(LocalQueue)
       get(LocalQueue,fi)

       loop ci = ssi to 50
          execute Ci
          Reffield = f1
          Reffield = f2
          Reffield = f3
          Reffield = f4
          Reffield = f5
          Reffield = f6
          Reffield = f7
          Reffield = f8
          Reffield = f9
          Reffield = f10
          Reffield = f11
          Reffield = f12
          Reffield = f13
          Reffield = f14
          Reffield = f15
          Reffield = f16
          Reffield = f17
          Reffield = f18
          Reffield = f19
          Reffield = f20
          Reffield = f21
          Reffield = f22
          Reffield = f23
          Reffield = f24
          Reffield = f25
          Reffield = f26
          Reffield = f27
          Reffield = f28
          Reffield = f29
          Reffield = f30
          Reffield = f31
          Reffield = f32
          Reffield = f33
          Reffield = f34
          Reffield = f35
          Reffield = f36
          Reffield = f37
          Reffield = f38
          Reffield = f39
          Reffield = f40
          Reffield = f41
          Reffield = f42
          Reffield = f43
          Reffield = f44
          Reffield = f45
          Reffield = f46
          Reffield = f47
          Reffield = f48
          Reffield = f49
          Reffield = f50
          end
          if instring(upper(clip(FindInQueue)),upper(clip(refField)),1,1)
             foundit = true
             break
          end
      end
      if foundit then break.
      SSI = 1
  end

  if foundit = true
     SELECT(?List1,fi)
     CHANGE(?CurrentLineNumber,choice(?List1))
     ssi = CI + 1
     BREAK
  else
     if MESSAGE('"' & clip(FindInQueue) & '" not found.||Do you want to continue searching from the beginning?','Not Found',ICON:Question,button:OK+Button:cancel) = BUTTON:CANCEL
        BREAK
     ELSE
        si = 1
        SSI = 1
     END
  end
END

[END]
EMBED %AfterControlsSetup
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  getPointer = pointer(PassQueue)

  Do ResizeIt
  Do LoadFields
  Do HideFields

  DO Repicture

  IF RECORDS(LocalQueue)
      CurrentLineNumber =   GetPointer
      ?list1{prop:selected} = CurrentLineNumber
      DO SyncQueue
  END

  SETCURSOR()
[END]
EMBED %WindowEventHandling
[INSTANCES]
WHEN 'DoResize'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Do ResizeIt
[END]
WHEN 'GainFocus'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  Do StopDragging
[END]
[END]
EMBED %BeforeWindowClosing
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    xmll:SaveWindow('DebugMyQueue')
    PUTREG(REG_LOCAL_MACHINE,'SOFTWARE\IQXML\DebugMyQueue','s1', s1)
[END]
[END]
[ADDITION]
NAME Clarion CloseCurrentWindow
[INSTANCE]
INSTANCE 1
[WINDOW]
Window  WINDOW('Debug Queue'),AT(,,458,259),FONT('Tahoma',8,,FONT:regular),RESIZE,CENTER,ICON('iqxml.ico'), |
          GRAY,IMM,MAX,SYSTEM
          LIST,AT(3,3,451,113),USE(?List1),HVSCROLL,GRID(COLOR:Silver),FORMAT('100L(2)|M~' & |
            'f 1~@s128@140L(2)|M~f 2~@s128@140L(2)|M~f 3~@s128@140L(2)|M~f 4~@s128@140L' & |
            '(2)|M~f 5~@s128@140L(2)|M~f 6~@s128@140L(2)|M~f 7~@s128@140L(2)|M~f 8~@s12' & |
            '8@80L(2)|M~f 9~@s128@140L(2)|M~f 10~@s128@140L(2)|M~f 11~@s128@140L(2)|M~f' & |
            ' 12~@s128@140L(2)|M~f 13~@s128@140L(2)|M~f 14~@s128@140L(2)|M~f 15~@s128@1' & |
            '40L(2)|M~f 16~@s128@140L(2)|M~f 17~@s128@140L(2)|M~f 18~@s128@140L(2)|M~f ' & |
            '19~@s128@140L(2)|M~f 20~@s128@140L(2)|M~f 21~@s128@140L(2)|M~f 22~@s128@14' & |
            '0L(2)|M~f 23~@s128@140L(2)|M~f 24~@s128@140L(2)|M~f 25~@s158@512L(2)|M~f 2' & |
            '6~@s128@512L(2)|M~f 27~@s128@512L(2)|M~f 28~@s128@512L(2)|M~f 29~@s128@512' & |
            'L(2)|M~f 30~@s128@512L(2)|M~f 31~@s128@512L(2)|M~f 32~@s128@508L(2)|M~f 33' & |
            '~@s127@508L(2)|M~f 34~@s127@508L(2)|M~f 35~@s127@508L(2)|M~f 36~@s127@508L' & |
            '(2)|M~f 37~@s127@508L(2)|M~f 38~@s127@508L(2)|M~f 39~@s127@508L(2)|M~f 40~' & |
            '@s127@508L(2)|M~F 41~@s127@508L(2)|M~F 42~@s127@508L(2)|M~F 43~@s127@508L(' & |
            '2)|M~F 44~@s127@508L(2)|M~F 45~@s127@508L(2)|M~F 46~@s127@508L(2)|M~F 47~@' & |
            's127@508L(2)|M~F 48~@s127@508L(2)|M~F 49~@s127@508L(2)|M~F 50~@s127@'),FROM(LocalQueue), |
            #FIELDS(f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11,f12,f13,f14,f15,f16,f17,f18,f19,f20, |
            f21,f22,f23,f24,f25,f26,f27,f28,f29,f30,f31,f32,f33,f34,f35,f36,f37,f38,f39,f40, |
            F41,F42,F43,F44,F45,F46,F47,F48,F49,F50),#ORIG(?List1),#ORDINAL(1)
          LIST,AT(3,123,451,112),USE(?List2),VSCROLL,ALRT(MouseLeft),GRID(COLOR:Silver),FORMAT('15R(2)|M~I' & |
            'D~R(1)@s5@117L(2)|M~Field~@s50@1020L(2)|M~Value~@s255@/'),FROM(ExpandQueue),#FIELDS(OrigOrder, |
            Fielda,Fieldb),#ORIG(?List2),#ORDINAL(2)
          SPIN(@s7),AT(28,240,44,12),USE(CurrentLineNumber),RANGE(1,320000),STEP(1),#ORIG(CurrentLineNumber), |
            #ORDINAL(3)
          REGION,AT(4,116,449,6),USE(?PANEL1),CURSOR(CURSOR:SizeNS),IMM,#ORDINAL(4)
          ENTRY(@s35),AT(77,240,131,12),USE(FindInQueue),#ORDINAL(5)
          BUTTON,AT(210,239,16,14),USE(?Findb),KEY(F3Key),ICON('FIND.ICO'),SKIP,#ORDINAL(6)
          BUTTON('&Field Pictures'),AT(255,239,64,14),USE(?Pictures),#ORIG(?Button3),#ORDINAL(7)
          BUTTON('&Export'),AT(323,239,64,14),USE(?Export),#ORIG(?Button2),#ORDINAL(8)
          BUTTON('Cl&ose'),AT(391,239,64,14),USE(?OkButton),#ORDINAL(9)
          BUTTON,AT(230,239,21,14),USE(?DatePictures),ICON('avail3.ico'),SKIP,TIP('Automatica' & |
            'lly set Date Fields'),#ORIG(?Pictures),#ORDINAL(10)
          BUTTON,AT(2,239,21,14),USE(?Bookmarked),ICON('bookmark.ico'),SKIP,TIP('Bookmark Row'), |
            #ORIG(?DatePictures),#ORDINAL(11)
        END

[PROCEDURE]
NAME XML:SkipDebug
PROTOTYPE '(BYTE)'
PARAMETERS '(InParm)'
[COMMON]
FROM Clarion Source
MODIFIED '2006/02/28' '10:57:09'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  Glo:_XML_SkipDebug = InParm
  RETURN
[END]
[END]
[PROCEDURE]
NAME XML:ViewFile
PROTOTYPE '(STRING)'
PARAMETERS '(InFile)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/17' '11:56:34'
[DATA]
[SCREENCONTROLS]
! ENTRY(@s127),USE(Opn)
[REPORTCONTROLS]
! STRING(@s127),USE(Opn)
Opn                      CSTRING(128)
!!> GUID('361bde89-47d2-4469-b80b-cd49921ae431'),PICTURE(@s127)
[SCREENCONTROLS]
! ENTRY(@s19),USE(nstr)
[REPORTCONTROLS]
! STRING(@s19),USE(nstr)
nstr                     CSTRING(20)
!!> GUID('9d510019-a1ae-4e4b-ac83-79a5b8d0a499'),PICTURE(@s19)
[SCREENCONTROLS]
! ENTRY(@s19),USE(nstr2)
[REPORTCONTROLS]
! STRING(@s19),USE(nstr2)
nstr2                    CSTRING(20)
!!> GUID('b3e9364e-aa29-450a-bc54-41154ed5c594'),PROMPT('nstr:'),HEADER('nstr'),PICTURE(@s19)
[SCREENCONTROLS]
! TEXT,USE(URLToCall)
[REPORTCONTROLS]
! TEXT,USE(URLToCall)
URLToCall                CSTRING(1024)
!!> GUID('0e85a455-eba6-4c77-8de2-cf2d93476d60'),PICTURE(@s255)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
        OPN = 'open'        ! set value
        NSTR = ''           ! set to NULL
        NSTR2 = ''          ! set to NULL

        UrltoCall=CLIP(InFile)

        IF ShellExecute(GetDesktopWindow(),OPN,UrltoCall,NSTR,NSTR2,5) < 32
           if instring('.CSV',UPPER(UrltoCall),1,1) OR instring('.XLS',upper(UrltoCall),1,1)
              UrltoCall = GetReg(REG_CLASSES_ROOT,'Excel.CSV\shell\Open\command','')  &  ' ' & UrltoCall
           elsif instring('.XML',UPPER(UrltoCall),1,1) or instring('.HTML',UPPER(UrltoCall),1,1)
              UrltoCall = GetReg(REG_CLASSES_ROOT,'xslfile\shell\Open\command','')  &  ' ' & UrltoCall
           elsif instring('.TXT',UPPER(UrltoCall),1,1) or instring('.LOG',UPPER(UrltoCall),1,1)
              UrltoCall = 'NOTEPAD ' & UrltoCall
           ELSE
              IF EXISTS(URLTOCALL)
                 UrlToCall = 'EXPLORER.EXE ' & URLToCall
              END
           end
           UrltoCall = XML:Replace(UrltoCall,'/dde','')
           RUN(UrltoCall)
           IF ERRORCODE()
              MESSAGE('Cannot open file.||File: ' & UrltoCall,'Error Opening File',icon:Exclamation)
           END
        END


[END]
[END]
[PROCEDURE]
NAME XMLL:ShowFunctionError
PROTOTYPE '(STRING)'
PARAMETERS '(InFunction)'
NOEXPORT
[COMMON]
FROM Clarion Source
MODIFIED '2005/04/22' '18:40:31'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 MESSAGE('An exception error occurred.||Call: IQXML.DLL[' & InFunction & ']||Error: ' & ERROR(),'IQXML Exception Occurred',ICON:HAND)
[END]
[END]
[PROCEDURE]
NAME XML:CreateechoToken
PROTOTYPE '(),String'
PARAMETERS '()'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '17:11:37'
[DATA]
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG
!!> GUID('803741d7-2160-4dcc-9fcf-961a0ace6ff0'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('in:'),USE(?in:Prompt)
! ENTRY(@n-14),USE(in),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(in),RIGHT(1)
in                       LONG
!!> GUID('f606c4e6-cf8d-4427-bab0-a32c5f29412e'),PROMPT('in:'),HEADER('in'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Flip:'),USE(?Flip:Prompt)
! ENTRY(@n-14),USE(Flip),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(Flip),RIGHT(1)
Flip                     LONG
!!> GUID('20245e39-2aea-44ab-b76b-5a544229579d'),PROMPT('Flip:'),HEADER('Flip'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Use String:'),USE(?UseString:Prompt)
! ENTRY(@s39),USE(UseString)
[REPORTCONTROLS]
! STRING(@s39),USE(UseString)
UseString                CSTRING(40)
!!> GUID('baf0a453-4419-4352-9d3c-a5467b4abaf0'),PROMPT('Use String:'),HEADER('Use String'),PICTURE(@s39)
[SCREENCONTROLS]
! PROMPT('Use Chr:'),USE(?UseChr:Prompt)
! ENTRY(@s2),USE(UseChr)
[REPORTCONTROLS]
! STRING(@s2),USE(UseChr)
UseChr                   STRING(2)
!!> GUID('f11f0300-d75a-43db-aa68-ddb2e9e15d97'),PROMPT('Use Chr:'),HEADER('Use Chr'),PICTURE(@s2)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  loop i = 1 to 20
    if i = 5 or i = 8 or i = 11 or i = 14
       UseString = UseString &  '-'
    else
       if flip
          IN = random(1,127)
          flip =false
       else
          IN = random(128,255)
          flip = true
       end
       Usechr[1] = HexDigitsLow [BSHIFT(in, -4) + 1]
       Usechr[2] = HexDigitsLow [BAND(in, 0FH) + 1]
       UseString = UseString & UseChr
    end
  end

  UseString = CLIP(UseString)

  Return(UseString)
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
HexDigitsLow                    STRING('0123456789abcdef')
[END]
[END]
[PROCEDURE]
NAME XML:Replace
PROTOTYPE '(STRING,STRING,STRING,<<LONG>),STRING'
PARAMETERS '(OrigString,ReplaceText,ReplaceWith,<<StartingAt>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/25' '16:56:27'
[DATA]
[SCREENCONTROLS]
! PROMPT('In 1:'),USE(?In1:Prompt)
! TEXT,USE(In1)
[REPORTCONTROLS]
! TEXT,USE(In1)
In1                      CSTRING(64000),AUTO
!!> GUID('3de1b393-2017-49e2-b370-6165e5926275'),PROMPT('In 1:'),HEADER('In 1'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('R 1 Len:'),USE(?R1Len:Prompt)
! ENTRY(@n-14),USE(R1Len),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(R1Len),RIGHT(1)
R1Len                    LONG,AUTO
!!> GUID('20e6e6b7-9c81-4bf4-8811-e04aecb63de2'),PROMPT('R 1 Len:'),HEADER('R 1 Len'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('R 2 Len:'),USE(?R2Len:Prompt)
! ENTRY(@n-14),USE(R2Len),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(R2Len),RIGHT(1)
R2Len                    LONG,AUTO
!!> GUID('d134b1a2-6f21-4f82-8f9c-cd55291b6abf'),PROMPT('R 2 Len:'),HEADER('R 2 Len'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('6a39597c-9fca-4ccc-ba2b-01fb6229a8a8'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n-14),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(J),RIGHT(1)
J                        LONG
!!> GUID('29ccadbe-c2c1-455d-b7b9-3f5912476029'),PROMPT('J:'),HEADER('J'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Use Case:'),USE(?UseCase:Prompt)
! ENTRY(@n3),USE(UseCase)
[REPORTCONTROLS]
! STRING(@n3),USE(UseCase)
UseCase                  BYTE
!!> GUID('6f125518-6af6-421f-8955-0d7a8871789a'),PROMPT('Use Case:'),HEADER('Use Case'),PICTURE(@n3),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 In1 = OrigString

 R1Len  = len(ReplaceText)
 R2Len  = len(ReplaceWith)

 if ~omitted(4)
    J = StartingAt
    if j < 0
       UseCase = True
       j = 0
    end
 end
 if j = 0 then j = 1.

 LOOP
   if UseCase = True
      I = INSTRING(ReplaceText,IN1,1,J)
   else
      I = INSTRING(UPPER(ReplaceText),UPPER(IN1),1,J)
   end
   IF I = 0 THEN BREAK.

   if i > 1
      IN1 = IN1[1 : I-1] & ReplaceWith & SUB(IN1,I+R1LEN,64000)
   else
      IN1 = ReplaceWith & SUB(IN1,I+R1LEN,64000)
   end
   J = I+R2LEN
 END

 RETURN(IN1)

[END]
[END]
[PROCEDURE]
NAME XML:ReplaceNC
PROTOTYPE '(STRING,STRING,STRING),STRING'
PARAMETERS '(OrigString,ReplaceText,ReplaceWith)'
NOEXPORT
[COMMON]
FROM Clarion Source
MODIFIED '2016/03/31' '10:16:51'
[DATA]
[SCREENCONTROLS]
! PROMPT('In 1:'),USE(?In1:Prompt)
! TEXT,USE(In1)
[REPORTCONTROLS]
! TEXT,USE(In1)
In1                      CSTRING(10241),AUTO
!!> GUID('7f92c79f-c3a6-49f4-9fc6-52d4383f3a1f'),PROMPT('In 1:'),HEADER('In 1'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('R 1 Len:'),USE(?R1Len:Prompt)
! ENTRY(@n-14),USE(R1Len),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(R1Len),RIGHT(1)
R1Len                    LONG,AUTO
!!> GUID('c5b6c9d9-d508-437c-a380-8e7643658047'),PROMPT('R 1 Len:'),HEADER('R 1 Len'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('R 2 Len:'),USE(?R2Len:Prompt)
! ENTRY(@n-14),USE(R2Len),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(R2Len),RIGHT(1)
R2Len                    LONG,AUTO
!!> GUID('9d99ae7f-9e42-4a9b-bfc3-1c818c9d1086'),PROMPT('R 2 Len:'),HEADER('R 2 Len'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG,AUTO
!!> GUID('61648c63-c732-45c0-b45c-e3b8d44d7aaa'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n-14),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(J),RIGHT(1)
J                        LONG,AUTO
!!> GUID('cceefa69-084c-4714-abd6-8191c01b94f4'),PROMPT('J:'),HEADER('J'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 In1 = OrigString
 R1Len  = len(ReplaceText)
 R2Len  = len(ReplaceWith)

 J = 1

 LOOP
   I = INSTRING(ReplaceText,IN1,1,J)
   IF I = 0 THEN BREAK.

   if I > 1
      IN1 = IN1[1 : i-1] & ReplaceWith & SUB(IN1,I+R1LEN,10240)
   else
      IN1 = ReplaceWith & SUB(IN1,I+R1LEN,10240)
   end

   J = I+R2LEN
 END

 RETURN(IN1)

[END]
[END]
[PROCEDURE]
NAME XML:DebugMyQueuePic
PROTOTYPE '(STRING)'
PARAMETERS '(InTitle)'
NOEXPORT
[COMMON]
FROM Clarion Window
MODIFIED '2016/05/26' ' 9:44:50'
[DATA]
LocalRequest             LONG
!!> GUID('fe2c63bc-6381-41d5-9e36-7d12dc866df2')
OriginalRequest          LONG
!!> GUID('ee017402-82fa-47a8-beb9-20553bfab632')
LocalResponse            LONG
!!> GUID('838f21fc-faaa-4507-8331-7b4c4a0d2efa')
FilesOpened              LONG
!!> GUID('f0a4568a-8a0c-4837-acf4-0ecba6bd30b1')
WindowOpened             LONG
!!> GUID('e6ebf68f-4368-4a94-929b-b443f8d4b22f')
WindowInitialized        LONG
!!> GUID('eea61c68-710a-4135-85c3-984a0c38f635')
ForceRefresh             LONG
!!> GUID('77aadeb0-1ffd-4031-b68a-cad9b9dc3a66')
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('d7cf55de-c4d4-4524-8ae2-a89f701474fb'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[PROMPTS]
%ReturnValue FIELD  ()
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (1)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (1)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ButtonAction DEPEND %Control DEFAULT TIMES 12
WHEN  ('') ('No Special Action')
WHEN  ('?Button2') ('No Special Action')
WHEN  ('?Button2:2') ('No Special Action')
WHEN  ('?Button2:3') ('No Special Action')
WHEN  ('?Button2:4') ('No Special Action')
WHEN  ('?Button2:5') ('No Special Action')
WHEN  ('?Button2:6') ('No Special Action')
WHEN  ('?Button2:7') ('No Special Action')
WHEN  ('?Button2:8') ('No Special Action')
WHEN  ('?Button2:9') ('No Special Action')
WHEN  ('?List1') ('No Special Action')
WHEN  ('?OkButton') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 7
WHEN  ('?Button2:2') ('')
WHEN  ('?Button2:3') ('')
WHEN  ('?Button2:4') ('')
WHEN  ('?Button2:5') ('')
WHEN  ('?Button2:6') ('')
WHEN  ('?Button2:8') ('')
WHEN  ('?OkButton') ('')

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 7
WHEN  ('?Button2:2') ('')
WHEN  ('?Button2:3') ('')
WHEN  ('?Button2:4') ('')
WHEN  ('?Button2:5') ('')
WHEN  ('?Button2:6') ('')
WHEN  ('?Button2:8') ('')
WHEN  ('?OkButton') ('')

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 7
WHEN  ('?Button2:2') ()
WHEN  ('?Button2:3') ()
WHEN  ('?Button2:4') ()
WHEN  ('?Button2:5') ()
WHEN  ('?Button2:6') ()
WHEN  ('?Button2:8') ()
WHEN  ('?OkButton') ()

%ButtonThread DEPEND %Control LONG TIMES 7
WHEN  ('?Button2:2') (0)
WHEN  ('?Button2:3') (0)
WHEN  ('?Button2:4') (0)
WHEN  ('?Button2:5') (0)
WHEN  ('?Button2:6') (0)
WHEN  ('?Button2:8') (0)
WHEN  ('?OkButton') (0)

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 12
WHEN  ('') ('25000')
WHEN  ('?Button2') ('25000')
WHEN  ('?Button2:2') ('25000')
WHEN  ('?Button2:3') ('25000')
WHEN  ('?Button2:4') ('25000')
WHEN  ('?Button2:5') ('25000')
WHEN  ('?Button2:6') ('25000')
WHEN  ('?Button2:7') ('25000')
WHEN  ('?Button2:8') ('25000')
WHEN  ('?Button2:9') ('25000')
WHEN  ('?List1') ('25000')
WHEN  ('?OkButton') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 7
WHEN  ('?Button2:2') ('')
WHEN  ('?Button2:3') ('')
WHEN  ('?Button2:4') ('')
WHEN  ('?Button2:5') ('')
WHEN  ('?Button2:6') ('')
WHEN  ('?Button2:8') ('')
WHEN  ('?OkButton') ('')

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 7
WHEN  ('?Button2:2') ()
WHEN  ('?Button2:3') ()
WHEN  ('?Button2:4') ()
WHEN  ('?Button2:5') ()
WHEN  ('?Button2:6') ()
WHEN  ('?Button2:8') ()
WHEN  ('?OkButton') ()

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 7
WHEN  ('?Button2:2') (0)
WHEN  ('?Button2:3') (0)
WHEN  ('?Button2:4') (0)
WHEN  ('?Button2:5') (0)
WHEN  ('?Button2:6') (0)
WHEN  ('?Button2:8') (0)
WHEN  ('?OkButton') (0)

%ButtonRequest DEPEND %Control DEFAULT TIMES 12
WHEN  ('') ('None')
WHEN  ('?Button2') ('None')
WHEN  ('?Button2:2') ('None')
WHEN  ('?Button2:3') ('None')
WHEN  ('?Button2:4') ('None')
WHEN  ('?Button2:5') ('None')
WHEN  ('?Button2:6') ('None')
WHEN  ('?Button2:7') ('None')
WHEN  ('?Button2:8') ('None')
WHEN  ('?Button2:9') ('None')
WHEN  ('?List1') ('None')
WHEN  ('?OkButton') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 7
WHEN  ('?Button2:2') ('')
WHEN  ('?Button2:3') ('')
WHEN  ('?Button2:4') ('')
WHEN  ('?Button2:5') ('')
WHEN  ('?Button2:6') ('')
WHEN  ('?Button2:8') ('')
WHEN  ('?OkButton') ('')

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 7
WHEN  ('?Button2:2') ()
WHEN  ('?Button2:3') ()
WHEN  ('?Button2:4') ()
WHEN  ('?Button2:5') ()
WHEN  ('?Button2:6') ()
WHEN  ('?Button2:8') ()
WHEN  ('?OkButton') ()

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 0

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 0

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupDuringValidate DEPEND %Control LONG TIMES 9
WHEN  ('') (1)
WHEN  ('?Button2:2') (1)
WHEN  ('?Button2:3') (1)
WHEN  ('?Button2:4') (1)
WHEN  ('?Button2:5') (1)
WHEN  ('?Button2:6') (1)
WHEN  ('?Button2:8') (1)
WHEN  ('?List1') (1)
WHEN  ('?OkButton') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 9
WHEN  ('')TIMES 0
WHEN  ('?Button2:2')TIMES 0
WHEN  ('?Button2:3')TIMES 0
WHEN  ('?Button2:4')TIMES 0
WHEN  ('?Button2:5')TIMES 0
WHEN  ('?Button2:6')TIMES 0
WHEN  ('?Button2:8')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?OkButton')TIMES 0

%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 9
WHEN  ('')TIMES 0
WHEN  ('?Button2:2')TIMES 0
WHEN  ('?Button2:3')TIMES 0
WHEN  ('?Button2:4')TIMES 0
WHEN  ('?Button2:5')TIMES 0
WHEN  ('?Button2:6')TIMES 0
WHEN  ('?Button2:8')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?OkButton')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 9
WHEN  ('')TIMES 0
WHEN  ('?Button2:2')TIMES 0
WHEN  ('?Button2:3')TIMES 0
WHEN  ('?Button2:4')TIMES 0
WHEN  ('?Button2:5')TIMES 0
WHEN  ('?Button2:6')TIMES 0
WHEN  ('?Button2:8')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?OkButton')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 9
WHEN  ('')TIMES 0
WHEN  ('?Button2:2')TIMES 0
WHEN  ('?Button2:3')TIMES 0
WHEN  ('?Button2:4')TIMES 0
WHEN  ('?Button2:5')TIMES 0
WHEN  ('?Button2:6')TIMES 0
WHEN  ('?Button2:8')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?OkButton')TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 9
WHEN  ('') ('Default')
WHEN  ('?Button2:2') ('Default')
WHEN  ('?Button2:3') ('Default')
WHEN  ('?Button2:4') ('Default')
WHEN  ('?Button2:5') ('Default')
WHEN  ('?Button2:6') ('Default')
WHEN  ('?Button2:8') ('Default')
WHEN  ('?List1') ('Default')
WHEN  ('?OkButton') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 1
WHEN  ('') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 1
WHEN  ('') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('AIBtn0')

%AIEnableMimicControl DEPEND %Control LONG TIMES 1
WHEN  ('') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('?List1')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ControlPreEventHandling
[INSTANCES]
WHEN '?Button2'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
get(MyQueuePictures,choice(?List1))
if ~errorcode()
   PictureString='@d017b'
   put(MyQueuePictures)
end
[END]
[END]
WHEN '?Button2:2'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
get(MyQueuePictures,choice(?List1))
if ~errorcode()
   PictureString='@t07b'
   put(MyQueuePictures)
end
[END]
[END]
WHEN '?Button2:3'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
get(MyQueuePictures,choice(?List1))
if ~errorcode()
   PictureString='@s128'
   put(MyQueuePictures)
end
[END]
[END]
WHEN '?Button2:4'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
get(MyQueuePictures,choice(?List1))
if ~errorcode()
   PictureString='@n-16.2'
   put(MyQueuePictures)
end
[END]
[END]
WHEN '?Button2:5'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
get(MyQueuePictures,choice(?List1))
if ~errorcode()
   if ShowIt = 'Show'
      ShowIt = 'Hide'
   else
      ShowIt = 'Show'
   end
   put(MyQueuePictures)
end
?List1{prop:selected} = ?List1{prop:selected} + 1
[END]
[END]
WHEN '?Button2:6'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
LOOP I = 1 TO RECORDS(MyQueuePictures)
  GET(MyQueuePictures,I)
  ShowIt='Show'
  put(MyQueuePictures)
end
[END]
[END]
WHEN '?Button2:7'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
LOOP I = 1 TO RECORDS(MyQueuePictures)
  GET(MyQueuePictures,I)
  ShowIt='Hide'
  put(MyQueuePictures)
end
[END]
[END]
WHEN '?Button2:8'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
get(MyQueuePictures,choice(?List1))
if ~errorcode()
   XML:DebugMyQueuePic2()
   get(MyQueuePictures,choice(?List1))
   display()
end
[END]
[END]
WHEN '?Button2:9'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
get(MyQueuePictures,choice(?List1))
if ~errorcode()
   PictureString='@d010-b'
   put(MyQueuePictures)
end
[END]
[END]
[END]
EMBED %PrepareAlerts
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
WINDOW{PROP:TEXT}  = CLIP(Intitle) & ' - [Field Pictures]'
?list1{prop:selected} = 1
[END]
[END]
[WINDOW]
Window  WINDOW('DebugMyQueue - Field Pictures'),AT(,,371,254),FONT('Tahoma',8,,FONT:regular), |
          DOUBLE,CENTER,GRAY,IMM,SYSTEM
          LIST,AT(3,6,292,240),USE(?List1),VSCROLL,GRID(COLOR:Silver),FORMAT('163L(2)|M~' & |
            'Field~@s32@76L(2)|M~Picture~@s20@16L(2)|M~Show~@s4@'),FROM(MyQueuePictures),#FIELDS(FieldNames, |
            PictureString,ShowIt),#ORIG(?List1),#ORDINAL(1)
          BUTTON('Cl&ose'),AT(301,7,61,14),USE(?OkButton),DEFAULT,STD(STD:Close),#ORDINAL(2)
          BUTTON('Set as &Date'),AT(301,34,61,14),USE(?Button2),#ORIG(?Button2),#ORDINAL(3)
          BUTTON('Set as &ISO'),AT(301,52,61,14),USE(?Button2:9),#ORIG(?Button2),#ORDINAL(10000)
          BUTTON('Set as &Time'),AT(301,70,61,14),USE(?Button2:2),#ORIG(?Button2),#ORDINAL(4)
          BUTTON('Set as Strin&g'),AT(301,87,61,14),USE(?Button2:3),#ORIG(?Button2:2),#ORDINAL(5)
          BUTTON('Set as &Money'),AT(301,105,61,14),USE(?Button2:4),#ORIG(?Button2:3),#ORDINAL(6)
          BUTTON('Set as ...'),AT(301,123,61,14),USE(?Button2:8),#ORIG(?Button2:4),#ORDINAL(7)
          BUTTON('Show &All'),AT(301,217,61,14),USE(?Button2:6),#ORIG(?Button2:5),#ORDINAL(8)
          BUTTON('&Hide All'),AT(301,234,61,14),USE(?Button2:7),#ORIG(?Button2:6),#ORDINAL(9)
          BUTTON('&Show/Hide'),AT(301,176,61,38),USE(?Button2:5),ICON('ctfind.ico'),#ORIG(?Button2:4), |
            #ORDINAL(10)
        END

[PROCEDURE]
NAME XML:DebugMyQueuePic2
[COMMON]
FROM Clarion Window
MODIFIED '2011/05/05' '16:51:33'
[DATA]
LocalRequest             LONG
!!> GUID('d6484c7d-9733-466a-b3fa-6dd4dc9b969d')
OriginalRequest          LONG
!!> GUID('ebaf3648-3011-477a-9710-d04cd66bd3f3')
LocalResponse            LONG
!!> GUID('851efdd1-189a-42fe-9335-534b432f08a0')
FilesOpened              LONG
!!> GUID('76916c60-27a5-4159-96da-3f18a501e20d')
WindowOpened             LONG
!!> GUID('90edd293-2a2c-422a-af07-fb394075b0ad')
WindowInitialized        LONG
!!> GUID('11bf728b-6f32-4ef9-b8c4-bdaa7f913cdb')
ForceRefresh             LONG
!!> GUID('e432b5a7-44b3-4189-81d3-8b3ce0669507')
[PROMPTS]
%ReturnValue FIELD  ()
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (1)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (1)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ButtonAction DEPEND %Control DEFAULT TIMES 4
WHEN  ('') ('No Special Action')
WHEN  ('?CancelButton') ('No Special Action')
WHEN  ('?OkButton') ('No Special Action')
WHEN  ('?PictureString') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 2
WHEN  ('?CancelButton') ('')
WHEN  ('?OkButton') ('')

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?CancelButton') ('')
WHEN  ('?OkButton') ('')

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 2
WHEN  ('?CancelButton') ()
WHEN  ('?OkButton') ()

%ButtonThread DEPEND %Control LONG TIMES 2
WHEN  ('?CancelButton') (0)
WHEN  ('?OkButton') (0)

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 4
WHEN  ('') ('25000')
WHEN  ('?CancelButton') ('25000')
WHEN  ('?OkButton') ('25000')
WHEN  ('?PictureString') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?CancelButton') ('')
WHEN  ('?OkButton') ('')

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 2
WHEN  ('?CancelButton') ()
WHEN  ('?OkButton') ()

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 2
WHEN  ('?CancelButton') (0)
WHEN  ('?OkButton') (0)

%ButtonRequest DEPEND %Control DEFAULT TIMES 4
WHEN  ('') ('None')
WHEN  ('?CancelButton') ('None')
WHEN  ('?OkButton') ('None')
WHEN  ('?PictureString') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?CancelButton') ('')
WHEN  ('?OkButton') ('')

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 2
WHEN  ('?CancelButton') ()
WHEN  ('?OkButton') ()

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 1
WHEN  ('?PictureString') ()

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 1
WHEN  ('?PictureString') ()

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 1
WHEN  ('?PictureString') ('')

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 1
WHEN  ('?PictureString') ()

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 1
WHEN  ('?PictureString') ()

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 1
WHEN  ('?PictureString') ('')

%PostLookupDuringValidate DEPEND %Control LONG TIMES 4
WHEN  ('') (1)
WHEN  ('?CancelButton') (1)
WHEN  ('?OkButton') (1)
WHEN  ('?PictureString') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 4
WHEN  ('')TIMES 0
WHEN  ('?CancelButton')TIMES 0
WHEN  ('?OkButton')TIMES 0
WHEN  ('?PictureString')TIMES 0

%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 4
WHEN  ('')TIMES 0
WHEN  ('?CancelButton')TIMES 0
WHEN  ('?OkButton')TIMES 0
WHEN  ('?PictureString')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 4
WHEN  ('')TIMES 0
WHEN  ('?CancelButton')TIMES 0
WHEN  ('?OkButton')TIMES 0
WHEN  ('?PictureString')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 4
WHEN  ('')TIMES 0
WHEN  ('?CancelButton')TIMES 0
WHEN  ('?OkButton')TIMES 0
WHEN  ('?PictureString')TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 4
WHEN  ('') ('Default')
WHEN  ('?CancelButton') ('Default')
WHEN  ('?OkButton') ('Default')
WHEN  ('?PictureString') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 1
WHEN  ('') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 1
WHEN  ('') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('AIBtn0')

%AIEnableMimicControl DEPEND %Control LONG TIMES 1
WHEN  ('') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('?PictureString:Prompt')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ControlPreEventHandling
[INSTANCES]
WHEN '?OkButton'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3600
PROPERTY:END
put(MyQueuePictures)
[GROUP]
PRIORITY 4000
INSTANCE 1
[END]
[END]
WHEN '?CancelButton'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[GROUP]
PRIORITY 4000
INSTANCE 2
[END]
[END]
[END]
[END]
[ADDITION]
NAME Clarion CloseCurrentWindow
[INSTANCE]
INSTANCE 1
[INSTANCE]
INSTANCE 2
[WINDOW]
Window  WINDOW('Set Field Picture'),AT(,,180,59),FONT('Tahoma',8,,FONT:regular),DOUBLE,CENTER, |
          GRAY,IMM,SYSTEM
          PROMPT('Picture String:'),AT(11,12),USE(?PictureString:Prompt),#LINK(?PictureString), |
            #ORIG(?PictureString:Prompt)
          ENTRY(@s20),AT(63,12,103,12),USE(PictureString),#LINK(?PictureString:Prompt),#ORIG(PictureString)
          BUTTON('&OK'),AT(71,36,45,14),USE(?OkButton),DEFAULT
          BUTTON('&Cancel'),AT(121,36,45,14),USE(?CancelButton)
        END

[PROCEDURE]
NAME XML:Extract
PROTOTYPE '(STRING,STRING,STRING,*CSTRING,<<*CSTRING>,<<*CSTRING>,LONG,BYTE),LONG'
PARAMETERS '(in1,in2,in3,out1,<<out2>,<<out3>,StartPos,OnlyBetween)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '16:39:47'
[DATA]
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG
!!> GUID('53a25ec0-32f2-471f-947f-84cb2a570150'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('j:'),USE(?j:Prompt)
! ENTRY(@n-14),USE(j),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(j),RIGHT(1)
j                        LONG
!!> GUID('76f9e88a-0111-4778-bd68-89a68ba70be3'),PROMPT('j:'),HEADER('j'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('k:'),USE(?k:Prompt)
! ENTRY(@n-14),USE(k),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(k),RIGHT(1)
k                        LONG
!!> GUID('dfbad40b-82a2-4446-895b-dd11b71ba169'),PROMPT('k:'),HEADER('k'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Len 1:'),USE(?Len1:Prompt)
! ENTRY(@n-14),USE(Len1),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(Len1),RIGHT(1)
Len1                     LONG,AUTO
!!> GUID('2db8f550-8cfb-4a6c-b56f-5b900154a69e'),PROMPT('Len 1:'),HEADER('Len 1'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Len 2:'),USE(?Len2:Prompt)
! ENTRY(@n-14),USE(Len2),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(Len2),RIGHT(1)
Len2                     LONG,AUTO
!!> GUID('3baee038-86bb-4646-8fbf-819e3602943e'),PROMPT('Len 2:'),HEADER('Len 2'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Len 3:'),USE(?Len3:Prompt)
! ENTRY(@n-14),USE(Len3),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(Len3),RIGHT(1)
Len3                     LONG,AUTO
!!> GUID('2121d593-49fd-4bf6-a61a-b6bcf2354e56'),PROMPT('Len 3:'),HEADER('Len 3'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Return Value:'),USE(?ReturnValue:Prompt)
! ENTRY(@n-14),USE(ReturnValue),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ReturnValue),RIGHT(1)
ReturnValue              LONG
!!> GUID('5febd731-a922-46fd-ab00-23947cccfbd6'),PROMPT('Return Value:'),HEADER('Return Value'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  Len1 = len(in1)
  Len2 = len(in2)
  Len3 = len(in3)

  if len1 = 0 or len3 = 0 or startpos < 1
     returnValue = -1
  else
     Do GetText
  end

  RETURN(ReturnValue)


GetText ROUTINE

  i = instring(in1,in3,1,startpos)
  if i
     ! IF EXTRACTING ONLY LEFT/RIGHT
     if len2 = 0
        returnValue=I
        out1 = in1
        if i = 1
           if not omitted(5) then out2 = ''.
        else
           if not omitted(5) then Out2 = in3[1 : i-1].
        end
        I=I+len(in1)
        if not omitted(6) then out3 = in3[i : len3].
        EXIT
     else
        k = I + len(IN1)
        j = instring(in2,in3,1,k)
     end
  end

  if i = 0 or j = 0
     out1=''
     if not omitted(5) then out2=in1.
     if not omitted(6) then out3=''.
     EXIT
  end

  ReturnValue = I

  ! Pull Variable
  i = j + Len2 - 1
  Out1 = in3[ReturnValue : i]

  ! Pull Left Side
  if ReturnValue > 1
     i = ReturnValue - 1
     if not omitted(5) then Out2 = in3[1 : i].
  else
     if not omitted(5) then Out2 = ''.
  end

  ! Pull right Side
  ! ---------------
  if len2 = 0
     if not omitted(6) then Out3 = ''.
  else
     i = j + len2
     if i <= len3
        if not omitted(6) then Out3 = in3[i : len3].
     else
        if not omitted(6) then Out3 = ''.
     end
  end

  if OnlyBetween = True
     i = len1+1
     j = len(out1) - len2
     Out1 = Out1[i : j]
  end

[END]
[END]
[PROCEDURE]
NAME XML:DebugMyQueue2
PROTOTYPE '(STRING)'
PARAMETERS '(InField)'
NOEXPORT
[COMMON]
FROM Clarion Window
MODIFIED '2016/05/26' ' 9:43:38'
[DATA]
LocalRequest             LONG
!!> GUID('9851295a-b433-462a-a2bb-770d384b635d')
OriginalRequest          LONG
!!> GUID('7506ad6d-b214-4f37-a9f2-832273de7909')
LocalResponse            LONG
!!> GUID('2183b036-d20f-4993-a3fb-a0b1278e0c4c')
FilesOpened              LONG
!!> GUID('3e90553c-f016-4d71-96cc-099301581624')
WindowOpened             LONG
!!> GUID('539e41d4-2305-45d1-9a78-535200cb31f2')
WindowInitialized        LONG
!!> GUID('8c7550db-1626-4da9-be20-c227902e7c40')
ForceRefresh             LONG
!!> GUID('fbd07f5a-f031-4e28-a36a-4eb764f228bd')
[SCREENCONTROLS]
! PROMPT('Local Value:'),USE(?LocalValue:Prompt)
! ENTRY(@s255),USE(LocalValue)
[REPORTCONTROLS]
! STRING(@s255),USE(LocalValue)
LocalValue               STRING(1024)
!!> GUID('cae5a5d1-d38a-46f3-a331-f6c49aac7149'),PROMPT('Local Value:'),HEADER('Local Value'),PICTURE(@s255),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('ASCC hart:'),USE(?ASCChart:Prompt)
! ENTRY(@s255),USE(ASCChart)
[REPORTCONTROLS]
! STRING(@s255),USE(ASCChart)
ASCChart                 CSTRING(5000)
!!> GUID('d24dc59b-3a35-43f1-8cef-9425ad7962f0'),PROMPT('ASCC hart:'),HEADER('ASCC hart'),PICTURE(@s255),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG
!!> GUID('ce5d432b-a19a-4293-a1e0-3b2c058041d4'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%ReturnValue FIELD  ()
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (1)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (1)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ButtonAction DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('No Special Action')
WHEN  ('?LocalValue') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 0

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 0

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 0

%ButtonThread DEPEND %Control LONG TIMES 0

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('25000')
WHEN  ('?LocalValue') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 0

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 0

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 0

%ButtonRequest DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('None')
WHEN  ('?LocalValue') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 0

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 0

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 0

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 0

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupDuringValidate DEPEND %Control LONG TIMES 2
WHEN  ('') (1)
WHEN  ('?LocalValue') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?LocalValue')TIMES 0

%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?LocalValue')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?LocalValue')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?LocalValue')TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Default')
WHEN  ('?LocalValue') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 1
WHEN  ('') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 1
WHEN  ('') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('AIBtn0')

%AIEnableMimicControl DEPEND %Control LONG TIMES 1
WHEN  ('') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('?LocalValue')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %AfterWindowOpening
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    LocalValue = InField
    LOOP I = 1 TO LEN(clip(LocalValue))
        ASCChart = ASCChart & format(val(localvalue[i]),@n03) & ' '
     end
[END]
EMBED %PostWindowEventHandling
[INSTANCES]
WHEN 'DoResize'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  I = WINDOW{prop:height} / 2

  setposition(?LocalValue,,,WINDOW{PROP:WIDTH}-3,i)
  setposition(?ASCChart,,i+3,WINDOW{PROP:WIDTH}-3,i-4)
[END]
[END]
[END]
[WINDOW]
Window  WINDOW('Expand Field'),AT(,,395,209),FONT('Tahoma',8),RESIZE,CENTER,GRAY,IMM,SYSTEM
          TEXT,AT(1,1,394,102),USE(LocalValue),FONT('Courier New',11),VSCROLL,READONLY,#ORDINAL(1)
          TEXT,AT(2,106,393,102),USE(ASCChart),FONT('Courier New',11),VSCROLL,COLOR(00F0FFFFh), |
            READONLY,#ORDINAL(2)
        END

[END]
[MODULE]
[COMMON]
DESCRIPTION 'Mouse Functions'
FROM Clarion GENERATED
MODIFIED '2005/04/29' '14:33:26'
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME XMLL:Initiate
PROTOTYPE '(<<SHORT>),SHORT'
PARAMETERS '(<<ListControl>)'
NOEXPORT
[COMMON]
FROM Clarion Source
MODIFIED '2012/03/23' '16:16:42'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  if ListControl > 0
     ListControl{proplist:backcolor,1} = 0EFEFEFH
  end
  Return(CREATE(0,CREATE:REGION,0,1))
[END]
[END]
[PROCEDURE]
NAME XMLL:MouseDown
PROTOTYPE '(SHORT,SHORT,<<BYTE>),SHORT'
PARAMETERS '(RegionControl,ListControl,<<AddColor>)'
NOEXPORT
[COMMON]
FROM Clarion Source
MODIFIED '2012/03/23' '16:22:22'
[DATA]
[SCREENCONTROLS]
! PROMPT('Loc : By Pixels:'),USE(?Loc:ByPixels:Prompt)
! ENTRY(@n-7),USE(Loc:ByPixels),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(Loc:ByPixels),RIGHT(1)
Loc:ByPixels             SHORT,AUTO
!!> GUID('afa0f6a5-23b6-4ca3-af34-cf2cea416c43'),PROMPT('Loc : By Pixels:'),HEADER('Loc : By Pixels'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Loc : Current Field:'),USE(?Loc:CurrentField:Prompt)
! ENTRY(@n-7),USE(Loc:CurrentField),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(Loc:CurrentField),RIGHT(1)
Loc:CurrentField         SHORT,AUTO
!!> GUID('563c1139-3605-4bf9-9ed3-d089e19b58c1'),PROMPT('Loc : Current Field:'),HEADER('Loc : Current Field'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Loc : XP os:'),USE(?Loc:XPos:Prompt)
! ENTRY(@n-7),USE(Loc:XPos),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(Loc:XPos),RIGHT(1)
Loc:XPos                 SHORT,AUTO
!!> GUID('5d1f6d75-f97b-4a64-ba38-7d158ec0f344'),PROMPT('Loc : XP os:'),HEADER('Loc : XP os'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-7),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(I),RIGHT(1)
I                        SHORT,AUTO
!!> GUID('46e63320-aa7c-486a-a210-ee147030ad0e'),PROMPT('I:'),HEADER('I'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
IF KEYCODE() =  MouseLeft or KEYCODE() = MouseRight
    IF (INRANGE(MOUSEX(),ListControl{PROP:XPos},ListControl{PROP:XPos}+ListControl{PROP:Width}-1) AND |
        INRANGE(MOUSEY(),ListControl{PROP:YPos},ListControl{PROP:YPos}+ListControl{PROP:HeaderHeight}-1) AND |
        ListControl{PROP:Visible} AND ListControl{PROPLIST:MouseDownZone} <> LISTZONE:Right|
        AND ListControl{PROPLIST:MouseDownField}>0)

          Loc:byPixels = 0{PROP:Pixels}
          0{PROP:Pixels} = True

          Loc:CurrentField = ListControl{PROPLIST:MouseDownField}
          Loc:XPos         = ListControl{PROP:At,1}

          LOOP I = (ListControl{PROP:HScrollPos} + 1) TO (Loc:CurrentField-1)
               Loc:XPos += ListControl{PROPLIST:Width,I} + 1
          END

          if RegionControl = 0
             MESSAGE('No Region Control Defined!','Error!',ICON:HAND)
             Return(0)
          end

          RegionControl{Prop:Height} = ListControl{PROP:HeaderHeight}
          RegionControl{Prop:Width}  = ListControl{PROPLIST:Width,Loc:CurrentField} - 1
          RegionControl{Prop:At,1}   = Loc:XPos
          RegionControl{Prop:At,2}   = ListControl{Prop:At,2} + 1

          if Loc:XPos + RegionControl{Prop:Width} > ListControl{PROP:XPos} + ListControl{PROP:Width}
             RegionControl{Prop:Width} = ListControl{Prop:Width} - Loc:Xpos + ListControl{PROP:AT,1}
          End

          RegionControl{prop:BevelInner} = -1
          RegionControl{prop:BevelOuter} = -1
          RegionControl{prop:Disable} = False
          RegionControl{prop:Imm} = True
          RegionControl{prop:Hide} = False
          Display(RegionControl)

          0{PROP:Pixels} = LOC:byPixels
          if keycode() = MouseLeft
             Do ColorColumns
             RETURN(Loc:CurrentField)          ! Return Field Number
          else
             RETURN(Loc:CurrentField * -1)     ! Return Field Number
          end
       END
  END
  RETURN(0)                            ! Cycle other Click Events



ColorColumns    ROUTINE

 if AddColor = True
    LOOP I = 1 TO 32
       IF ListControl{PROPLIST:Header} = '' THEN BREAK.
       ListControl{proplist:backcolor,i} = COLOR:NONE
    END
    ListControl{proplist:backcolor,LOC:CurrentField} = 0EFEFEFH
 end

[END]
[END]
[PROCEDURE]
NAME XMLL:MouseUp
PROTOTYPE '(Short)'
PARAMETERS '(RegionControl)'
NOEXPORT
[COMMON]
FROM Clarion Source
MODIFIED '2012/03/23' '16:15:54'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  HIDE(RegionControl)
[END]
[END]
[END]
[MODULE]
[COMMON]
DESCRIPTION 'Write Functions'
FROM Clarion GENERATED
MODIFIED '2015/06/13' '17:31:15'
[DATA]
[SCREENCONTROLS]
! PROMPT('XMLS tructure:'),USE(?XMLStructure:Prompt)
! ENTRY(@s50),USE(XMLStructure)
[REPORTCONTROLS]
! STRING(@s50),USE(XMLStructure)
XMLStructure             QUEUE,PRE(MQUE),THREAD
!!> GUID('cc6504fd-7f74-4e5f-875e-73d3558715d9'),PROMPT('XMLS tructure:'),HEADER('XMLS tructure'),PICTURE(@s50)
[SCREENCONTROLS]
! PROMPT('Field Name:'),USE(?MQUE:FieldName:Prompt)
! ENTRY(@s50),USE(MQUE:FieldName)
[REPORTCONTROLS]
! STRING(@s50),USE(MQUE:FieldName)
FieldName                  CSTRING(129)
!!> GUID('e24252df-b6fd-41a2-82e7-34bd163e3b57'),PROMPT('Field Name:'),HEADER('Field Name'),PICTURE(@s50)
                         END
!!> GUID('ac8e86c7-efcd-4925-941a-867766ff56ef')
[SCREENCONTROLS]
! PROMPT('Attrib Structure:'),USE(?AttribStructure:Prompt)
! ENTRY(@s255),USE(AttribStructure)
[REPORTCONTROLS]
! STRING(@s255),USE(AttribStructure)
AttribStructure          QUEUE,PRE(AQUE),THREAD
!!> GUID('065650d3-8d5f-400b-9da8-ed6c8df3ee28'),PROMPT('Attrib Structure:'),HEADER('Attrib Structure'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Field Name:'),USE(?AQUE:FieldName:Prompt)
! ENTRY(@s50),USE(AQUE:FieldName)
[REPORTCONTROLS]
! STRING(@s50),USE(AQUE:FieldName)
FieldName                  CSTRING(129)
!!> GUID('fb3f66f6-d5f6-49fb-be36-d6044943b11a'),PROMPT('Field Name:'),HEADER('Field Name'),PICTURE(@s50)
[SCREENCONTROLS]
! PROMPT('Field Value:'),USE(?AQUE:FieldValue:Prompt)
! TEXT,USE(AQUE:FieldValue)
[REPORTCONTROLS]
! TEXT,USE(AQUE:FieldValue)
FieldValue                 CSTRING(10241)
!!> GUID('f5467d4f-d1f4-4fac-b965-14b4aa452688'),PROMPT('Field Value:'),HEADER('Field Value'),PICTURE(@s255)
                         END
!!> GUID('eb7f018d-1413-4f8f-90eb-ca3147bc300f')
[SCREENCONTROLS]
! PROMPT('Picture Queue:'),USE(?PictureQueue:Prompt)
! ENTRY(@s153),USE(PictureQueue)
[REPORTCONTROLS]
! STRING(@s153),USE(PictureQueue)
PictureQueue             QUEUE,PRE(que3),THREAD
!!> GUID('a3333e4b-ff71-4535-966c-facef4b6754b'),PROMPT('Picture Queue:'),HEADER('Picture Queue'),PICTURE(@s154)
[SCREENCONTROLS]
! PROMPT('Field Name:'),USE(?que3:FieldName:Prompt)
! ENTRY(@s128),USE(que3:FieldName)
[REPORTCONTROLS]
! STRING(@s128),USE(que3:FieldName)
FieldName                  CSTRING(129)
!!> GUID('e54b7533-e667-4ca9-a7e1-19637c931bdf'),PROMPT('Field Name:'),HEADER('Field Name'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('Field Picture:'),USE(?FieldPicture:Prompt)
! ENTRY(@s24),USE(FieldPicture)
[REPORTCONTROLS]
! STRING(@s24),USE(FieldPicture)
FieldPicture               CSTRING(25)
!!> GUID('fb29aea9-3d79-4349-84b2-7363b4140750'),PROMPT('Field Picture:'),HEADER('Field Picture'),PICTURE(@s24)
                         END
!!> GUID('36f8699a-3cb1-45cc-b527-b3b327fce01e')
[SCREENCONTROLS]
! PROMPT('Wild Card Queue:'),USE(?WildCardQueue:Prompt)
! ENTRY(@s20),USE(WildCardQueue)
[REPORTCONTROLS]
! STRING(@s20),USE(WildCardQueue)
WildCardQueue            QUEUE,PRE(WCQ),THREAD
!!> GUID('38cc82ee-6573-4734-98fb-96b884492274'),PROMPT('Wild Card Queue:'),HEADER('Wild Card Queue'),PICTURE(@s20),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Field Name:'),USE(?WCQ:FieldName:Prompt)
! ENTRY(@s128),USE(WCQ:FieldName)
[REPORTCONTROLS]
! STRING(@s128),USE(WCQ:FieldName)
FieldName                  CSTRING(129)
!!> GUID('ae167643-65c9-4870-908f-b471c102e12b'),PROMPT('Field Name:'),HEADER('Field Name'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Field Picture:'),USE(?WCQ:FieldPicture:Prompt)
! ENTRY(@s24),USE(WCQ:FieldPicture)
[REPORTCONTROLS]
! STRING(@s24),USE(WCQ:FieldPicture)
FieldPicture               CSTRING(25)
!!> GUID('b11fff00-0123-4948-8154-948053645d88'),PROMPT('Field Picture:'),HEADER('Field Picture'),PICTURE(@s24),TYPEMODE(INS)
                         END
!!> GUID('2de89151-4f6d-40ae-a817-69131a42188f')
[SCREENCONTROLS]
! PROMPT('MOD : Picture Queue Records:'),USE(?PictureQueueRecords:Prompt)
! ENTRY(@n-14),USE(PictureQueueRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(PictureQueueRecords),RIGHT(1)
MOD:PictureQueueRecords  LONG,THREAD
!!> GUID('bdbbba7c-1079-4729-8379-b1acb15e8307'),PROMPT('MOD : Picture Queue Records:'),HEADER('MOD : Picture Queue Records'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('MOD : Wild Card Records:'),USE(?MOD:WildCardRecords:Prompt)
! ENTRY(@n-14),USE(MOD:WildCardRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(MOD:WildCardRecords),RIGHT(1)
MOD:WildCardRecords      LONG,THREAD
!!> GUID('34ec144f-052e-4c6d-b278-dd4a04d37965'),PROMPT('MOD : Wild Card Records:'),HEADER('MOD : Wild Card Records'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('mod : Added Child:'),USE(?mod:AddedChild:Prompt)
! ENTRY(@n3),USE(mod:AddedChild)
[REPORTCONTROLS]
! STRING(@n3),USE(mod:AddedChild)
mod:AddedChild           BYTE,THREAD
!!> GUID('29f927af-7f99-4933-9122-dedb012199a5'),PROMPT('mod : Added Child:'),HEADER('mod : Added Child'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Indent Value:'),USE(?IndentValue:Prompt)
! ENTRY(@n-14),USE(IndentValue),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(IndentValue),RIGHT(1)
IndentValue              LONG,THREAD
!!> GUID('1b0d0f47-3f44-4a04-9cc2-7794d8a71de2'),PROMPT('Indent Value:'),HEADER('Indent Value'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('mod : XMLS tring In Use:'),USE(?mod:XMLStringInUse:Prompt)
! ENTRY(@n3),USE(mod:XMLStringInUse)
[REPORTCONTROLS]
! STRING(@n3),USE(mod:XMLStringInUse)
mod:XMLStringInUse       BYTE,THREAD
!!> GUID('7faf18c5-cf06-493a-824b-6c8a072dcdd6'),INITIAL('0'),PROMPT('mod : XMLS tring In Use:'),HEADER('mod : XMLS tring In Use'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('MOD : No Indent Flag:'),USE(?MOD:NoIndentFlag:Prompt)
! ENTRY(@n3),USE(MOD:NoIndentFlag)
[REPORTCONTROLS]
! STRING(@n3),USE(MOD:NoIndentFlag)
MOD:NoIndentFlag         BYTE,THREAD
!!> GUID('fad6fce2-c949-4474-bd5b-e56831359f7b'),PROMPT('MOD : No Indent Flag:'),HEADER('MOD : No Indent Flag'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('MOD : Ignore Empty A:'),USE(?MOD:IgnoreEmptyA:Prompt)
! ENTRY(@n3),USE(MOD:IgnoreEmptyA)
[REPORTCONTROLS]
! STRING(@n3),USE(MOD:IgnoreEmptyA)
MOD:IgnoreEmptyA         BYTE,THREAD
!!> GUID('0c4680b3-82f0-4bab-a688-b0cdb27954da'),PROMPT('MOD : Ignore Empty A:'),HEADER('MOD : Ignore Empty A'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('MOD : Ignore Empty E:'),USE(?MOD:IgnoreEmptyE:Prompt)
! ENTRY(@n3),USE(MOD:IgnoreEmptyE)
[REPORTCONTROLS]
! STRING(@n3),USE(MOD:IgnoreEmptyE)
MOD:IgnoreEmptyE         BYTE,THREAD
!!> GUID('43fce64d-5dcb-4892-b250-4dfda971d092'),PROMPT('MOD : Ignore Empty E:'),HEADER('MOD : Ignore Empty E'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('mod : namespace:'),USE(?mod:namespace:Prompt)
! ENTRY(@s50),USE(mod:namespace)
[REPORTCONTROLS]
! STRING(@s50),USE(mod:namespace)
mod:namespace            STRING(128),THREAD
!!> GUID('93ff0bc5-df67-4068-83d2-7d2227e3d003'),PROMPT('mod : namespace:'),HEADER('mod : namespace'),PICTURE(@s50)
[SCREENCONTROLS]
! PROMPT('Mod : Last Written String:'),USE(?Mod:LastWrittenString:Prompt)
! TEXT,USE(Mod:LastWrittenString)
[REPORTCONTROLS]
! TEXT,USE(Mod:LastWrittenString)
Mod:LastWrittenString    CSTRING(65519),THREAD
!!> GUID('755593bf-c9ce-4419-bccf-bd3045e94481'),PROMPT('Mod : Last Written String:'),HEADER('Mod : Last Written String'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Mod : Last Never Kill:'),USE(?Mod:LastNeverKill:Prompt)
! ENTRY(@n3),USE(Mod:LastNeverKill)
[REPORTCONTROLS]
! STRING(@n3),USE(Mod:LastNeverKill)
Mod:LastNeverKill        BYTE,THREAD
!!> GUID('095fb4cc-08de-4402-97f2-9ef97dc32a59'),PROMPT('Mod : Last Never Kill:'),HEADER('Mod : Last Never Kill'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('MOD : Interm:'),USE(?MOD:Interm:Prompt)
! ENTRY(@s2),USE(MOD:Interm)
[REPORTCONTROLS]
! STRING(@s2),USE(MOD:Interm)
MOD:Interm               CSTRING(3),THREAD
!!> GUID('230f950b-a07e-4777-9b86-0a69eba49614'),PROMPT('MOD : Interm:'),HEADER('MOD : Interm'),PICTURE(@s2)
[SCREENCONTROLS]
! PROMPT('MOD : In Term L:'),USE(?MOD:InTermL:Prompt)
! ENTRY(@n-14),USE(MOD:InTermL),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(MOD:InTermL),RIGHT(1)
MOD:InTermL              LONG,THREAD
!!> GUID('bdcd3401-21db-45bd-94df-7b557ac4f1d8'),PROMPT('MOD : In Term L:'),HEADER('MOD : In Term L'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('MOD : Store String:'),USE(?MOD:StoreString:Prompt)
! ENTRY(@n3),USE(MOD:StoreString)
[REPORTCONTROLS]
! STRING(@n3),USE(MOD:StoreString)
MOD:StoreString          BYTE,THREAD
!!> GUID('8d094f0a-5cd0-49a3-9d05-496c473e1058'),PROMPT('MOD : Store String:'),HEADER('MOD : Store String'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('MOD : Writing Binary:'),USE(?MOD:WritingBinary:Prompt)
! ENTRY(@n3),USE(MOD:WritingBinary)
[REPORTCONTROLS]
! STRING(@n3),USE(MOD:WritingBinary)
MOD:WritingBinary        BYTE,THREAD
!!> GUID('75d6d9be-7b5c-44bd-9cd8-03010e6e3104'),PROMPT('MOD : Writing Binary:'),HEADER('MOD : Writing Binary'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('MOD : Write Time Start:'),USE(?MOD:WriteTimeStart:Prompt)
! ENTRY(@n-14),USE(MOD:WriteTimeStart),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(MOD:WriteTimeStart),RIGHT(1)
MOD:WriteTimeStart       LONG,THREAD
!!> GUID('414db035-92a3-4ad7-8f53-4a8a07f4ddc7'),PROMPT('MOD : Write Time Start:'),HEADER('MOD : Write Time Start'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('MOD ::'),USE(?MOD:WriteBytesLength:Prompt)
! ENTRY(@n13),USE(MOD:WriteBytesLength),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n13),USE(MOD:WriteBytesLength),RIGHT(1)
MOD:WriteBytesLength     ULONG,THREAD
!!> GUID('6da7ce4b-cd29-4da6-b7b0-0ea148561238'),PROMPT('MOD ::'),HEADER('MOD :'),PICTURE(@n13),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('MOD : Write Time Length:'),USE(?MOD:WriteTimeLength:Prompt)
! ENTRY(@s31),USE(MOD:WriteTimeLength),DECIMAL(14)
[REPORTCONTROLS]
! STRING(@s31),USE(MOD:WriteTimeLength),DECIMAL(14)
MOD:WriteTimeLength      CSTRING(32),THREAD
!!> GUID('1e573d90-e3c6-4d71-9ccc-fa823fd40a6c'),PROMPT('MOD : Write Time Length:'),HEADER('MOD : Write Time Length'),PICTURE(@s31),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('MOD : Add Parent:'),USE(?MOD:AddParent:Prompt)
! ENTRY(@n-14),USE(MOD:AddParent),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(MOD:AddParent),RIGHT(1)
MOD:AddParent            LONG,THREAD
!!> GUID('63342b61-056f-4cfb-92d8-5b457c960845'),PROMPT('MOD : Add Parent:'),HEADER('MOD : Add Parent'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('MOD : Ignore Comments:'),USE(?MOD:IgnoreComments:Prompt)
! ENTRY(@n3),USE(MOD:IgnoreComments)
[REPORTCONTROLS]
! STRING(@n3),USE(MOD:IgnoreComments)
MOD:IgnoreComments       BYTE,THREAD
!!> GUID('d247173d-7b6d-476c-9fb8-c1427675b123'),PROMPT('MOD : Ignore Comments:'),HEADER('MOD : Ignore Comments'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Out Write String:'),USE(?OutWriteString:Prompt)
! TEXT,USE(OutWriteString)
[REPORTCONTROLS]
! TEXT,USE(OutWriteString)
OutWriteString           CSTRING(4096000),THREAD,AUTO
!!> GUID('5b94d07c-bef9-434a-9c05-234e58e8fd0d'),PROMPT('Out Write String:'),HEADER('Out Write String'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('mod : Writing Binary Field Value:'),USE(?mod:WritingBinaryFieldValue:Prompt)
! ENTRY(@s128),USE(mod:WritingBinaryFieldValue)
[REPORTCONTROLS]
! STRING(@s128),USE(mod:WritingBinaryFieldValue)
mod:WritingBinaryFieldValue CSTRING(129),THREAD
!!> GUID('e44bd223-b431-4521-aaa8-bd4ec9d21ee1'),PROMPT('mod : Writing Binary Field Value:'),HEADER('mod : Writing Binary Field Value'),PICTURE(@s128)
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME XML:CreateXMLFile
PROTOTYPE '(STRING,<<STRING>,<<STRING>,<<BYTE>,<<STRING>,<<BYTE>,<<BYTE>),SHORT'
PARAMETERS '(InFile,<<InVersion>,<<InEncoding>,<<IntComment>,<<InTerm>,<<StoreString>,<<AppendFile>)'
[COMMON]
FROM Clarion Source
MODIFIED '2015/01/11' '14:29:05'
[DATA]
[SCREENCONTROLS]
! PROMPT('LOC : Append File:'),USE(?LOC:AppendFile:Prompt)
! ENTRY(@n3),USE(LOC:AppendFile)
[REPORTCONTROLS]
! STRING(@n3),USE(LOC:AppendFile)
LOC:AppendFile           BYTE
!!> GUID('7b8737f5-c647-4502-93b8-a76cf6af9a83'),PROMPT('LOC : Append File:'),HEADER('LOC : Append File'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('IQ Log File:'),USE(?IQ_LogFile:Prompt)
! ENTRY(@s254),USE(IQ_LogFile)
[REPORTCONTROLS]
! STRING(@s254),USE(IQ_LogFile)
IQ_LogFile               CSTRING(255)
!!> GUID('a8e548f1-017f-4411-aaa9-5c2001397cde'),PROMPT('IQ Log File:'),HEADER('IQ Log File'),PICTURE(@s254),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('6c48b1c8-4cb3-41c7-abb1-734553908376'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('LNGPTR:'),USE(?LNGPTR:Prompt)
! ENTRY(@n-14),USE(LNGPTR),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(LNGPTR),RIGHT(1)
LNGPTR                   LONG
!!> GUID('8b41ac30-5b7b-4cb9-a192-a094fa5be9ad'),PROMPT('LNGPTR:'),HEADER('LNGPTR'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 ! Change Version in CreateXMLString
 ! ---------------------------------
 if mod:XMLStringInUse <> 0
    GLO:_XML_LastError=5
    return(GLO:_XML_LastError)
 end

 Glo:_XML_XMLFileName = InFile

 if instring('.HTM',upper(InFile),1,1)
    glo:HTMLEncoding = True
 else
    glo:HTMLEncoding = False
 end

 clear(Mod:LastWrittenString)

 IF OMITTED(6)
    mod:storeString = False
 ELSE
    mod:storeString = StoreString
 END

 IF OMITTED(5)
    mod:Interm = CHR(13) & CHR(10)
    mod:InTermL = 2
 ELSE
    mod:Interm = InTerm
    mod:InTermL = len(InTerm)
 END

 ! Times
 ! -----
 MOD:WriteTimeStart=CLOCK()
 MOD:WriteTimeLength=''


 ! Create new file unless APPEND
 ! -----------------------------
 if OMITTED(7)
    loc:AppendFile=False
 else
    loc:AppendFile=AppendFile
 end

 if LOC:AppendFile = False
    CREATE(XMLTEXT)
    IF ERRORCODE()
       GLO:_XML_LastError=ERRORCODE()
       RETURN(GLO:_XML_LastError)
    else
       GLO:_XML_LastError=0
    END
 end
 ! -----------------------------
 GLO:_xml_InEncoding = UPPER(InEncoding)
 IF GLO:_xml_InEncoding='UTF-8'
    GLO:_xml_InEncodingL = True
 else
    GLO:_xml_InEncodingL = False
 END

 OPEN(XMLTEXT)
 IF ERRORCODE()
    GLO:_XML_LastError=ERRORCODE()
    RETURN(GLO:_XML_LastError)
 ELSE
    ! if UTF-8, add three header bytes to the file
    ! -----------------------------------------------
    if GLO:_xml_InWriteEncoding = true
       TXT:STANDLINE = chr(239) & chr(187) & chr(191)
       APPEND(XMLTEXT,3)
       TXT:STANDLINE = ''
    end
    ! -----------------------------------------------
    STREAM(XMLTEXT)
    IndentValue = 0
    GLO:_XML_LastError=0
    clear(XMLTEXT)
    if InVersion or InEncoding
         txt:standline = '<?xml'
         if InVersion
            txt:standline = txt:standline & ' version="' & InVersion & '"' !!!
         end
         if InEncoding
            txt:standline = txt:standline & ' encoding="' & InEncoding & '"'   !!!
         end
         LOOP I = 1  TO RECORDS(AttribStructure)
           GET(AttribStructure,I)
           TXT:STANDLINE = TXT:STANDLINE & ' ' & CLIP(AQUE:FieldName) & '="' & CLIP(AQUE:FieldValue) & '"'
         end
         FREE(AttribStructure)
         TXT:STANDLINE = TXT:STANDLINE & ' ?>'    !!!
         xmll:AddToLastString(True)
    END
    if IntComment
       Mod:LastNeverKill=True
       xml:AddComment('Created with iQ-XML - Date: ' & format(today(),@d017) & '  Time: ' & format(clock(),@t07))
       Mod:LastNeverKill=False
    end
    mod:XMLStringInUse = 1
    RETURN(0)
 END


[END]
[END]
[PROCEDURE]
NAME XML:CreateParent
PROTOTYPE '(STRING)'
PARAMETERS '(InName)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/05/09' ' 8:44:46'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 if mod:NameSpace[1] <> ' '
    MQUE:FieldName = CLIP(MOD:NameSpace) & ':' & CLIP(InName)
 else
    MQUE:FieldName = CLIP(InName)
 end
 ADD(XMLStructure)
 MOD:AddParent+=1

 if mod:NoIndentFlag = False
    if MOD:InTermL > 0
       IndentValue+=1
    end
 end
[END]
[END]
[PROCEDURE]
NAME XML:CreateAttribute
PROTOTYPE '(STRING,STRING)'
PARAMETERS '(InName,InValue)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/24' '16:45:32'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  IF MOD:IgnoreEmptyA=True
     IF Invalue = '' THEN RETURN.
  END

  AQUE:FieldName  = CLIP(InName)
  AQUE:FieldValue = CLIP(InValue)
  ADD(AttribStructure)

[END]
[END]
[PROCEDURE]
NAME XML:AddParent
PROTOTYPE '(<<BYTE>,<<STRING>)'
PARAMETERS '(<<InClose>,<<InElement>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/05/09' ' 8:51:51'
[DATA]
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG,AUTO
!!> GUID('cefd5ee3-4cb4-4811-a695-8294eaded014'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('WQ:'),USE(?WQ:Prompt)
! ENTRY(@n-14),USE(WQ),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(WQ),RIGHT(1)
WQ                       LONG,AUTO
!!> GUID('4117c322-72f7-4e2d-8269-b636bf531469'),PROMPT('WQ:'),HEADER('WQ'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Work Value:'),USE(?WorkValue:Prompt)
! TEXT,USE(WorkValue)
[REPORTCONTROLS]
! TEXT,USE(WorkValue)
WorkValue                CSTRING(10241),AUTO
!!> GUID('cae387b0-cf30-4133-82d2-f8c0f3612d8c'),PROMPT('Work Value:'),HEADER('Work Value'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Field Value:'),USE(?FieldValue:Prompt)
! ENTRY(@s129),USE(FieldValue)
[REPORTCONTROLS]
! STRING(@s129),USE(FieldValue)
FieldValue               CSTRING(130),AUTO
!!> GUID('0265da99-0e63-4997-be0a-0d206fa73ab5'),PROMPT('Field Value:'),HEADER('Field Value'),PICTURE(@s129)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  if mod:AddedChild = True
     FieldValue = mque:FieldName & chr(62)
     Do CreateElement
  else
     GET(XMLStructure,MOD:AddParent)
     IF ~ERRORCODE()
        FieldValue = mque:FieldName
        Do CreateElement
        Do CreateAttributes
        Do CreateBinary
        Do CreateCloseTag
     else
        txt:standline = 'Error encountered called XML:AddParent().  XML:AddParent() called before XML:CreateParent().'
     end
     CLEAR(AttribStructure)
     FREE(AttribStructure)
  end
  Do WriteIt

[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3240
PROPERTY:END
CreateElement   ROUTINE

    if IndentValue = 0
       TXT:StandLine = chr(60) & FieldValue
    else
       EXECUTE IndentValue
       TXT:StandLine = ' ' & chr(60) & FieldValue
       TXT:StandLine = '  ' & chr(60) & FieldValue
       TXT:StandLine = '   ' & chr(60) & FieldValue
       TXT:StandLine = '    ' & chr(60) & FieldValue
       TXT:StandLine = '     ' & chr(60) & FieldValue
       TXT:StandLine = '      ' & chr(60) & FieldValue
       TXT:StandLine = '       ' & chr(60) & FieldValue
       ELSE
       TXT:StandLine = all(' ',IndentValue) & chr(60) & FieldValue
       END
    end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3240
PROPERTY:END
CreateAttributes    ROUTINE

    LOOP I = 1 TO RECORDS(AttribStructure)
        GET(AttribStructure,I)
        DO ConvertValue
        TXT:STANDLINE = TXT:STANDLINE & ' ' & AQUE:FieldName & '="' & WorkValue & '"'
    END
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3240
PROPERTY:END
CreateBinary    ROUTINE

     ! If writing binary parent, close out the tag and get out
     ! -------------------------------------------------------
     if mod:WritingBinary > 0
        if Mod:writingBinary = 2
           TXT:STANDLINE = TXT:STANDLINE & ' xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64"'
        end
        TXT:STANDLINE = TXT:STANDLINE & CHR(62)
        Do WriteIt
        CLEAR(AttribStructure)
        FREE(AttribStructure)
        mod:WritingBinaryFieldValue = FieldValue
        RETURN
     END
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3240
PROPERTY:END
CreateCloseTag  ROUTINE

      if InClose=True or InClose=2
         if InElement > ''
            Do ConvertValue2
            txt:standline = txt:standline & chr(62) & WorkValue & chr(60) & '/' & FieldValue & chr(62)
         else
            if InClose = 2
               txt:standline = txt:standline & chr(62) & '&nbsp;' & chr(60) & '/' & FieldValue & chr(62)
            else
               txt:standline = txt:standline & '/' & chr(62)
            end
         end
         if mod:NoIndentFlag = False and MOD:InTermL <> 0
            IndentValue-=1
         end
         DELETE(XMLStructure)
         MOD:AddParent-=1
      else
         txt:standline = txt:standline & chr(62)
      end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3600
PROPERTY:END
WriteIt ROUTINE

  if mod:XMLStringInUse = 1
     xmll:AddToLastString(True)
  else
     OutWriteString=OutWriteString & txt:standline & Mod:Interm
  end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
ConvertValue    ROUTINE

    WorkValue = ''
    if MOD:PictureQueueRecords > 0
       QUE3:FieldName = LOWER(AQUE:FieldName)
       GET(PictureQueue,que3:FieldName)
       IF ~ERRORCODE()
          if que3:FieldPicture <> '*'
             WorkValue =  CLIP(LEFT(FORMAT(AQUE:FieldValue,que3:FieldPicture)))
             WorkValue = XML:ConvertToXML(WorkValue)
          else
             WorkValue = AQUE:FieldValue
          END
          EXIT
        end
     end
     if MOD:WildCardRecords > 0
        LOOP WQ = 1 TO MOD:WildCardRecords
          GET(WildCardQueue,WQ)
          IF INSTRING(WCQ:FieldName,LOWER(AQUE:FieldName),1,1)
             WorkValue =  CLIP(LEFT(FORMAT(AQUE:FieldValue,WCQ:FieldPicture)))
             WorkValue = XML:ConvertToXML(WorkValue)
             EXIT
          END
       END
    END
    WorkValue = XML:ConvertToXML(AQUE:FieldValue)
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
ConvertValue2   ROUTINE

    WorkValue = ''
    if MOD:PictureQueueRecords > 0
       QUE3:FieldName = LOWER(mque:FieldName)
       GET(PictureQueue,que3:FieldName)
       IF ~ERRORCODE()
          if que3:FieldPicture <> '*'
             WorkValue =  CLIP(LEFT(FORMAT(InElement,que3:FieldPicture)))
             WorkValue = XML:ConvertToXML(WorkValue)
          else
             WorkValue = InElement
          END
          EXIT
        end
     end
     if WorkValue = '' and MOD:WildCardRecords > 0
        LOOP WQ = 1 TO MOD:WildCardRecords
          GET(WildCardQueue,WQ)
          IF INSTRING(WCQ:FieldName,LOWER(mque:FieldName),1,1)
             WorkValue =  CLIP(LEFT(FORMAT(InElement,WCQ:FieldPicture)))
             WorkValue = XML:ConvertToXML(WorkValue)
             EXIT
          END
       END
    END
    if WorkValue = ''
       WorkValue = XML:ConvertToXML(CLIP(InElement))
    end
[END]
[END]
[PROCEDURE]
NAME XML:AddElement
PROTOTYPE '(STRING,STRING,<<BYTE>)'
PARAMETERS '(Infield,Invalue,<<InCDATA>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/24' '16:55:01'
[DATA]
[SCREENCONTROLS]
! PROMPT('Work Value:'),USE(?WorkValue:Prompt)
! TEXT,USE(WorkValue)
[REPORTCONTROLS]
! TEXT,USE(WorkValue)
WorkValue                CSTRING(10241),AUTO
!!> GUID('5fc59c49-d004-4473-a54c-9b8a36968bad'),PROMPT('Work Value:'),HEADER('Work Value'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Use Field:'),USE(?UseField:Prompt)
! ENTRY(@s127),USE(UseField)
[REPORTCONTROLS]
! STRING(@s127),USE(UseField)
UseField                 CSTRING(128),AUTO
!!> GUID('410e8ebc-adf3-4fe4-8326-fa9a277378ff'),PROMPT('Use Field:'),HEADER('Use Field'),PICTURE(@s127)
[SCREENCONTROLS]
! PROMPT('WQ:'),USE(?WQ:Prompt)
! ENTRY(@n-14),USE(WQ),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(WQ),RIGHT(1)
WQ                       LONG,AUTO
!!> GUID('c16903e6-71ea-4f1b-96e9-675a765fc18b'),PROMPT('WQ:'),HEADER('WQ'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   IF MOD:IgnoreEmptyE = True
      IF InValue = '' THEN RETURN.
   END

   ! do not convert CDATA
   ! --------------------
   Do ConvertValue

   if mod:NameSpace[1]
      UseField = CLIP(mod:nameSpace) & ':' & Infield
   else
      UseField = InField
   end

   if InCDATA = False
      IF mod:XMLStringInUse = 1
         if IndentValue > 0
            TXT:StandLine = all(' ',IndentValue) & chr(60) & UseField & chr(62) & WorkValue & chr(60) & '/' & UseField & chr(62)
         else
            TXT:StandLine = chr(60) & UseField & chr(62) & WorkValue & chr(60) & '/' & UseField & chr(62)
         end
         xmll:AddToLastString(True)
      ELSE
         OutWriteString = OutWriteString & all(' ',IndentValue) & chr(60) & UseField & chr(62) & WorkValue & chr(60) & '/' & UseField & chr(62) & Mod:Interm
      END
   else
      IF mod:XMLStringInUse = 1
          TXT:StandLine = all(' ',IndentValue) & chr(60) & UseField & chr(62)
          xmll:AddToLastString(True)
          TXT:StandLine = chr(60) & '![CDATA[' & Invalue & ']]' & chr(62)
          xmll:AddToLastString(False)
          TXT:StandLine = all(' ',IndentValue) & chr(60) & '/' & UseField & chr(62)
          xmll:AddToLastString(False)
       ELSE
          OutWriteString = OutWriteString & |
          all(' ',IndentValue) & chr(60) & UseField & chr(62) & chr(60) & '![CDATA[' & inValue & ']]' & chr(62) &  chr(60) & '/' & UseField & chr(62) & Mod:Interm
       END
    end
[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
ConvertValue    ROUTINE

   ! Picture field
   ! -------------
   if InCDATA = False
      if MOD:PictureQueueRecords > 0
         QUE3:FieldName = LOWER(InField)
         GET(PictureQueue,que3:FieldName)
         IF ~ERRORCODE()
            if que3:FieldPicture <> '*'
               WorkValue =  CLIP(LEFT(FORMAT(InValue,que3:FieldPicture)))
               WorkValue = XML:ConvertToXML(WorkValue)
            else
               WorkValue = clip(InValue)
            END
            EXIT
          end
       end
       if MOD:WildCardRecords > 0
          LOOP WQ = 1 TO MOD:WildCardRecords
            GET(WildCardQueue,WQ)
            IF INSTRING(WCQ:FieldName,LOWER(InField),1,1)
               WorkValue =  CLIP(LEFT(FORMAT(InValue,WCQ:FieldPicture)))
               WorkValue = XML:ConvertToXML(WorkValue)
               EXIT
            END
         END
      END
      WorkValue = XML:ConvertToXML(CLIP(InValue))
   END
[END]
[END]
[PROCEDURE]
NAME XML:CloseXMLFile
PROTOTYPE '(<<BYTE>)'
PARAMETERS '(<<AllClose>)'
[COMMON]
FROM Clarion Source
MODIFIED '2015/03/17' '16:24:49'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 IF AllClose = True
    CLEAR(Mod:LastWrittenString)
    Mod:LastNeverKill=True
    LOOP WHILE RECORDS(XMLStructure)
       XML:CloseParent()
    END
    MOD:AddParent=0
 END
 FLUSH(XMLTEXT)
 CLOSE(XMLTEXT)

 OPEN(XMLTEXT)
 IF ~ERRORCODE()
    MOD:WriteBytesLength = BYTES(XMLTEXT)
    CLOSE(XMLTEXT)
 END

 if AllClose = 2
    REMOVE(XMLTEXT)
    MOD:WriteBytesLength=0
 END

 XMLL:ClearWriter()
[END]
[END]
[PROCEDURE]
NAME XML:CloseParent
PROTOTYPE '(<<STRING>)'
PARAMETERS '(<<TestTag>)'
[COMMON]
FROM Clarion Source
MODIFIED '2015/06/13' '17:32:13'
[DATA]
[SCREENCONTROLS]
! PROMPT('Work Value:'),USE(?WorkValue:Prompt)
! ENTRY(@s127),USE(WorkValue)
[REPORTCONTROLS]
! STRING(@s127),USE(WorkValue)
WorkValue                CSTRING(128),AUTO
!!> GUID('20a871e4-f0c5-460c-a57a-1a9130a6e986'),PROMPT('Work Value:'),HEADER('Work Value'),PICTURE(@s127)
[SCREENCONTROLS]
! PROMPT('Level Display:'),USE(?LevelDisplay:Prompt)
! TEXT,USE(LevelDisplay)
[REPORTCONTROLS]
! TEXT,USE(LevelDisplay)
LevelDisplay             STRING(5000),AUTO
!!> GUID('930cfa47-2cf3-47ed-8013-f030c2bccb8c'),PROMPT('Level Display:'),HEADER('Level Display'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG,AUTO
!!> GUID('5c2c062b-7d5f-4826-87ad-cf1304c50595'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  if mod:AddParent > 0
      GET(XMLStructure,MOD:AddParent)
      IF ~ERRORCODE()
         WorkValue = clip(MQUE:FieldName)

         Do ShowError

         if mod:XMLStringInUse = 1
            IF IndentValue > 0
               txt:standline = all(' ',IndentValue) & chr(60) & '/' & WorkValue & chr(62)
            else
               txt:standline = chr(60) & '/' & WorkValue & chr(62)
            end
            xmll:AddToLastString(True)
         else
            OutWriteString = OutWriteString & all(' ',IndentValue) & chr(60) & '/' & WorkValue & chr(62) & Mod:Interm
         end
         DELETE(XMLStructure)
         MOD:AddParent-=1

         IF MOD:NoIndentFlag = False AND MOD:InTermL <> 0
            Indentvalue-=1
            IF IndentValue < 0 then IndentValue = 0.     ! safety
         end
      else
         Do ShowError
      END
  END

ShowError   ROUTINE

   if Glo:_XML_SkipDebug = False
      if NOT OMITTED(1)
         IF WorkValue <> TestTag
            LevelDisplay=''
            LOOP I = 1 to RECORDS(XMLStructure)
              GET(XMLStructure,I)
              LevelDisplay = clip(LevelDisplay) & chr(60) & clip(MQUE:FieldName) & chr(62)
            END
            MESSAGE('Programmer Error has occurred.||Tag Expected: ' & clip(TestTag) & '||Tag Encountered: ' & clip(WorkValue)&'||Levels: ' & clip(LevelDisplay),'iQ-XML CloseTag Error',icon:Exclamation)
         end
      end
   end
[END]
[END]
[PROCEDURE]
NAME XML:AddComment
PROTOTYPE '(STRING)'
PARAMETERS '(InComment)'
[COMMON]
FROM Clarion Source
MODIFIED '2015/03/17' '16:26:02'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    if MOD:IgnoreComments <> True
       IF mod:XMLStringInUse= 1
          txt:standline = all(' ',IndentValue) & chr(60) & '!--' & CLIP(InComment) & '--' & chr(62)
          xmll:AddToLastString(True)
       ELSE
          OutWriteString = OutWriteString & all(' ',IndentValue) & chr(60) & '!-- ' & CLIP(InComment) & ' --' & chr(62) & Mod:Interm
       END
    END

[END]
[END]
[PROCEDURE]
NAME XML:AddFromQueue
PROTOTYPE '(*QUEUE,STRING,<<BYTE>,<<BYTE>,<<BYTE>,<<BYTE>)'
PARAMETERS '(LocalQueue,InTag,<<AsAttrib>,<<AutoCloseParent>,<<AsLower>,<<SkipEmpty>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/04/06' '14:05:01'
[DATA]
[SCREENCONTROLS]
! PROMPT('Total Records:'),USE(?TotalRecords:Prompt)
! ENTRY(@n-14),USE(TotalRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(TotalRecords),RIGHT(1)
TotalRecords             LONG,AUTO
!!> GUID('a5091e8a-b3fd-4f1a-801b-9bedceebd589'),PROMPT('Total Records:'),HEADER('Total Records'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Total Queue Records:'),USE(?TotalQueueRecords:Prompt)
! ENTRY(@n-14),USE(TotalQueueRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(TotalQueueRecords),RIGHT(1)
TotalQueueRecords        LONG,AUTO
!!> GUID('8d32df1d-2395-4446-bf9b-7e8ad376d0e7'),PROMPT('Total Queue Records:'),HEADER('Total Queue Records'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Test Field Value:'),USE(?TestFieldValue:Prompt)
! TEXT,USE(TestFieldValue)
[REPORTCONTROLS]
! TEXT,USE(TestFieldValue)
TestFieldValue           CSTRING(10241)
!!> GUID('975e2e65-3756-4f63-9254-cc210723a8fc'),PROMPT('Test Field Value:'),HEADER('Test Field Value'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Final Queue:'),USE(?FinalQueue:Prompt)
! ENTRY(@s43),USE(FinalQueue)
[REPORTCONTROLS]
! STRING(@s43),USE(FinalQueue)
FinalQueue               QUEUE,PRE(QUE)
!!> GUID('7b3a0427-630e-450f-98a2-12a8547ee274'),PROMPT('Final Queue:'),HEADER('Final Queue'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Field Name:'),USE(?QUE:FieldName:Prompt)
! ENTRY(@s127),USE(QUE:FieldName)
[REPORTCONTROLS]
! STRING(@s127),USE(QUE:FieldName)
FieldName                  CSTRING(128)
!!> GUID('c6953746-fb9a-4db9-9114-0a7822776c15'),PROMPT('Field Name:'),HEADER('Field Name'),PICTURE(@s127)
[SCREENCONTROLS]
! PROMPT('Actual Name:'),USE(?QUE:ActualName:Prompt)
! ENTRY(@s127),USE(QUE:ActualName)
[REPORTCONTROLS]
! STRING(@s127),USE(QUE:ActualName)
ActualName                 CSTRING(128)
!!> GUID('d79c64e0-2511-4a8f-b0d7-5194d82527d7'),PROMPT('Actual Name:'),HEADER('Actual Name'),PICTURE(@s127)
[SCREENCONTROLS]
! PROMPT('Field Level:'),USE(?QUE:FieldLevel:Prompt)
! ENTRY(@n-14),USE(QUE:FieldLevel),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(QUE:FieldLevel),RIGHT(1)
FieldLevel                 LONG
!!> GUID('06c9941f-0980-46d9-a402-41e943664a4e'),PROMPT('Field Level:'),HEADER('Field Level'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Field Dims:'),USE(?QUE:FieldDims:Prompt)
! ENTRY(@n-14),USE(QUE:FieldDims),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(QUE:FieldDims),RIGHT(1)
FieldDims                  LONG
!!> GUID('f83c0444-f981-410e-a24a-d0cd576d6b77'),PROMPT('Field Dims:'),HEADER('Field Dims'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Field Is Grp:'),USE(?QUE:FieldIsGrp:Prompt)
! ENTRY(@n3),USE(QUE:FieldIsGrp)
[REPORTCONTROLS]
! STRING(@n3),USE(QUE:FieldIsGrp)
FieldIsGrp                 BYTE
!!> GUID('aafae4ce-4e0b-4344-8aea-6c10846ee46c'),PROMPT('Field Is Grp:'),HEADER('Field Is Grp'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Field RRN:'),USE(?QUE:FieldRRN:Prompt)
! ENTRY(@n-14),USE(QUE:FieldRRN),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(QUE:FieldRRN),RIGHT(1)
FieldRRN                   LONG
!!> GUID('b6c20d92-644c-463c-bdd2-21963fc10252'),PROMPT('Field RRN:'),HEADER('Field RRN'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
                         END
!!> GUID('1d75e6af-4e19-45f8-8465-5bb5eac26600')
[SCREENCONTROLS]
! PROMPT('j Field Name:'),USE(?jFieldName:Prompt)
! ENTRY(@s127),USE(jFieldName)
[REPORTCONTROLS]
! STRING(@s127),USE(jFieldName)
jFieldName               CSTRING(128)
!!> GUID('deb9aefb-d86f-445b-b64d-048486df587e'),PROMPT('j Field Name:'),HEADER('j Field Name'),PICTURE(@s127)
[SCREENCONTROLS]
! PROMPT('k Field Name:'),USE(?kFieldName:Prompt)
! ENTRY(@s127),USE(kFieldName)
[REPORTCONTROLS]
! STRING(@s127),USE(kFieldName)
kFieldName               CSTRING(128)
!!> GUID('a3ed33a5-5d87-420f-9c27-27ea711792e2'),PROMPT('k Field Name:'),HEADER('k Field Name'),PICTURE(@s127)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('49155c8c-67b4-43ba-b6cd-058fa353ab8d'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n-14),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(J),RIGHT(1)
J                        LONG
!!> GUID('59168fb7-ee50-460d-9bca-29625812ac72'),PROMPT('J:'),HEADER('J'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('K:'),USE(?K:Prompt)
! ENTRY(@n-14),USE(K),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(K),RIGHT(1)
K                        LONG
!!> GUID('67cc2c58-d453-48d2-9e04-0da8fc00cae1'),PROMPT('K:'),HEADER('K'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('m:'),USE(?m:Prompt)
! ENTRY(@n-14),USE(m),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(m),RIGHT(1)
m                        LONG
!!> GUID('9e5e5669-a9b5-4848-a2ba-1aba7a74ff4c'),PROMPT('m:'),HEADER('m'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('ip:'),USE(?ip:Prompt)
! ENTRY(@n-14),USE(ip),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ip),RIGHT(1)
ip                       LONG
!!> GUID('fd015aa1-8f22-4846-9a85-58d35aa1a4e8'),PROMPT('ip:'),HEADER('ip'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Really Close:'),USE(?ReallyClose:Prompt)
! ENTRY(@n3),USE(ReallyClose)
[REPORTCONTROLS]
! STRING(@n3),USE(ReallyClose)
ReallyClose              BYTE
!!> GUID('413cb42d-ccc8-476d-8420-db2cd3d5103d'),PROMPT('Really Close:'),HEADER('Really Close'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Current Level:'),USE(?CurrentLevel:Prompt)
! ENTRY(@n-14),USE(CurrentLevel),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(CurrentLevel),RIGHT(1)
CurrentLevel             LONG
!!> GUID('bbeff6e4-ff76-486b-a79b-f3601f14d199'),PROMPT('Current Level:'),HEADER('Current Level'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Number Of Parents:'),USE(?NumberOfParents:Prompt)
! ENTRY(@n-14),USE(NumberOfParents),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(NumberOfParents),RIGHT(1)
NumberOfParents          LONG
!!> GUID('f4ad3660-3634-40b3-af14-72d1900fb27c'),PROMPT('Number Of Parents:'),HEADER('Number Of Parents'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Attributes Created:'),USE(?AttributesCreated:Prompt)
! ENTRY(@n3),USE(AttributesCreated)
[REPORTCONTROLS]
! STRING(@n3),USE(AttributesCreated)
AttributesCreated        BYTE
!!> GUID('ae3beebd-0ec8-4a13-b5e3-4a921449bc2b'),PROMPT('Attributes Created:'),HEADER('Attributes Created'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Elements Only:'),USE(?ElementsOnly:Prompt)
! ENTRY(@n3),USE(ElementsOnly)
[REPORTCONTROLS]
! STRING(@n3),USE(ElementsOnly)
ElementsOnly             BYTE
!!> GUID('5e95b7b4-81c9-4123-a19b-3c1e93623f95'),PROMPT('Elements Only:'),HEADER('Elements Only'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('All Dims:'),USE(?AllDims:Prompt)
! ENTRY(@n3),USE(AllDims)
[REPORTCONTROLS]
! STRING(@n3),USE(AllDims)
AllDims                  BYTE
!!> GUID('07bc791e-3bc0-4852-8abf-7f058deced2c'),PROMPT('All Dims:'),HEADER('All Dims'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Last Dim:'),USE(?LastDim:Prompt)
! ENTRY(@n-14),USE(LastDim),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(LastDim),RIGHT(1)
LastDim                  LONG
!!> GUID('76650ef4-8445-4fcc-8966-94ffe43fd192'),PROMPT('Last Dim:'),HEADER('Last Dim'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Not Blank:'),USE(?NotBlank:Prompt)
! ENTRY(@n3),USE(NotBlank)
[REPORTCONTROLS]
! STRING(@n3),USE(NotBlank)
NotBlank                 BYTE
!!> GUID('44fd5498-420b-49f2-b77e-1b570f37f6d7'),PROMPT('Not Blank:'),HEADER('Not Blank'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Group Name:'),USE(?GroupName:Prompt)
! ENTRY(@s127),USE(GroupName)
[REPORTCONTROLS]
! STRING(@s127),USE(GroupName)
GroupName                CSTRING(128)
!!> GUID('9b23ab40-77b4-4375-b567-e1cae136c174'),PROMPT('Group Name:'),HEADER('Group Name'),PICTURE(@s127)
[SCREENCONTROLS]
! PROMPT('Once:'),USE(?Once:Prompt)
! ENTRY(@n3),USE(Once)
[REPORTCONTROLS]
! STRING(@n3),USE(Once)
Once                     BYTE
!!> GUID('ceb11b8d-fc00-47f1-b8d7-6b61cf7537f8'),PROMPT('Once:'),HEADER('Once'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Root Written:'),USE(?RootWritten:Prompt)
! ENTRY(@n3),USE(RootWritten)
[REPORTCONTROLS]
! STRING(@n3),USE(RootWritten)
RootWritten              BYTE
!!> GUID('407ea66c-f5a7-421b-be8a-0f39d30d7a9f'),PROMPT('Root Written:'),HEADER('Root Written'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Skip Parent Close:'),USE(?SkipParentClose:Prompt)
! ENTRY(@n3),USE(SkipParentClose)
[REPORTCONTROLS]
! STRING(@n3),USE(SkipParentClose)
SkipParentClose          BYTE
!!> GUID('9e7a2d72-a8d9-4e73-b6c6-a042268e233a'),PROMPT('Skip Parent Close:'),HEADER('Skip Parent Close'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Skip Blanks:'),USE(?SkipBlanks:Prompt)
! ENTRY(@n3),USE(SkipBlanks)
[REPORTCONTROLS]
! STRING(@n3),USE(SkipBlanks)
SkipBlanks               BYTE
!!> GUID('c1de946e-3aa4-4ddf-bbb8-45ea06c7fffb'),PROMPT('Skip Blanks:'),HEADER('Skip Blanks'),PICTURE(@n3)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 ! Setup GetLastString
 ! -------------------
 Mod:LastNeverKill=True
 CLEAR(Mod:LastWrittenString)

 IF NOT OMITTED(6)
    if SkipEmpty = True then SkipBlanks=True.
 END

 Do LoadFieldNames
 TotalRecords = RECORDS(LocalQueue)

 LOOP I = 1 TO TotalRecords
     GET(LocalQueue,I)

     XML:CreateParent(InTag)

     if AsAttrib = False
        RootWritten = True
        XML:AddParent()
     end

     CurrentLevel = 0
     NumberOfParents = 0
     SkipParentClose = False

     LOOP j = 1 to TotalQueueRecords
        GET(FinalQueue,j)

        ! close the parent
        ! ----------------
        if que:FieldLevel <> CurrentLevel
           LOOP (CurrentLevel - Que:fieldLevel) TIMES
              XML:CloseParent()
              NumberOfParents-=1
           end
           CurrentLevel = que:fieldlevel
        end

        if que:fieldisGrp
           if AttributesCreated = True or RootWritten=False
              XML:AddParent()
              AttributesCreated = False
              ElementsOnly = True
           end
           XML:CreateParent(que:ActualName);xml:AddParent()
           NumberOfParents+=1
           GroupName=que:ActualName
           CurrentLevel = que:fieldlevel
           RootWritten=True
           CYCLE
        end

        if que:fielddims < 2
           TestFieldValue = WHAT(LocalQueue,j)

           if AsAttrib = True and ElementsOnly <> True
              if SkipBlanks = False or TestFieldValue <> ''
                 XML:CreateAttribute(que:Actualname,TestFieldValue)
                 AttributesCreated=True
              END
           else
              if SkipBlanks = False or TestFieldValue <> ''
                 XML:AddElement(que:ActualName,TestFieldValue)
              end
           end
        else
          AllDims = False;LastDim = 0
          LOOP m = j TO TOtalQueueRecords
            GET(FinalQueue,m)
            if QUE:FieldLevel <> CurrentLevel then break.
            if que:fielddims < 2
               break
            else
               AllDims = True
               LastDim = M
            end
          end
          if AllDims = True
             Once = False
             LOOP k = 1 to 999999
               NotBlank = False
               ReallyClose = False
               LOOP m = j to LastDim
                 GET(FinalQueue,m)
                 TestFieldValue = WHAT(LocalQueue,m,k)
                 if TestFieldValue <> ''
                    if Once = True
                       if LastDim > j
                          XML:CloseParent()
                          XML:CreateParent(GroupName);xml:AddParent()
                          Once=False
                       else
                          ReallyClose = True
                       end
                    end
                    xml:AddElement(que:ActualName,TestFieldValue)
                    NotBlank = True
                 end
               END
               if j = LastDim and ReallyClose = true
                  XML:CloseParent()
                  Reallyclose = False
               end
               if NotBlank = False then break.
               Once = True
             END
             j = LastDim
          else
              ! Error - so writeout only record #1
              loop m = j to LastDim
                 Get(FinalQueue,m)
                 TestFieldValue = What(LocalQueue,m,1)
                 if TestFieldValue <> ''
                     xml:AddElement(que:ActualName,testFieldValue)
                 end
              end
          end
          j = LastDim
        end
     end

     if AsAttrib = True
        if AttributesCreated = true
            if AutoCloseParent = True
               XML:AddParent(True)
               SkipParentClose = True
            else
               XML:AddParent()
            end
        end
     end

     ElementsOnly = False
     AttributesCreated = False
     RootWritten = False

     LOOP NumberOfParents TIMES
          XML:CloseParent()
     END

     if SkipParentClose <> True
        XML:CloseParent()
     end

  END

  CLEAR(FinalQueue)
  Mod:LastNeverKill=False

[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
LoadFieldNames  ROUTINE

    CurrentLevel = 0

    Loop j = 1 to 255
          jFieldName = WHO(LocalQueue,j)
          if jFieldName = '' THEN BREAK.

          QUE:FieldName  = LOWER(jFieldname)
          if AsLower = True
             QUE:ActualName = lower(jFieldName)
          else
             QUE:ActualName = jFieldName
          end
          QUE:FieldLevel = CurrentLevel
          QUE:FieldDims  = HOWMANY(LocalQueue,j)
          QUE:FieldIsGrp = ISGROUP(LocalQueue,j)
          QUE:FieldRRN   = J

          ADD(FinalQueue,+QUE:FieldName)
     end

     TotalQueueRecords = RECORDS(FinalQueue)


     loop j = 1 to TotalQueueRecords
          if IsGroup(LocalQueue,j)
             kFieldname = WHO(LocalQueue,j)
             que:FieldName = lower(kFieldName)
             get(FinalQueue,+Que:fieldName)
             if ~errorcode()
                CurrentLevel = QUE:FieldLevel + 1
                put(FinalQueue)
             end

             gr &= GETGROUP(LocalQueue,j)
             loop k = 1 to 255
                kFieldname = WHO(gr,k)
                if kFieldname = '' then break.

                que:FieldName = lower(kFieldName)
                get(FinalQueue,+Que:fieldName)
                if ~errorcode()
                   QUE:FieldLevel=CurrentLevel
                   put(FinalQueue)
                end
             end
             gr &= NULL
          end
      end

     SORT(FINALQUEUE,+QUE:FieldRRN)

     ! ignore field prefix
     ! -------------------
     LOOP J = 1 TO TotalQueueRecords
        GET(FinalQueue,J)
        ip = instring(':',QUE:FieldName,1,1)
        if ip
           QUE:FieldName  = QUE:FieldName[ip+1 : 50]
           QUE:ActualName = QUE:ActualName[ip+1 : 50]
           PUT(FinalQueue)
        end
     END

     CurrentLevel = 0


[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
gr &GROUP


[END]
[END]
[PROCEDURE]
NAME XML:CreateXMLString
PROTOTYPE '(<<STRING>,<<STRING>,<<BYTE>,<<STRING>),SHORT'
PARAMETERS '(<<InVersion>,<<InEncoding>,<<IntComment>,<<InTerm>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/06' '16:19:47'
[DATA]
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('7b75befa-f4da-43a0-947d-b1a10f6d94c0'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   ! Change Version in CreateXMLFile
   ! -------------------------------
   if mod:XMLStringInUse <> 0
      GLO:_XML_LastError=5
      RETURN(GLO:_XML_LastError)
   end

   OutWriteString=''

   ! Times
   ! -----
   MOD:WriteTimeStart=CLOCK()
   MOD:WriteTimeLength=''

   IF SUB(inVersion,1,1) = '!'
      Do ReadFromFile
   else
      Do CreateXML
   end

   RETURN(0)
[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
CreateXML   ROUTINE

   MOD:STORESTRING = FALSE
   GLO:_xml_InEncoding = UPPER(InEncoding)
   IF GLO:_xml_InEncoding='UTF-8'
      GLO:_xml_InEncodingL = True
   else
      GLO:_xml_InEncodingL = False
   END

   IF OMITTED(4)
      mod:Interm = CHR(13) & CHR(10)
      mod:InTermL = 2
   ELSE
      mod:Interm = InTerm
      mod:InTermL = len(InTerm)
   END

   IndentValue = 0
   if InVersion or InEncoding
      OutWriteString = '<?xml'
      if InVersion
         OutWriteString = OutWriteString & ' version="' & InVersion & '"'
      end
      if InEncoding
         OutWriteString = OutWriteString & ' encoding="' & InEncoding & '"'
      end
      LOOP I = 1  TO RECORDS(AttribStructure)
        GET(AttribStructure,I)
        OutWriteString = OutWriteString & ' ' & CLIP(AQUE:FieldName) & '="' & CLIP(AQUE:FieldValue) & '"'
      end
      FREE(AttribStructure)
      OutWriteString = OutWriteString & ' ?>' & Mod:Interm
   END

   if IntComment
      xml:AddComment('Created with iQ-XML - Date: ' & format(today(),@d017) & '  Time: ' & format(clock(),@t07))
   end

   MOD:XMLStringInUse = 2
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
ReadFromFile    ROUTINE

    GLO:_XML_XMLFileName = sub(inVersion,2,255)
    GLO:_XML_XMLFileName = CLIP(sub(inVersion,2,255))

    SHARE(XMLText)
    IF ERRORCODE() THEN RETURN(ERRORCODE()).
    SET(XMLTEXT)
    LOOP
      NEXT(XMLTEXT)
      IF ERRORCODE() THEN BREAK.
      I = BYTES(XMLTEXT)
      OutWriteString = OutWriteString & TXT:StandLine[1: I]
    END
    CLOSE(XMLTEXT)

[END]
[END]
[PROCEDURE]
NAME XML:CloseXMLString
PROTOTYPE '(<<BYTE>),STRING'
PARAMETERS '(<<AllClose>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/06/29' '13:35:22'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 IF AllClose = True
    LOOP WHILE RECORDS(XMLStructure)
       XML:CloseParent()
    END
    MOD:AddParent=0
 END

 XMLL:ClearWriter()

 MOD:WriteBytesLength = LEN(OutWriteString)

 RETURN(OutWriteString)
[END]
[END]
[PROCEDURE]
NAME XML:AddStringText
PROTOTYPE '(STRING,<<BYTE>)'
PARAMETERS '(Instr,<<FixUp>)'
[COMMON]
FROM Clarion Source
MODIFIED '2012/12/13' '16:09:09'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
      if mod:XMLStringInUse = 2
         if FixUp = True
            OutWriteString = OutWriteString & XML:ConvertToXML(InStr) & Mod:Interm
         elsif FixUp = 2
            OutWriteString = OutWriteString & InStr
         else
            OutWriteString = OutWriteString & InStr & Mod:Interm
         end
      else
         if FixUp = True
            TXT:STANDLINE = XML:ConvertToXML(Instr)
         end
         txt:standline = InStr
         xmll:AddToLastString(True)
      end

[END]
[END]
[PROCEDURE]
NAME XML:SetElementPrefix
PROTOTYPE '(STRING)'
PARAMETERS '(InPrefix)'
[COMMON]
FROM Clarion Source
MODIFIED '2011/10/05' '10:38:33'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  mod:NameSpace = InPrefix
[END]
[END]
[PROCEDURE]
NAME XML:AddFromGroup
PROTOTYPE '(*GROUP,STRING,<<BYTE>,<<BYTE>,<<BYTE>)'
PARAMETERS '(InGroup,InTag,<<AsAttrib>,<<AutoCloseParent>,<<SkipEmpty>)'
[COMMON]
FROM Clarion Source
MODIFIED '2014/12/14' '15:57:43'
[DATA]
[SCREENCONTROLS]
! PROMPT('Test Field Value:'),USE(?TestFieldValue:Prompt)
! TEXT,USE(TestFieldValue)
[REPORTCONTROLS]
! TEXT,USE(TestFieldValue)
TestFieldValue           STRING(10240)
!!> GUID('82907f2e-a6c8-42ca-b181-48559fa40baf'),PROMPT('Test Field Value:'),HEADER('Test Field Value'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Test Field Len:'),USE(?TestFieldLen:Prompt)
! ENTRY(@n-14),USE(TestFieldLen),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(TestFieldLen),RIGHT(1)
TestFieldLen             LONG
!!> GUID('2aed082b-40b7-4fa4-91b9-d6e2e33b36c2'),PROMPT('Test Field Len:'),HEADER('Test Field Len'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Final Queue:'),USE(?FinalQueue:Prompt)
! ENTRY(@s109),USE(FinalQueue)
[REPORTCONTROLS]
! STRING(@s109),USE(FinalQueue)
FinalQueue               QUEUE,PRE(QUE)
!!> GUID('c8d4b567-c6f2-4fe7-aacd-31444d1b8f2e'),PROMPT('Final Queue:'),HEADER('Final Queue'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Field Name:'),USE(?QUE:FieldName:Prompt)
! ENTRY(@s128),USE(QUE:FieldName)
[REPORTCONTROLS]
! STRING(@s128),USE(QUE:FieldName)
FieldName                  CSTRING(129)
!!> GUID('3a136a69-4696-4db8-9dcc-442565a1c685'),PROMPT('Field Name:'),HEADER('Field Name'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('Actual Name:'),USE(?QUE:ActualName:Prompt)
! ENTRY(@s128),USE(QUE:ActualName)
[REPORTCONTROLS]
! STRING(@s128),USE(QUE:ActualName)
ActualName                 CSTRING(129)
!!> GUID('2bc92ea8-0d20-4d37-aa60-acb341776d72'),PROMPT('Actual Name:'),HEADER('Actual Name'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('Field Level:'),USE(?QUE:FieldLevel:Prompt)
! ENTRY(@n-14),USE(QUE:FieldLevel),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(QUE:FieldLevel),RIGHT(1)
FieldLevel                 LONG
!!> GUID('e0a6cf83-b398-4d67-8a2f-7c51fe6efa5f'),PROMPT('Field Level:'),HEADER('Field Level'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Field Dims:'),USE(?QUE:FieldDims:Prompt)
! ENTRY(@n-14),USE(QUE:FieldDims),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(QUE:FieldDims),RIGHT(1)
FieldDims                  LONG
!!> GUID('a67a0a71-2150-4ed2-bd29-409bb334617e'),PROMPT('Field Dims:'),HEADER('Field Dims'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Field Is Grp:'),USE(?QUE:FieldIsGrp:Prompt)
! ENTRY(@n3),USE(QUE:FieldIsGrp)
[REPORTCONTROLS]
! STRING(@n3),USE(QUE:FieldIsGrp)
FieldIsGrp                 BYTE
!!> GUID('6bcbe31f-6caf-4db6-86fb-e917bbbf1fbb'),PROMPT('Field Is Grp:'),HEADER('Field Is Grp'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Field RRN:'),USE(?QUE:FieldRRN:Prompt)
! ENTRY(@n-14),USE(QUE:FieldRRN),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(QUE:FieldRRN),RIGHT(1)
FieldRRN                   LONG
!!> GUID('2c4fe51f-a246-472f-9904-a78d4fc2768b'),PROMPT('Field RRN:'),HEADER('Field RRN'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
                         END
!!> GUID('7d0bfeaf-ee28-45c5-b605-861c20905d88')
[SCREENCONTROLS]
! PROMPT('j Field Name:'),USE(?jFieldName:Prompt)
! ENTRY(@s128),USE(jFieldName)
[REPORTCONTROLS]
! STRING(@s128),USE(jFieldName)
jFieldName               CSTRING(129)
!!> GUID('ef70b302-2ec1-4529-8422-16c624281020'),PROMPT('j Field Name:'),HEADER('j Field Name'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('k Field Name:'),USE(?kFieldName:Prompt)
! ENTRY(@s128),USE(kFieldName)
[REPORTCONTROLS]
! STRING(@s128),USE(kFieldName)
kFieldName               CSTRING(129)
!!> GUID('41a63946-43fe-4ab3-8e83-a848efa781f5'),PROMPT('k Field Name:'),HEADER('k Field Name'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n-14),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(J),RIGHT(1)
J                        LONG
!!> GUID('2429d936-33e7-46b0-ae87-e11a9754e4fd'),PROMPT('J:'),HEADER('J'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('K:'),USE(?K:Prompt)
! ENTRY(@n-14),USE(K),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(K),RIGHT(1)
K                        LONG
!!> GUID('91e893ad-5e2b-482f-9fc1-cd97b0f30faa'),PROMPT('K:'),HEADER('K'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('m:'),USE(?m:Prompt)
! ENTRY(@n-14),USE(m),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(m),RIGHT(1)
m                        LONG
!!> GUID('a9a0b492-8bf0-4777-9af6-e54e1843ffad'),PROMPT('m:'),HEADER('m'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Really Close:'),USE(?ReallyClose:Prompt)
! ENTRY(@n3),USE(ReallyClose)
[REPORTCONTROLS]
! STRING(@n3),USE(ReallyClose)
ReallyClose              BYTE
!!> GUID('49557c99-6a5d-4e4e-b05c-4f4bd376979a'),PROMPT('Really Close:'),HEADER('Really Close'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Total Queue Records:'),USE(?TotalQueueRecords:Prompt)
! ENTRY(@n-14),USE(TotalQueueRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(TotalQueueRecords),RIGHT(1)
TotalQueueRecords        LONG,AUTO
!!> GUID('c9e1aeef-df3b-4365-b947-82212c9bab64'),PROMPT('Total Queue Records:'),HEADER('Total Queue Records'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('ip:'),USE(?ip:Prompt)
! ENTRY(@n-14),USE(ip),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ip),RIGHT(1)
ip                       LONG
!!> GUID('d9f15e09-c619-4f8c-b019-3274c54faf8f'),PROMPT('ip:'),HEADER('ip'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Current Level:'),USE(?CurrentLevel:Prompt)
! ENTRY(@n-14),USE(CurrentLevel),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(CurrentLevel),RIGHT(1)
CurrentLevel             LONG
!!> GUID('1765d946-5ef1-4220-916c-0c0392dc022d'),PROMPT('Current Level:'),HEADER('Current Level'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Number Of Parents:'),USE(?NumberOfParents:Prompt)
! ENTRY(@n-14),USE(NumberOfParents),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(NumberOfParents),RIGHT(1)
NumberOfParents          LONG
!!> GUID('43795720-7db7-4b27-9da9-294c50d90e42'),PROMPT('Number Of Parents:'),HEADER('Number Of Parents'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Attributes Created:'),USE(?AttributesCreated:Prompt)
! ENTRY(@n3),USE(AttributesCreated)
[REPORTCONTROLS]
! STRING(@n3),USE(AttributesCreated)
AttributesCreated        BYTE
!!> GUID('e58ff731-bced-4088-986d-ef0ff5d597db'),PROMPT('Attributes Created:'),HEADER('Attributes Created'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Elements Only:'),USE(?ElementsOnly:Prompt)
! ENTRY(@n3),USE(ElementsOnly)
[REPORTCONTROLS]
! STRING(@n3),USE(ElementsOnly)
ElementsOnly             BYTE
!!> GUID('c5209895-7f8c-4d75-a605-412130c90043'),PROMPT('Elements Only:'),HEADER('Elements Only'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('All Dims:'),USE(?AllDims:Prompt)
! ENTRY(@n3),USE(AllDims)
[REPORTCONTROLS]
! STRING(@n3),USE(AllDims)
AllDims                  BYTE
!!> GUID('28ae2f5f-6bd8-41df-938a-2b6b177c266f'),PROMPT('All Dims:'),HEADER('All Dims'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Last Dim:'),USE(?LastDim:Prompt)
! ENTRY(@n-14),USE(LastDim),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(LastDim),RIGHT(1)
LastDim                  LONG
!!> GUID('9c7f47e0-8f53-4c42-9b64-b9563223436f'),PROMPT('Last Dim:'),HEADER('Last Dim'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Not Blank:'),USE(?NotBlank:Prompt)
! ENTRY(@n3),USE(NotBlank)
[REPORTCONTROLS]
! STRING(@n3),USE(NotBlank)
NotBlank                 BYTE
!!> GUID('3327b006-bcc6-4249-bf6f-21e0075a31ce'),PROMPT('Not Blank:'),HEADER('Not Blank'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Group Name:'),USE(?GroupName:Prompt)
! ENTRY(@s128),USE(GroupName)
[REPORTCONTROLS]
! STRING(@s128),USE(GroupName)
GroupName                CSTRING(129)
!!> GUID('66f39f80-f80c-4042-8d49-59747c8a805d'),PROMPT('Group Name:'),HEADER('Group Name'),PICTURE(@s128)
[SCREENCONTROLS]
! PROMPT('Once:'),USE(?Once:Prompt)
! ENTRY(@n3),USE(Once)
[REPORTCONTROLS]
! STRING(@n3),USE(Once)
Once                     BYTE
!!> GUID('29269846-30d4-492e-a9a6-7a7d803eb4c1'),PROMPT('Once:'),HEADER('Once'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Root Written:'),USE(?RootWritten:Prompt)
! ENTRY(@n3),USE(RootWritten)
[REPORTCONTROLS]
! STRING(@n3),USE(RootWritten)
RootWritten              BYTE
!!> GUID('340f62cd-3ad2-4201-a390-d0a8449abeea'),PROMPT('Root Written:'),HEADER('Root Written'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Skip Parent Close:'),USE(?SkipParentClose:Prompt)
! ENTRY(@n3),USE(SkipParentClose)
[REPORTCONTROLS]
! STRING(@n3),USE(SkipParentClose)
SkipParentClose          BYTE
!!> GUID('ef1a5dbc-6370-45eb-afe8-340f92c2da46'),PROMPT('Skip Parent Close:'),HEADER('Skip Parent Close'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Skip Blanks:'),USE(?SkipBlanks:Prompt)
! ENTRY(@n3),USE(SkipBlanks)
[REPORTCONTROLS]
! STRING(@n3),USE(SkipBlanks)
SkipBlanks               BYTE
!!> GUID('7ccb8881-e87f-49df-ba02-c7732b29bead'),PROMPT('Skip Blanks:'),HEADER('Skip Blanks'),PICTURE(@n3)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
     ! Setup GetLastString
     ! -------------------
     Mod:LastNeverKill=True
     CLEAR(Mod:LastWrittenString)

     IF NOT OMITTED(5)
        if SkipEmpty = True then SkipBlanks=True.
     END

     Do LoadFieldNames

     XML:CreateParent(InTag)

     if AsAttrib = False
        RootWritten = True
        XML:AddParent()
     end

     CurrentLevel = 0

     LOOP j = 1 to TotalQueueRecords
        GET(FinalQueue,j)

        ! close the parent
        ! ----------------
        if CurrentLevel > 0 and CurrentLevel <> que:FieldLevel !<> CurrentLevel
           Loop (CurrentLevel - Que:fieldLevel) TIMES
              XML:CloseParent()
              NumberOfParents-=1
           end
           CurrentLevel = que:fieldlevel
        end

        if que:fieldisGrp
           if AttributesCreated = True or RootWritten=False
              XML:AddParent()
              AttributesCreated = False
              ElementsOnly = True
           end
           XML:CreateParent(que:ActualName);xml:AddParent()
           NumberOfParents+=1
           GroupName=que:ActualName
           CurrentLevel = que:fieldlevel
           RootWritten=True
           CYCLE
        end

        if que:fielddims < 2
           TestFieldValue = WHAT(InGroup,j)
           TestFieldLen   = LEN(WHAT(InGroup,j))

           if AsAttrib = True and ElementsOnly <> True
              if SkipBlanks = False or TestFieldValue <> ''
                 XML:CreateAttribute(que:ActualName,CLIP(TestFieldValue))
                 AttributesCreated=True
              end
           else
              if TestFieldLen > 10240
                 XML:AddElement(que:ActualName,WHAT(InGroup,j),True)
              else
                 XML:AddElement(que:ActualName,CLIP(TestFieldValue))
              end
           end
        else
          AllDims = False;LastDim = 0
          LOOP m = j TO TotalQueueRecords
            GET(FinalQueue,m)
            if QUE:FieldLevel <> CurrentLevel then break.
            if que:fielddims < 2
               break
            else
               AllDims = True
               LastDim = M
            end
          end

          if AllDims = True
             Once = False
             LOOP k = 1 to 999999
               NotBlank = False
               ReallyClose = False
               LOOP m = j to LastDim
                 GET(FinalQueue,m)
                 TestFieldValue = WHAT(InGroup,m,k)
                 if TestFieldValue <> ''
                    if Once = True
                       if LastDim > j
                          XML:CloseParent()
                          XML:CreateParent(GroupName);xml:AddParent()
                          Once=False
                       else
                          ReallyClose = True
                       end
                    end
                    xml:AddElement(que:ActualName,TestFieldValue)
                    NotBlank = True
                 end
               END
               if j = LastDim and ReallyClose = true
                  XML:CloseParent()
                  Reallyclose = False
               end
               if NotBlank = False then break.
               Once = True
             END
             j = LastDim
          else
              ! Error - so writeout only record #1
              loop m = j to LastDim
                 Get(FinalQueue,m)
                 TestFieldValue = What(InGroup,m,1)
                 if TestFieldValue <> ''
                     xml:AddElement(que:ActualName,clip(testFieldValue))
                 end
              end
          end
          j = LastDim
        end
     end

     if AsAttrib = True
        if AttributesCreated = true
           if AutoCloseParent = true
              XML:AddParent(True)
              SkipParentClose = True
           else
              XML:AddParent()
           end
         end
     end

     LOOP NumberOfParents TIMES
          XML:CloseParent()
     END

     if SkipParentClose <> True
        IF OMITTED(AutoCloseParent) or AutoCloseParent = True
           XML:CloseParent()
        end
     end

     Mod:LastNeverKill=False

     CLEAR(FinalQueue)

[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
LoadFieldNames  ROUTINE

    CurrentLevel = 0

    Loop j = 1 to 1024
          jFieldName = WHO(InGroup,j)
          if jFieldName = '' THEN BREAK.
          QUE:FieldName  = LOWER(jFieldName)
          QUE:ActualName = jFieldName
          QUE:FieldLevel = CurrentLevel
          QUE:FieldDims  = HOWMANY(InGroup,j)
          QUE:FieldIsGrp = ISGROUP(InGroup,j)
          QUE:FieldRRN   = J
          ADD(FinalQueue,+QUE:FieldName)
     end

     loop j = 1 to 1024
          if IsGroup(InGroup,j)
             kFieldname = WHO(InGroup,j)
             que:FieldName = lower(kFieldName)
             get(FinalQueue,+Que:fieldName)
             if ~errorcode()
                CurrentLevel = QUE:FieldLevel + 1
                put(FinalQueue)
             end

             gr &= GETGROUP(InGroup,j)
             loop k = 1 to 1024
                kFieldname = WHO(gr,k)
                if kFieldname = '' then break.

                que:FieldName = lower(kFieldName)
                get(FinalQueue,+Que:fieldName)
                if ~errorcode()
                   QUE:FieldLevel=CurrentLevel
                   put(FinalQueue)
                end
             end

             gr &= NULL
          end
      end

     SORT(FinalQueue,+QUE:FieldRRN)
     TotalQueueRecords = RECORDS(FinalQueue)


     LOOP J = 1 TO RECORDS(FinalQueue)
        GET(FinalQueue,J)
        ! ignore field prefix
        ! -------------------
        ip = instring(':',QUE:FieldName,1,1)
        if ip
           QUE:FieldName  = QUE:FieldName[ip+1 : 50]
           QUE:ActualName = QUE:ActualName[ip+1 : 50]
           PUT(FinalQueue)
        end
     END
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
gr &GROUP


[END]
[END]
[PROCEDURE]
NAME XML:GetLastString
PROTOTYPE '(),STRING'
PARAMETERS '()'
[COMMON]
FROM Clarion Source
MODIFIED '2011/01/05' '13:35:15'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 Return(clip(Mod:LastWrittenString))
[END]
[END]
[PROCEDURE]
NAME XMLL:AddToLastString
PROTOTYPE '(BYTE)'
PARAMETERS '(KillFirst)'
NOEXPORT
[COMMON]
FROM Clarion Source
MODIFIED '2015/06/13' '17:45:05'
[DATA]
[SCREENCONTROLS]
! PROMPT('Y:'),USE(?Y:Prompt)
! ENTRY(@n-14),USE(Y),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(Y),RIGHT(1)
Y                        LONG,AUTO
!!> GUID('0b246c39-f7d1-4031-8a96-3216c92e0d69'),PROMPT('Y:'),HEADER('Y'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    if Mod:StoreString = True
       if Mod:LastNeverKill = False and KillFirst=True
          Mod:lastWrittenString = Txt:standLine
       else
          if Mod:lastWrittenString
             Mod:lastWrittenString = Mod:lastWrittenString & txt:standline & mod:InTerm
          else
             Mod:lastWrittenString = txt:standline & mod:InTerm
          end
       end
    end

    Y = LEN(TXT:STANDLINE)

    IF MOD:InTermL
       TXT:STANDLINE[Y+1] = MOD:Interm[1]
       TXT:STANDLINE[Y+2] = MOD:Interm[2]
       Y+=MOD:InTermL
    end

    APPEND(XMLTEXT ,Y)



[END]
[END]
[PROCEDURE]
NAME XML:SetFieldPicture
PROTOTYPE '(string,string)'
PARAMETERS '(in1,in2)'
[COMMON]
FROM Clarion Source
MODIFIED '2012/03/07' '16:27:15'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  if in2 = ''
     if in1[1] = '*'
        WCQ:FieldName    = CLIP(lower(xml:replace(In1,'*','')))
        get(WildCardQueue,+WCQ:FieldName)
        if ~errorcode()
           DELETE(WildCardQueue)
        end
     else
        que3:FieldName = lower(in1)
        get(PictureQueue,que3:fieldname)
        if ~errorcode()
           DELETE(PictureQueue)
        end
     end
  else
     if in1[1] = '*'
        WCQ:FieldName    = CLIP(lower(xml:replace(In1,'*','')))
        WCQ:FieldPicture = in2
        add(WildCardQueue,+WCQ:FieldName)

     else
        que3:FieldName    = lower(in1)
        que3:FieldPicture = in2
        add(PictureQueue,+que3:FieldName)
     end
  end

  MOD:WildCardRecords=RECORDS(WildCardQueue)
  MOD:PictureQueueRecords=RECORDS(PictureQueue)
[END]
[END]
[PROCEDURE]
NAME XML:AddParentBinary
PROTOTYPE '(BYTE,STRING,<<BYTE>)'
PARAMETERS '(InClose,InFileName,<<InAutoTag>)'
[COMMON]
FROM Clarion Source
MODIFIED '2011/03/06' '16:51:21'
[DATA]
[SCREENCONTROLS]
! ENTRY(@s20),USE(I)
[REPORTCONTROLS]
! STRING(@s20),USE(I)
I                        SIGNED,AUTO
!!> GUID('b1396267-d568-4d5f-8256-8d7f1fa39272'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(loc:BytesWritten)
[REPORTCONTROLS]
! STRING(@s20),USE(loc:BytesWritten)
loc:BytesWritten         SIGNED,AUTO
!!> GUID('de696b8b-cbc7-4b0f-8f32-71e554cd8863'),PROMPT('loc : Bytes Written:'),HEADER('loc : Bytes Written'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('II:'),USE(?II:Prompt)
! ENTRY(@n-14),USE(II),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(II),RIGHT(1)
II                       LONG
!!> GUID('7b6cdc3e-5c57-4a80-a98f-97d9c6430146'),PROMPT('II:'),HEADER('II'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(S),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(S),RIGHT(1)
S                        LONG,AUTO
!!> GUID('0c7438ea-1f1f-4021-b802-41f07b80dbf1'),PROMPT('S:'),HEADER('S'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(L),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(L),RIGHT(1)
L                        LONG,AUTO
!!> GUID('41d6ced9-4600-4389-839d-c4a68e80ab11'),PROMPT('L:'),HEADER('L'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('ll:'),USE(?ll:Prompt),RIGHT
! ENTRY(@n-14),USE(ll),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ll),RIGHT(1)
ll                       LONG
!!> GUID('2b16bec1-8509-4555-a63b-816fbac2296d'),PROMPT('ll:'),HEADER('ll'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(Blk),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(Blk),RIGHT(1)
Blk                      LONG,AUTO
!!> GUID('54a78063-01df-4ded-a40b-6b8655eb5a63'),PROMPT('Blk:'),HEADER('Blk'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(loc:FileSize),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(loc:FileSize),RIGHT(1)
loc:FileSize             LONG,AUTO
!!> GUID('33fb5d9e-d9b4-4af1-8215-b3d3146e1c64'),PROMPT('loc : File Size:'),HEADER('loc : File Size'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('len Inv:'),USE(?lenInv:Prompt)
! ENTRY(@n-14),USE(lenInv),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(lenInv),RIGHT(1)
lenInv                   LONG
!!> GUID('722155db-d7b9-4197-aba6-ae35e12b229a'),PROMPT('len Inv:'),HEADER('len Inv'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('In V:'),USE(?InV:Prompt)
! ENTRY(@s57),USE(InV)
[REPORTCONTROLS]
! STRING(@s57),USE(InV)
InV                      STRING(57)
!!> GUID('8efc8343-b387-42ec-b10b-1b9e73e78b16'),PROMPT('In V:'),HEADER('In V'),PICTURE(@s57)
[SCREENCONTROLS]
! PROMPT('Out V:'),USE(?OutV:Prompt)
! ENTRY(@s128),USE(OutV)
[REPORTCONTROLS]
! STRING(@s128),USE(OutV)
OutV                     STRING(128)
!!> GUID('713e4e5d-7471-417c-b995-aba98cdcbc0b'),PROMPT('Out V:'),HEADER('Out V'),PICTURE(@s128)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   GLO:_XML_LastError = 0

   if omitted(2)
      MOD:WritingBinary = True
   else
      MOD:WritingBinary = InAutoTag + 1
   end

   XML:AddParent()

   MOD:WritingBinary = False

   glo:_XML_xmlbinaryname = InFileName
   SHARE(XMLBase64File)
   IF ERRORCODE()
      GLO:_XML_LastError = ERRORCODE()
   ELSE
       loc:FileSize     = BYTES(XMLBase64File)
       SET(XMLBase64File)
       LOOP
         NEXT(XMLBase64File)
         IF ERRORCODE() THEN BREAK.
         L = BYTES(XMLBase64File)
         if L = 0 THEN BREAK.
         Do AddBase64
       END
       CLOSE(XMLBase64File)
   END

   if InClose = True
      xml:CloseParent()
   END

[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
AddBase64   ROUTINE

  S = 1
  LOOP UNTIL S > L

   IF L - S >= 56
      LenInv = 57
      Inv = B64:StandLine[S : S+56]
      DO GetBase64
   ELSE
      LenInv = (L - S) + 1
      Inv = B64:StandLine[S : L]
      DO GetBase64
      Outv = CLIP(Outv) & '=';BLK+=1
   END

   TXT:StandLine = OutV[1 : BLK]
   Do WriteIt

   S += 57
  END

GetBase64   ROUTINE

  I    = 0
  Blk  = 0
  Outv = ''

  Blk = LenInv / 3

  LOOP I = 1 TO Blk
    xmll:ConvertToBase24(VAL(Inv[I*3-2]),VAL(Inv[I*3-1]),VAL(Inv[I*3]),Outv[I*4-3:I*4]) ! VAL([1]),VAL([2]),VAL([3]),OUTV[1:4]
  END

  IF Blk * 3 < LenInv
    IF Blk * 3 + 1 = LenInv
      II = VAL(INV[LenInv])
      xmll:ConvertToBase24(II,0,0,Outv[Blk*4+1:Blk*4+4])
      Outv[Blk*4+3] = '='
      Outv[Blk*4+4] = '='
    ELSE
      xmll:ConvertToBase24(VAL(Inv[LenInv-1]),VAL(Inv[LenInv]),0,Outv[Blk*4+1:Blk*4+4])
      Outv[Blk*4+4] = '='
    END
    BLK = Blk*4+4
  ELSE
    BLK = Blk * 4
  END


WriteIt ROUTINE

  if mod:XMLStringInUse = 1
     xmll:AddToLastString(True)
  else
     OutWriteString=OutWriteString&clip(txt:standline) & chr(13)
  end

[END]
[END]
[PROCEDURE]
NAME XML:SetNoIndent
PROTOTYPE '(BYTE)'
PARAMETERS '(InType)'
[COMMON]
FROM Clarion Source
MODIFIED '2015/03/18' '10:10:36'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    MOD:NoIndentFlag = InType
[END]
[END]
[PROCEDURE]
NAME XML:HTMLtoPlainText
PROTOTYPE '(*CSTRING,<<STRING>),STRING'
PARAMETERS '(InMessage,<<InStrong>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '16:46:21'
[DATA]
[SCREENCONTROLS]
! ENTRY(@n-14),USE(I)
[REPORTCONTROLS]
! STRING(@n-14),USE(I)
I                        LONG
!!> GUID('d8281c28-9fcc-4e26-8147-12ddad27cb6a'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(J)
[REPORTCONTROLS]
! STRING(@n-14),USE(J)
J                        LONG
!!> GUID('ffd92066-0946-44ec-88cd-c95e91877a5d'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@n3),USE(InField)
[REPORTCONTROLS]
! STRING(@n3),USE(InField)
InField                  BYTE
!!> GUID('c2c254c2-ac0d-4069-ac4d-444b39eba35e'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@s4),USE(CRLF)
[REPORTCONTROLS]
! STRING(@s4),USE(CRLF)
CRLF                     STRING(4)
!!> GUID('cf23f9dd-33af-401b-a34b-b12438b603c1'),PICTURE(@s4)
[SCREENCONTROLS]
! ENTRY(@n3),USE(ReturnValue)
[REPORTCONTROLS]
! STRING(@n3),USE(ReturnValue)
ReturnValue              BYTE
!!> GUID('3d97f3e0-a6ac-4257-bc0d-d6a60a5d46a5'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@s254),USE(LoadingField)
[REPORTCONTROLS]
! STRING(@s254),USE(LoadingField)
LoadingField             CSTRING(255)
!!> GUID('e58d0db9-860e-43bd-9f26-02eceab06311'),PICTURE(@s254)
[SCREENCONTROLS]
! ENTRY(@s254),USE(URLAddress)
[REPORTCONTROLS]
! STRING(@s254),USE(URLAddress)
URLAddress               CSTRING(255)
!!> GUID('f8fad009-8a38-4157-82b0-0acd4f1790ac'),PICTURE(@s254)
[SCREENCONTROLS]
! PROMPT('Skip One TD:'),USE(?SkipOneTD:Prompt)
! ENTRY(@n3),USE(SkipOneTD)
[REPORTCONTROLS]
! STRING(@n3),USE(SkipOneTD)
SkipOneTD                BYTE
!!> GUID('7f63b998-5519-40f8-9e36-09f98acbadb7'),PROMPT('Skip One TD:'),HEADER('Skip One TD'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Skip Till Style:'),AT(0,0),USE(?SkipTillStyle:Prompt)
! ENTRY(@n3),AT(0,0),USE(SkipTillStyle)
[REPORTCONTROLS]
! STRING(@n3),AT(0,0),USE(SkipTillStyle)
SkipTillStyle            BYTE
!!> GUID('12fc0055-ce5a-4a3a-9847-f60e5ee7003b'),PROMPT('Skip Till Style:'),HEADER('Skip Till Style'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Not Started:'),AT(0,0),USE(?NotStarted:Prompt)
! ENTRY(@n3),AT(0,0),USE(NotStarted)
[REPORTCONTROLS]
! STRING(@n3),AT(0,0),USE(NotStarted)
NotStarted               BYTE
!!> GUID('23af1456-8b45-4742-bacc-929bdbd70b53'),PROMPT('Not Started:'),HEADER('Not Started'),PICTURE(@n3),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  OutWriteString  = ''
  LoadingField = ''
  InField      = False

  crlf = chr(13)&chr(10)

  LOOP I = 1 TO LEN(InMessage)

     if InMessage[i] = chr(13) or InMessage[i] = chr(10) then cycle.

     ! IGNORE COMMENTS AND STYLES
     if sub(InMessage,i,2) = '<<!'
        j = instring('-->',inMessage,1,i)
        if j
           j+=2
           i = j
        end
        CYCLE
     END

     IF INMESSAGE[I] = chr(60)
         InField = True
         LoadingField = ''
         CYCLE
     elsif InField = True
         if InMessage[i] = chr(62)
            InField=False
            if upper(sub(LoadingField,1,7)) = 'A HREF='
               j = instring('"',loadingfield,1,1)
               if j
                  LoadingField = clip(sub(loadingfield,j+1,255))
                  j = instring('"',loadingfield,1,1)
                  if j
                     LoadingField = sub(LoadingField,1,j-1)
                  end
               else
                  loadingField = clip(sub(loadingfield,9,255))
               end
               URLAddress = LoadingField
            ELSE
               ! trim off attributes
               ! -------------------
               LoadingField = UPPER(LoadingField)
               J = INSTRING(' ',LoadingField,1,1)
               if j
                  Loadingfield = Loadingfield[1 : j]
               end
               ! -------------------
               IF LoadingField = 'P' or LoadingField = '/P' or LoadingField = 'BR' or LoadingField = 'BR/' or Loadingfield  = 'DIV'
                  OutWriteString=OutWriteString&CRLF
               ELSIF LoadingField = 'TABLE'
                  OutWriteString=OutWriteString&CRLF
               elsif LoadingField = 'TR'
                  SkipOneTD = True
               elsif LoadingField = 'HR'
                  OutWriteString=OutWriteString&'__________' & CRLF
               elsif LoadingField = 'STRONG' OR LoadingField = '/STRONG'
                  IF NOT OMITTED(2)
                     OutWriteString=OutWriteString & InStrong
                  END
               elsif LoadingField = '/TR'
                  SkipOneTD = False
                  OutWriteString=OutWriteString&CRLF
               elsIF LoadingField = 'TD'
                  if SkipOneTD = true
                     SkipOneTD = False
                  else
                     OutWriteString=clip(left(OutWriteString)) & ' |'
                  end
                  OutWriteString=OutWriteString & ' '
               elsif LoadingField = '/A'
                  if URLAddress
                     OutWriteString=OutWriteString & ': ' & URLAddress
                     URLAddress=''
                  END
               elsif UPPER(sub(LoadingField,1,5)) = 'STYLE'
                  SkipTillStyle = True
               elsif UPPER(sub(LoadingField,1,6)) = '/STYLE'
                  SkipTillStyle = False
               end
            end
            CYCLE
         end
     end

     if SkipTillStyle and InField=False then cycle.

     IF InMessage[i] = '&'
         IF upper(sub(InMessage,i,6)) = '&NBSP;'
            if InField = True
               LoadingField = LoadingField & ' '
            else
               OutWriteString = OutWriteString & ' '
            end
            I+=5
         ELSIF sub(InMessage,i,5) = '&amp;'
            if InField = True
               LoadingField = LoadingField & '&'
            else
               OutWriteString = OutWriteString & '&'
            end
            I+=4
         ELSIF sub(InMessage,i,6) = '&quot;'
            if InField = True
               LoadingField = LoadingField & '"'
            else
               OutWriteString = OutWriteString & '"'
            end
            I+=5
         ELSIF sub(InMessage,i,6) = '&apos;'
            if InField = True
               LoadingField = LoadingField & ''''
            else
               OutWriteString = OutWriteString & ''''
            end
            I+=5
         ELSIF sub(InMessage,i,7) = '&#8217;'
            if InField = True
               LoadingField = LoadingField & ''''
            else
               OutWriteString = OutWriteString & ''''
            end
            I+=6
         ELSIF sub(InMessage,i,7) = '&#8220;' or sub(InMessage,i,7) = '&#8221;'
            if InField = True
               LoadingField = LoadingField & '"'
            else
               OutWriteString = OutWriteString & '"'
            end
            I+=6
         ELSIF sub(InMessage,i,8) = '&middot;'
            if InField = True
               LoadingField = LoadingField & '.'
            else
               OutWriteString = OutWriteString & '.'
            end
            I+=7
         ELSE
            if InField = True
               LoadingField = LoadingField & InMessage[i]
            else
               OutWriteString = OutWriteString & InMessage[i]
            end
         END
      ELSE
        if InField = True
           LoadingField = LoadingField & InMessage[i]
        else
           if NotStarted = false
              if inMessage[i] > chr(32) and inMessage[i] < chr(128)
                 NotStarted = true
              end
           end
           IF NotStarted = True
              OutWriteString = OutWriteString & InMessage[i]
           END
        end
      END
   END

   return(OutWriteString)



[END]
[END]
[PROCEDURE]
NAME XML:AddFromFile
PROTOTYPE '(*FILE,STRING,STRING,<<BYTE>),LONG'
PARAMETERS '(*InFile,GroupTag,RowTag,<<OpenTheFile>)'
[COMMON]
FROM Clarion Source
MODIFIED '2012/03/27' '19:03:59'
[DATA]
[SCREENCONTROLS]
! PROMPT('Total Records:'),USE(?TotalRecords:Prompt)
! ENTRY(@n-14),USE(TotalRecords),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(TotalRecords),RIGHT(1)
TotalRecords             LONG
!!> GUID('17e1ad6a-8629-4e13-aaf4-130e19d0443b'),PROMPT('Total Records:'),HEADER('Total Records'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
Rec &GROUP
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    if OpenTheFile = True
       OPEN(InFile)
       IF ERRORCODE() THEN SHARE(InFile).
       IF ERRORCODE()
          GLO:_XML_LastError = ERRORCODE()
          RETURN(-1)
       END
    end

    Rec &= InFile{PROP:Record}

    XML:CreateParent(GroupTag)
    XML:CreateAttribute('Filename',NAME(infile))
    XML:CreateAttribute('Driver',infile{prop:driver})
    XML:CreateAttribute('Fields',infile{prop:fields})
    xml:AddParent()

    SET(InFile)
    LOOP
      NEXT(InFile)
      IF ERRORCODE() THEN BREAK.
      xml:AddFromGroup(Rec,RowTag)
      TotalRecords+=1
    END

    XML:CloseParent()

    if OpenTheFile = True
       CLOSE(InFile)
    end

    RETURN(TotalRecords)

[END]
[END]
[PROCEDURE]
NAME XMLL:ClearWriter
[COMMON]
FROM Clarion Source
MODIFIED '2015/03/17' '16:25:05'
[DATA]
[SCREENCONTROLS]
! PROMPT('msa:'),USE(?msa:Prompt)
! ENTRY(@n-14),USE(msa),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(msa),RIGHT(1)
msa                      LONG,AUTO
!!> GUID('7e6dcd44-0563-405b-b04d-e5735e9b2d0b'),PROMPT('msa:'),HEADER('msa'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('msb:'),USE(?msb:Prompt)
! ENTRY(@n-14),USE(msb),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(msb),RIGHT(1)
msb                      LONG,AUTO
!!> GUID('ae2b1b5b-5b87-4d01-a51c-a721938ebc1c'),PROMPT('msb:'),HEADER('msb'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('msf:'),USE(?msf:Prompt)
! ENTRY(@s10),USE(msf),DECIMAL(14)
[REPORTCONTROLS]
! STRING(@s10),USE(msf),DECIMAL(14)
msf                      STRING(10),AUTO
!!> GUID('5f263b89-0f6d-44e6-81ef-9826f2ac9ebf'),PROMPT('msf:'),HEADER('msf'),PICTURE(@s10),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('msh:'),USE(?msh:Prompt)
! ENTRY(@n-14),USE(msh),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(msh),RIGHT(1)
msh                      LONG,AUTO
!!> GUID('a3a5f273-96f9-4e45-9edc-ad4e00d6f62b'),PROMPT('msh:'),HEADER('msh'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('msm:'),USE(?msm:Prompt)
! ENTRY(@n-14),USE(msm),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(msm),RIGHT(1)
msm                      LONG,AUTO
!!> GUID('3fe8a759-08da-43aa-9513-689f6e3372c6'),PROMPT('msm:'),HEADER('msm'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 Mod:LastNeverKill = false

 mod:XMLStringInUse=0
 MOD:AddParent = 0
 MOD:IgnoreComments = false

 CLEAR(AttribStructure)
 CLEAR(XMLStructure)
 CLEAR(PictureQueue)
 CLEAR(WildCardQueue)
 FREE(XMLStructure)
 FREE(AttribStructure)
 FREE(PictureQueue)
 FREE(WildCardQueue)

 CLEAR(GLO:_XML_LastLoadedFile)
 CLEAR(GLO:_XML_LastError)
 CLEAR(GLO:_xml_InEncoding)

 MOD:PictureQueueRecords=0
 MOD:WildCardRecords=0

 CLEAR(IndentValue)

 ! SETUP TIMES
 ! -----------
 MSa = CLOCK() - MOD:WriteTimeStart

 MSb = MSa % 100
 MSf = format(MSa,@t04)

 msh = sub(MSf,1,2)
 msm = sub(MSf,4,2)

 if msh > 0
    MOD:WriteTimeLength=msh & ' hour and '
 end
 if msm > 0
    if msm = 1
       MOD:WriteTimeLength = MOD:WriteTimeLength & '1 min '
    ELSE
       MOD:WriteTimeLength = MOD:WriteTimeLength & msm & ' mins '
    END
 end

 if msm > 0 or msh > 0
    MOD:WriteTimeLength = MOD:WriteTimeLength & sub(MSf,7,2) & ' seconds'
 else
    MOD:WriteTimeLength = MOD:WriteTimeLength & sub(MSf,7,2) & '.' & format(MSb,@n02) & ' seconds'
 end



[END]
[END]
[PROCEDURE]
NAME XML:SetIgnoreEmpty
PROTOTYPE '(BYTE,BYTE)'
PARAMETERS '(InA,InE)'
[COMMON]
FROM Clarion Source
MODIFIED '2015/03/17' '12:00:43'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  MOD:IgnoreEmptyA=InA
  MOD:IgnoreEmptyE=InE
[END]
[END]
[PROCEDURE]
NAME XML:GetTime
PROTOTYPE '(),STRING'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/25' ' 8:23:53'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 RETURN(MOD:WriteTimeLength)
[END]
[END]
[PROCEDURE]
NAME XML:AddChild
PROTOTYPE '(STRING)'
PARAMETERS '(InString)'
[COMMON]
FROM Clarion Source
MODIFIED '2015/06/13' '17:40:13'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    mod:AddedChild = True
    XML:CreateParent(InString)
    XML:AddParent()
    mod:AddedChild = False

[END]
[END]
[PROCEDURE]
NAME XML:GetSize
PROTOTYPE '(),ULONG'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/25' ' 8:23:44'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    return(MOD:WriteBytesLength)
[END]
[END]
[PROCEDURE]
NAME XML:SetNoComments
PROTOTYPE '(BYTE InFlag)'
PARAMETERS '(BYTE InFlag)'
[COMMON]
FROM Clarion Source
MODIFIED '2015/03/17' '16:24:36'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    MOD:IgnoreComments = InFlag
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM Clarion GENERATED
MODIFIED '2005/04/07' '18:45:59'
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME XML:ConvertFromXML
PROTOTYPE '(*CSTRING),STRING'
PARAMETERS '(Invalue)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/03/31' '10:15:37'
[DATA]
[SCREENCONTROLS]
! PROMPT('Work Value:'),USE(?WorkValue:Prompt)
! TEXT,USE(WorkValue)
[REPORTCONTROLS]
! TEXT,USE(WorkValue)
WorkValue                CSTRING(10241),AUTO
!!> GUID('da034992-c4e8-47f5-87d9-bed845d1c136'),PROMPT('Work Value:'),HEADER('Work Value'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('Work Value 2:'),USE(?WorkValue2:Prompt)
! ENTRY(@s255),USE(WorkValue2)
[REPORTCONTROLS]
! STRING(@s255),USE(WorkValue2)
WorkValue2               CSTRING(10241),AUTO
!!> GUID('bb3ab09c-89ff-4818-a066-79ced00f9b55'),PROMPT('Work Value 2:'),HEADER('Work Value 2'),PICTURE(@s255),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Check Value:'),USE(?CheckValue:Prompt)
! ENTRY(@s6),USE(CheckValue)
[REPORTCONTROLS]
! STRING(@s6),USE(CheckValue)
CheckValue               STRING(6),AUTO
!!> GUID('15c6f836-917b-4539-9977-50a130799455'),PROMPT('Check Value:'),HEADER('Check Value'),PICTURE(@s6)
[SCREENCONTROLS]
! PROMPT('Check Value 2:'),USE(?CheckValue2:Prompt)
! ENTRY(@s1),USE(CheckValue2)
[REPORTCONTROLS]
! STRING(@s1),USE(CheckValue2)
CheckValue2              STRING(1),AUTO
!!> GUID('dda434cc-e18b-4641-be46-985555d5e737'),PROMPT('Check Value 2:'),HEADER('Check Value 2'),PICTURE(@s1)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('8e2e716b-c4af-419e-8182-6026ab1d4303'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n-14),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(J),RIGHT(1)
J                        LONG,AUTO
!!> GUID('0fd35d9c-ab50-4652-b080-6511ef3aceb7'),PROMPT('J:'),HEADER('J'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('L:'),USE(?L:Prompt)
! ENTRY(@n-14),USE(L),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(L),RIGHT(1)
L                        LONG
!!> GUID('96f1ee20-b6cc-4380-af34-deae1614606c'),PROMPT('L:'),HEADER('L'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Start I:'),USE(?StartI:Prompt)
! ENTRY(@n-14),USE(StartI),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(StartI),RIGHT(1)
StartI                   LONG,AUTO
!!> GUID('506f6a39-2b39-4a5c-8a64-d8408c2decaf'),PROMPT('Start I:'),HEADER('Start I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('C : Ascii:'),USE(?C:Ascii:Prompt)
! ENTRY(@s6),USE(C:Ascii)
[REPORTCONTROLS]
! STRING(@s6),USE(C:Ascii)
C:Ascii                  STRING(6)
!!> GUID('97e46559-d42e-4eba-b514-937769ab734a'),PROMPT('C : Ascii:'),HEADER('C : Ascii'),PICTURE(@s6)
[SCREENCONTROLS]
! PROMPT('S : Ascii:'),USE(?S:Ascii:Prompt)
! ENTRY(@n-14),USE(S:Ascii),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(S:Ascii),RIGHT(1)
S:Ascii                  LONG
!!> GUID('618afb9d-cb60-4798-8384-2af2624f9aea'),PROMPT('S : Ascii:'),HEADER('S : Ascii'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 WorkValue = InValue

 WorkValue = XML:ReplaceNC(WorkValue,'&amp;','&')
 WorkValue = XML:ReplaceNC(WorkValue,'&apos;','''')
 WorkValue = XML:ReplaceNC(WorkValue,'&gt;','>')
 WorkValue = XML:ReplaceNC(WorkValue,'&lt;','<')
 WorkValue = XML:ReplaceNC(WorkValue,'&quot;','"')
 WorkValue = XML:ReplaceNC(WorkValue,chr(160),' ')
 WorkValue = XML:ReplaceNC(WorkValue,chr(194),'')

 StartI=1

 LOOP

    I=INSTRING('&#',WorkValue,1,StartI)

    IF I = 0 THEN BREAK.

    CheckValue = sub(WorkValue,i,6)

    IF CheckValue[3] = ';'
       C:Ascii = '0'
       L=3
    ELSIF CheckValue[4] = ';'
       C:Ascii = CheckValue[3]
       L=4
    ELSIF CheckValue[5] = ';'
       C:Ascii = CheckValue[3:4]
       L=5
    ELSIF CheckValue[6] = ';'
       C:Ascii = CheckValue[3:5]
       L=6
    ELSE
       BREAK
    END

    ! convert from HEX
    if C:Ascii[1] = 'x' or C:Ascii[1] = 'X'
       C:Ascii = sub(C:Ascii,2,3)
       S:Ascii = EVALUATE('0' & CLIP(C:Ascii) & 'h')
    else
        IF NUMERIC(C:Ascii)
           S:Ascii = C:Ascii  ! convert CHAR to SHORT
        ELSE
           StartI = I + L + 1
           CYCLE
        END
    end

    if S:Ascii > 255
       StartI = I + L + 1
       CYCLE
    END

    CheckValue2 = CHR(S:Ascii)

    if I > 1
       WorkValue = WorkValue[1 : i-1] & CheckValue2 & sub(WorkValue,I+L,10240)
    else
       WorkValue = CheckValue2 & sub(WorkValue,i+L,10240)
    end

 END

 if GLO:_xml_InEncodingL = True and GLO:SkipExtended = False
    WorkValue2 = ''
    LOOP I = 1 to len(WorkValue)
         j = VAL(WorkValue[i])
         if j = 160
            WorkValue2 = WorkValue2 & ' '
         elsif j >= 11000000b
            IF j = 226 AND val(WorkValue[i+1]) = 130 AND val(WorkValue[i+2]) = 172
                WorkValue2 = WorkValue2 & ''
                I+=2
            else
                WorkValue2 = WorkValue2 & chr( BOR ( BSHIFT(BAND(j,11b),6) , BAND(val(WorkValue[i+1]),111111b) ) )
                I+=1
            end
         else
            WorkValue2 = WorkValue2 & WorkValue[i]
         end
     end
     WorkValue = WorkValue2
 end


 RETURN(WorkValue)

[END]
[END]
[PROCEDURE]
NAME XML:ConvertToXML
PROTOTYPE '(STRING,<<BYTE>),STRING'
PARAMETERS '(Invalue,<<AsHTML>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/05/09' ' 8:48:52'
[DATA]
[SCREENCONTROLS]
! PROMPT('Return Time Stamp:'),USE(?ReturnTimeStamp:Prompt)
! ENTRY(@s25),USE(ReturnTimeStamp)
[REPORTCONTROLS]
! STRING(@s25),USE(ReturnTimeStamp)
ReturnTimeStamp          STRING(25),AUTO
!!> GUID('de124cff-b9b0-49f5-add7-d0052ba6c9ed'),PROMPT('Return Time Stamp:'),HEADER('Return Time Stamp'),PICTURE(@s25),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Check Value:'),USE(?CheckValue:Prompt)
! ENTRY(@s6),USE(CheckValue)
[REPORTCONTROLS]
! STRING(@s6),USE(CheckValue)
CheckValue               CSTRING(7),AUTO
!!> GUID('afe5611a-4c9d-4685-b335-7647b6d6d863'),PROMPT('Check Value:'),HEADER('Check Value'),PICTURE(@s6)
[SCREENCONTROLS]
! PROMPT('Check Chr:'),USE(?CheckChr:Prompt)
! ENTRY(@s1),USE(CheckChr)
[REPORTCONTROLS]
! STRING(@s1),USE(CheckChr)
CheckChr                 STRING(1),AUTO
!!> GUID('83b4d934-8d5d-4b80-be18-368ddb4e5649'),PROMPT('Check Chr:'),HEADER('Check Chr'),PICTURE(@s1)
[SCREENCONTROLS]
! PROMPT('Work Value:'),USE(?WorkValue:Prompt)
! TEXT,USE(WorkValue)
[REPORTCONTROLS]
! TEXT,USE(WorkValue)
WorkValue                STRING(10240),AUTO
!!> GUID('48cb0f34-4f5e-4da3-a703-b7573da18ed8'),PROMPT('Work Value:'),HEADER('Work Value'),PICTURE(@s255)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG,AUTO
!!> GUID('aacfcc73-6ef5-4f7a-9427-39fb5fd78e21'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n-14),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(J),RIGHT(1)
J                        LONG,AUTO
!!> GUID('6b618975-9d67-4d2a-a6e9-c1dc6ee2b9b2'),PROMPT('J:'),HEADER('J'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('X:'),USE(?X:Prompt)
! ENTRY(@n-7),USE(X),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(X),RIGHT(1)
X                        SHORT
!!> GUID('ba91e10b-f0cd-4655-a2d5-1caaabe625a5'),PROMPT('X:'),HEADER('X'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Start I:'),USE(?StartI:Prompt)
! ENTRY(@n-14),USE(StartI),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(StartI),RIGHT(1)
StartI                   LONG,AUTO
!!> GUID('4f2cbe99-3b73-40ae-a173-209415b32bbd'),PROMPT('Start I:'),HEADER('Start I'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Converted:'),USE(?Converted:Prompt)
! ENTRY(@n3),USE(Converted)
[REPORTCONTROLS]
! STRING(@n3),USE(Converted)
Converted                BYTE
!!> GUID('244b2142-b360-456d-ad0a-1c6ad91676c7'),PROMPT('Converted:'),HEADER('Converted'),PICTURE(@n3)
[SCREENCONTROLS]
! PROMPT('Extra Space:'),USE(?ExtraSpace:Prompt)
! ENTRY(@n3),USE(ExtraSpace)
[REPORTCONTROLS]
! STRING(@n3),USE(ExtraSpace)
ExtraSpace               BYTE
!!> GUID('0cc3971a-fb39-41bb-b93e-fd24d536081f'),PROMPT('Extra Space:'),HEADER('Extra Space'),PICTURE(@n3)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  StartI    = LEN(inValue)
  IF StartI = 0 THEN RETURN('').

  if InValue[1] = '*'
     if InValue = '*ISO8601GMT'
        ReturnTimeStamp = XML:ConvertToGMT()
        Return(ReturnTimeStamp)
     END
  END

  WorkValue = Invalue
  J=1

  LOOP
    IF J > StartI then BREAK.

    ! If converting to HTML - Convert BR and NBSP's
    ! ---------------------------------------------
    if AsHTML = True
       CASE WorkValue[j]
       OF CHR(13)
          CheckValue = '<<br>';i=4
          DO ConvertIt
          ExtraSpace = False
          j+=1
          CYCLE
       OF ' '
          if ExtraSpace = True
             CheckValue = '&nbsp;';i = 5
             DO ConvertIt
             CYCLE
          ELSE
             ExtraSpace = True
          end
       ELSE
          ExtraSpace = False
       END
    END

    CheckChr = WorkValue[j]
    X = VAL(CheckChr)

    ! if converting UTF-8, Change Single Byte to Double-Byte
    ! ------------------------------------------------------
    if GLO:_xml_InEncodingL = True
       if x > 127
          if x = 128
             CheckValue = chr(226) & chr(130) & chr(172)
             I = 2
          else
             CheckValue = chr(BOR(BSHIFT(x,-6),11000000b))  &  chr(BOR(10000000b , BAND(x, 111111b )))
             I = 1
          end
          Do ConvertIt
          J+=1
          CYCLE
       end
    END

    IF X < 32
       CASE X
       OF 9 OROF 10 OROF 13
          CheckValue  = '&#' & format(x,@n02) & ';';i=4
          Do ConvertIt
          CYCLE
       ELSE
          WORKVALUE[j] = ' '
          Converted = True
          J+=1
          CYCLE
       end
    end

    ! Convert all regular non-xml characters
    ! --------------------------------------
    CASE CheckChr
    OF ' '
       J+=1
    OF  '&'
       if sub(Workvalue,j,5) = '&amp;'
          j=j+5
       else
          if glo:HTMLEncoding = True
             CheckValue  = '&#38;';i=4
          else
             CheckValue  = '&amp;';i=4
          end
          Do ConvertIt
       end
    OF ''''
       if glo:HTMLEncoding = True
          CheckValue  = '&#39;';i=4
       else
          CheckValue  = '&apos;';i=5
       end
       Do ConvertIt
    OF '"'
       if glo:HTMLEncoding = True
          CheckValue  = '&#34;';i=4
       else
          CheckValue  = '&quot;';i=5
       end
       Do ConvertIt
    OF '>'
       if glo:HTMLEncoding = True
          CheckValue  = '&#62;';i=4
       else
          CheckValue  = '&gt;';i=3
       end
       Do ConvertIt
    OF '<'
       if glo:HTMLEncoding = True
          CheckValue  = '&#60;';i=4
       else
          CheckValue  = '&lt;';i=3
       end
       Do ConvertIt
    ELSE
       J+=1
    END
  END

  if Converted = False
     RETURN(InValue)
  else
     RETURN(CLIP(WorkValue))
  end


[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
ConvertIt   ROUTINE

   if J = 1
      WorkValue = CheckValue & sub(WorkValue,2,StartI)
   elsif J > 1
      WorkValue = WorkValue[1 : J-1] & CheckValue & sub(WorkValue,j+1,StartI)
   end

   StartI+=i
   j+=i
   Converted = True
[END]
[END]
[PROCEDURE]
NAME XML:ConvertToGMT
PROTOTYPE '(<<LONG>,<<LONG>),STRING'
PARAMETERS '(<<InDate>,<<InTime>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/24' '16:53:32'
[DATA]
[SCREENCONTROLS]
! PROMPT('Use Date:'),USE(?UseDate:Prompt)
! ENTRY(@n-14),USE(UseDate),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(UseDate),RIGHT(1)
UseDate                  LONG
!!> GUID('ce5330ee-f0f2-4410-a656-b6c1aa21a16b'),PROMPT('Use Date:'),HEADER('Use Date'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('use Time:'),USE(?useTime:Prompt)
! ENTRY(@n-14),USE(useTime),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(useTime),RIGHT(1)
useTime                  LONG
!!> GUID('398ee655-83b7-454b-a4db-71b320a3b519'),PROMPT('use Time:'),HEADER('use Time'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Return String:'),USE(?ReturnString:Prompt)
! ENTRY(@s25),USE(ReturnString)
[REPORTCONTROLS]
! STRING(@s25),USE(ReturnString)
ReturnString             STRING(25),AUTO
!!> GUID('67440197-0b46-4453-88b9-0a881e493b33'),PROMPT('Return String:'),HEADER('Return String'),PICTURE(@s25),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  if ~omitted(1)
     UseDate = InDate
  else
     UseDate = Today()
  end
  if ~omitted(2)
     UseTime = InTime
  else
     UseTime = clock()
  end

  CASE GetTimeZoneInformation (TZ)
  OF 0                              ! TIME_ZONE_ID_UNKNOWN
    Bias = 0
  OF 1                              ! TIME_ZONE_ID_STANDARD
    Bias = TZ.StandardBias
  OF 2                              ! TIME_ZONE_ID_DAYLIGHT
    Bias = CHOOSE (TZ.DayLightDate.wMonth <> 0, TZ.DayLightBias, 0)
  END
  Bias += TZ.Bias

  IF Bias <= 0
    BiasSign = '+'
    Bias = -Bias
  ELSE
    BiasSign = '-'
  END

  ! 2016-02-24T16:50:58-08:00
  ReturnString = FORMAT(UseDate,@D010-) & 'T' & FORMAT(UseTime, @T04) & BiasSign & FORMAT (INT(Bias/60),@N02) & ':' & FORMAT (Bias % 60, @N02)

  RETURN(ReturnString)

[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
TZ         LIKE(XML_TimeZoneInfo),AUTO
Bias       LONG
BiasSign   STRING(1)
[END]
[END]
[PROCEDURE]
NAME XMLL:ConvertToBase24
PROTOTYPE '(BYTE,BYTE,BYTE,*STRING)'
PARAMETERS '(HH,MM,LL,INTO)'
NOEXPORT
[COMMON]
FROM Clarion Source
MODIFIED '2011/01/05' '15:22:26'
[DATA]
[SCREENCONTROLS]
! ENTRY(@n3),USE(B6)
[REPORTCONTROLS]
! STRING(@n3),USE(B6)
B6                       BYTE,AUTO
!!> GUID('839ad2f7-6148-4c03-b89e-47b1e6e7046b'),PICTURE(@n3)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   ! First 6 bits? What does the 'high bit is counted first' expression mean?
   ! I'm assuming top 6 bits of hh
   B6 = BSHIFT(hh,-2)
   Into[1] = XMLEncode[B6+1]
   ! Second 6 bits become bottom 2 of hh (up 4) and top 4 of m (down 4)
   B6 = BOR(BAND(BSHIFT(hh,4),030H),BSHIFT(mm,-4))
   Into[2] = XMLEncode[B6+1]
   ! Third 6 bits are bottom 4 of m (up two) and top 2 of l (down 6)
   B6 = BOR(BAND(BSHIFT(mm,2),03CH),BSHIFT(ll,-6))
   Into[3] = XMLEncode[B6+1]
   ! Last 6 come from bottom 6 of ll
   Into[4] = XMLEncode[BAND(ll,03FH)+1]
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
XMLEncode STRING('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=')
[END]
[END]
[PROCEDURE]
NAME XMLL:ConvertFromBase32
PROTOTYPE '(STRING Inv, *STRING Outv),SHORT'
PARAMETERS '(Inv, Outv)'
NOEXPORT
[COMMON]
FROM Clarion Source
MODIFIED '2011/03/07' '11:00:27'
[DATA]
[SCREENCONTROLS]
! ENTRY(@n-7),USE(F)
[REPORTCONTROLS]
! STRING(@n-7),USE(F)
F                        SIGNED
!!> GUID('9a03db3b-5325-4ea5-bae5-a2f9c23a5043'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@s4),USE(Store)
[REPORTCONTROLS]
! STRING(@s4),USE(Store)
Store                    STRING(4)
!!> GUID('74bafc65-91e6-47bf-b87d-862b8adfc222'),PICTURE(@s4)
[SCREENCONTROLS]
! ENTRY(@n3),USE(SH)
[REPORTCONTROLS]
! STRING(@n3),USE(SH)
SH                       BYTE
!!> GUID('11bb7c4b-48ff-48b5-a2d5-673c41f0a11a'),INITIAL('0'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(OutF)
[REPORTCONTROLS]
! STRING(@n-7),USE(OutF)
OutF                     SIGNED
!!> GUID('5f3bb737-8b2b-4b90-9106-faaaec517435'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n3),USE(B)
[REPORTCONTROLS]
! STRING(@n3),USE(B)
B                        BYTE,DIM(3)
!!> GUID('bab0e1a6-7c19-4352-963b-189b7ba8ac3d'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@n3),USE(N)
[REPORTCONTROLS]
! STRING(@n3),USE(N)
N                        BYTE,AUTO
!!> GUID('12b408f5-d3cf-4fe5-a6dc-a6c825ebdbad'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@n3),USE(H)
[REPORTCONTROLS]
! STRING(@n3),USE(H)
H                        BYTE
!!> GUID('ac25f715-9220-49d0-ac9f-2e3117e58ddc'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@n3),USE(M)
[REPORTCONTROLS]
! STRING(@n3),USE(M)
M                        BYTE
!!> GUID('55849b47-89a4-4b89-bc1e-20850b5dfd6b'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@n3),USE(L)
[REPORTCONTROLS]
! STRING(@n3),USE(L)
L                        BYTE
!!> GUID('6d6503f3-73e8-4a21-a51c-49f7c42dd203'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@s4),USE(SFROM)
[REPORTCONTROLS]
! STRING(@s4),USE(SFROM)
SFROM                    STRING(4)
!!> GUID('a68ce306-e5a4-4564-86e8-6b37b1150803'),PICTURE(@s4)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  F = 1
  OutF = 1

  LOOP WHILE F <= LEN(Inv)
    IF INSTRING(Inv[F],XMLEncode)
      SH += 1
      Store[SH] = Inv[F]
      IF Sh = 4
         do FinalTake
      END
    END
    F += 1
  END

  IF SH <> 0
     DO FinalTake
  END

  RETURN OutF - 1

FinalTake   ROUTINE

  N = 0;H = 0;M = 0;L = 0
  SFROM = STORE
  Do Take32ROUTINE

  Outv[OutF] = CHR(H)
  OutF += 1
  IF N = 1 THEN EXIT .
  Outv[OutF] = CHR(M)
  OutF += 1
  IF N = 2 THEN EXIT .
  Outv[OutF] = CHR(L)
  OutF += 1
  Sh = 0

Take32ROUTINE   ROUTINE

  DATA

Buff  BYTE,DIM(4)
I     BYTE

  CODE

  LOOP I = 1 TO sh
    Buff[I] = INSTRING(SFrom[I],xmlEncode)
    Buff[I] -= 1
  END

  ! Whole of first 6 bits up two and first two of second (down 4)
  h = BOR(BSHIFT(Buff[1],2),BSHIFT(Buff[2],-4))
  IF Buff[3] = 64
     N = 1
     EXIT
  END

  ! Middle is bottom 4 bits of second (up 4) and top 4 bits of third (down 2)
  m = BOR(BSHIFT(Buff[2],4),BSHIFT(Buff[3],-2))
  IF Buff[4] = 64
     N = 2
     EXIT
  END

  ! Bottom is bottom two bits of third (up 6) and whole of fourth
  l = BOR(BSHIFT(Buff[3],6),Buff[4])
  N = 3
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
XMLEncode STRING('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=')
[END]
[END]
[PROCEDURE]
NAME XML:ConvertTimeStampToLocal
PROTOTYPE '(STRING,*LONG,*LONG,BYTE)'
PARAMETERS '(STRING InTime,*LONG OutDate,*LONG OutTime,BYTE UTCOnly)'
[COMMON]
FROM Clarion Source
MODIFIED '2014/04/22' '14:30:22'
[DATA]
[SCREENCONTROLS]
! PROMPT('Use Date:'),USE(?UseDate:Prompt)
! ENTRY(@s10),USE(UseDate)
[REPORTCONTROLS]
! STRING(@s10),USE(UseDate)
UseDate                  STRING(10)
!!> GUID('81d5f7ba-f0ac-4619-b5b9-47740941f9fc'),PROMPT('Use Date:'),HEADER('Use Date'),PICTURE(@s10),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Use Time:'),USE(?UseTime:Prompt)
! ENTRY(@s25),USE(useTime)
[REPORTCONTROLS]
! STRING(@s25),USE(useTime)
UseTime                  STRING(25)
!!> GUID('9e4d9583-0281-469a-ab0c-f7f9a14c00fb'),PROMPT('Use Time:'),HEADER('Use Time'),PICTURE(@s25),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Act Time:'),USE(?ActTime:Prompt)
! ENTRY(@s20),USE(ActTime)
[REPORTCONTROLS]
! STRING(@s20),USE(ActTime)
ActTime                  CSTRING(21)
!!> GUID('a2b06c2c-a91d-43d9-bc53-ae569906c0f1'),PROMPT('Act Time:'),HEADER('Act Time'),PICTURE(@s20),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Zon Time:'),USE(?ZonTime:Prompt)
! ENTRY(@s20),USE(ZonTime)
[REPORTCONTROLS]
! STRING(@s20),USE(ZonTime)
ZonTime                  CSTRING(21)
!!> GUID('5f6e8cd0-9342-4f14-bc47-3992e6bbcc0d'),PROMPT('Zon Time:'),HEADER('Zon Time'),PICTURE(@s20),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Zon Identifier:'),USE(?ZonIdentifier:Prompt)
! ENTRY(@s1),USE(ZonIdentifier),DECIMAL(14)
[REPORTCONTROLS]
! STRING(@s1),USE(ZonIdentifier),DECIMAL(14)
ZonIdentifier            STRING(1)
!!> GUID('25667bf7-501c-44d3-92cf-47b47e0f7137'),PROMPT('Zon Identifier:'),HEADER('Zon Identifier'),PICTURE(@s1),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Work Date:'),USE(?WorkDate:Prompt)
! ENTRY(@n-14),USE(WorkDate),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(WorkDate),RIGHT(1)
WorkDate                 LONG
!!> GUID('949b8a78-bb2b-40f4-b18d-517624591b3d'),PROMPT('Work Date:'),HEADER('Work Date'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Work Time:'),USE(?WorkTime:Prompt)
! ENTRY(@n-14),USE(WorkTime),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(WorkTime),RIGHT(1)
WorkTime                 LONG
!!> GUID('3be1661f-d379-42b4-9ce0-51a533ed04a6'),PROMPT('Work Time:'),HEADER('Work Time'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('WHH:'),USE(?WHH:Prompt)
! ENTRY(@n-14),USE(WHH),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(WHH),RIGHT(1)
WHH                      LONG
!!> GUID('6f2e0560-9145-4562-b82f-73259698681c'),PROMPT('WHH:'),HEADER('WHH'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('WMM:'),USE(?WMM:Prompt)
! ENTRY(@n-14),USE(WMM),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(WMM),RIGHT(1)
WMM                      LONG
!!> GUID('d097902b-18f2-48fa-a002-a398c1488d60'),PROMPT('WMM:'),HEADER('WMM'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('HH:'),USE(?HH:Prompt)
! ENTRY(@n-14),USE(HH),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(HH),RIGHT(1)
HH                       LONG
!!> GUID('f545d394-6261-43eb-aa96-8d54936891b3'),PROMPT('HH:'),HEADER('HH'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('MM:'),USE(?MM:Prompt)
! ENTRY(@n-14),USE(mm),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(mm),RIGHT(1)
MM                       LONG
!!> GUID('959464f5-cf92-4c95-94f4-3587b43c3488'),PROMPT('MM:'),HEADER('MM'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-7),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(i),RIGHT(1)
i                        SHORT
!!> GUID('fb1a9b0d-cf41-4f43-a7bf-80b5163a75b9'),PROMPT('i:'),HEADER('i'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   UseDate=sub(InTime,1,10)
   if UseDate[5] = '-'
      WorkDate = DEFORMAT(UseDate,@d010-)
      if upper(sub(InTime,11,1)) = 'T'
         UseTime = sub(InTime,12,25)
         Do ConvertToUTC
         Do RunConversion
         if UtcOnly <> True
             Do AdjustTime
             Do RunConversion
         end
      end

      OutDate = WorkDate
      OutTime = WorkTime

   end

[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
ConvertToUTC ROUTINE

   LOOP I = 1 TO LEN(CLIP(UseTime))
      IF useTime[i] = 'Z' or useTime[i] = '+' or useTime[i] = '-'
         ZonIdentifier = useTime[i]
      else
         if UseTime[i] <> ':'
            if ZonIdentifier
               ZonTime = ZonTime & usetime[i]
            else
               ActTime = ActTime & usetime[i]
            end
         end
      END
   END

   case len(ActTime)
   of 2
      ActTime = ActTime & ':00:00'
   of 4
      ActTime = sub(ActTime,1,2) & ':' & sub(ActTime,3,2) & ':00'
   of 6
      ActTime = sub(ActTime,1,2) & ':' & sub(ActTime,3,2) & ':' & sub(ActTime,5,2)
   end

   case len(ZonTime)
   of 2
      ZonTime = ZonTime & ':00'
   of 4
      ZonTime = sub(ZonTime,1,2) & ':' & sub(zonTime,3,2)
   of 6
      ZonTime = sub(ZonTime,1,2) & ':' & sub(zonTime,3,2)
   end

   if ActTime <> ''
      WorkTime = deformat(ActTime,@t04)
   end

[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
AdjustTime  ROUTINE

    UseTime = XML:ConvertToGMT(0,0)
    UseTime = sub(useTime,20,6)
    ZonIdentifier = UseTime[1]
    ZonTime = sub(UseTime,2,5)

    if ZonIdentifier = '+'
       ZonIdentifier = '-'
    elsif ZonIdentifier = '-'
       ZonIdentifier = '+'
    end


[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
RunConversion   ROUTine

    CASE UPPER(ZonIdentifier)
    OF 'Z' OROF ''
      EXIT
    OF '+'
      HH = SUB(ZonTime,1,2)
      HH = HH * 60 * 6000
      MM = SUB(ZonTime,4,2)
      if MM > 0 then HH = HH + (MM * 6000).
      if WorkTime > HH
         WorkTime = WorkTime - HH
      else
         HH = HH - WorkTime
         WorkTime = 8640000 - HH
         WorkDate = WorkDate - 1
      end
   OF '-'
      HH = SUB(ZonTime,1,2)
      HH = HH * 60 * 6000
      MM = SUB(ZonTime,4,2)
      if MM > 0 then HH = HH + (MM * 6000).

      if WorkTime + HH > 8640000
         WorkDate = WorkDate + 1
         HH =  HH - (8640000 - Worktime)
         WorkTime = HH
      else
         WorkTime = WorkTime + HH
      end
   END
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM Clarion GENERATED
MODIFIED '2005/04/15' '18:11:32'
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME XMLL:FixUpClarionList
PROTOTYPE '(*QUEUE)'
PARAMETERS '(WorkQueue)'
NOEXPORT
[COMMON]
FROM Clarion Window
MODIFIED '2012/03/09' '17:12:47'
[DATA]
LocalRequest             LONG
!!> GUID('e8264e0c-c807-4b95-949f-cce1031f30e3')
OriginalRequest          LONG
!!> GUID('6afb537a-45c7-47b1-ac04-d2e7985036ca')
LocalResponse            LONG
!!> GUID('41e0ac97-8f3d-496c-8731-84b13c29a1ad')
FilesOpened              LONG
!!> GUID('f32477f5-6b2b-4f8e-8324-d0f470bb12ff')
WindowOpened             LONG
!!> GUID('09a4037f-b5ce-4bcb-a3e9-cdcf10a1497f')
WindowInitialized        LONG
!!> GUID('a53e1da5-23a7-4867-9b62-173c019b4351')
ForceRefresh             LONG
!!> GUID('93e9e5cc-6e86-47cb-9c0b-b44143b1305d')
[SCREENCONTROLS]
! ENTRY(@s20),USE(LClarionList)
[REPORTCONTROLS]
! STRING(@s20),USE(LClarionList)
LClarionList             QUEUE,PRE(CL)
!!> GUID('55891d7a-c205-4894-b206-8cd4f8b91e6c'),PICTURE(@s90)
[SCREENCONTROLS]
! ENTRY(@s128),USE(CL:FieldName)
[REPORTCONTROLS]
! STRING(@s128),USE(CL:FieldName)
FieldName                  STRING(128)
!!> GUID('29f6d29d-15fb-4891-98a3-1c7b969280a9'),PROMPT('Field Name:'),HEADER('Field Name'),PICTURE(@s128)
[SCREENCONTROLS]
! ENTRY(@s20),USE(CL:FieldType)
[REPORTCONTROLS]
! STRING(@s20),USE(CL:FieldType)
FieldType                  STRING(20)
!!> GUID('51742f21-0c91-4099-8569-bba145d06bf0'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(CL:FieldLength)
[REPORTCONTROLS]
! STRING(@s20),USE(CL:FieldLength)
FieldLength                STRING(20)
!!> GUID('78c60521-2a72-4314-b50e-8443b3f31754'),PICTURE(@s20)
                         END
!!> GUID('07a6e1ca-16c7-4295-8772-382541d09efb')
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG
!!> GUID('469639a6-3dcd-4317-ae88-40847b17915c'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Work Type:'),USE(?WorkType:Prompt)
! ENTRY(@s20),USE(WorkType)
[REPORTCONTROLS]
! STRING(@s20),USE(WorkType)
WorkType                 STRING(20)
!!> GUID('75189c11-bb20-4616-b5cd-41fc48b0c31d'),PROMPT('Work Type:'),HEADER('Work Type'),PICTURE(@s20)
[SCREENCONTROLS]
! PROMPT('Work Length:'),USE(?WorkLength:Prompt)
! ENTRY(@n-7),USE(WorkLength),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(WorkLength),RIGHT(1)
WorkLength               SHORT
!!> GUID('9c927af0-9318-4892-9fe5-3ea49e95fe4b'),PROMPT('Work Length:'),HEADER('Work Length'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Old Index:'),USE(?OldIndex:Prompt)
! ENTRY(@n-7),USE(OldIndex),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(OldIndex),RIGHT(1)
OldIndex                 SHORT
!!> GUID('d49e6a99-bd15-4755-a8ae-2370bad0cda7'),PROMPT('Old Index:'),HEADER('Old Index'),PICTURE(@n-7),JUSTIFY(RIGHT,1)
[PROMPTS]
%ReturnValue FIELD  ()
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (1)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (1)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ButtonAction DEPEND %Control DEFAULT TIMES 6
WHEN  ('') ('No Special Action')
WHEN  ('?Delete') ('No Special Action')
WHEN  ('?List1') ('No Special Action')
WHEN  ('?OkButton') ('No Special Action')
WHEN  ('?WorkLength') ('No Special Action')
WHEN  ('?WorkType') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 2
WHEN  ('?Delete') ('')
WHEN  ('?OkButton') ('')

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?Delete') ('')
WHEN  ('?OkButton') ('')

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 2
WHEN  ('?Delete') ()
WHEN  ('?OkButton') ()

%ButtonThread DEPEND %Control LONG TIMES 2
WHEN  ('?Delete') (0)
WHEN  ('?OkButton') (0)

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 6
WHEN  ('') ('25000')
WHEN  ('?Delete') ('25000')
WHEN  ('?List1') ('25000')
WHEN  ('?OkButton') ('25000')
WHEN  ('?WorkLength') ('25000')
WHEN  ('?WorkType') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?Delete') ('')
WHEN  ('?OkButton') ('')

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 2
WHEN  ('?Delete') ()
WHEN  ('?OkButton') ()

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 2
WHEN  ('?Delete') (0)
WHEN  ('?OkButton') (0)

%ButtonRequest DEPEND %Control DEFAULT TIMES 6
WHEN  ('') ('None')
WHEN  ('?Delete') ('None')
WHEN  ('?List1') ('None')
WHEN  ('?OkButton') ('None')
WHEN  ('?WorkLength') ('None')
WHEN  ('?WorkType') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?Delete') ('')
WHEN  ('?OkButton') ('')

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 2
WHEN  ('?Delete') ()
WHEN  ('?OkButton') ()

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 1
WHEN  ('?WorkLength') ()

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 1
WHEN  ('?WorkLength') ()

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 1
WHEN  ('?WorkLength') ('')

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 1
WHEN  ('?WorkLength') ()

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 1
WHEN  ('?WorkLength') ()

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 1
WHEN  ('?WorkLength') ('')

%PostLookupDuringValidate DEPEND %Control LONG TIMES 6
WHEN  ('') (1)
WHEN  ('?Delete') (1)
WHEN  ('?List1') (1)
WHEN  ('?OkButton') (1)
WHEN  ('?WorkLength') (1)
WHEN  ('?WorkType') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 6
WHEN  ('')TIMES 0
WHEN  ('?Delete')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?OkButton')TIMES 0
WHEN  ('?WorkLength')TIMES 0
WHEN  ('?WorkType')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 6
WHEN  ('')TIMES 0
WHEN  ('?Delete')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?OkButton')TIMES 0
WHEN  ('?WorkLength')TIMES 0
WHEN  ('?WorkType')TIMES 0

%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabDisableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 3
WHEN  ('')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?OkButton')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 3
WHEN  ('')TIMES 0
WHEN  ('?List1')TIMES 0
WHEN  ('?OkButton')TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 3
WHEN  ('') ('Default')
WHEN  ('?List1') ('Default')
WHEN  ('?OkButton') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 1
WHEN  ('') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 1
WHEN  ('') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('AIBtn0')

%AIEnableMimicControl DEPEND %Control LONG TIMES 1
WHEN  ('') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('?List1')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %AfterWindowOpening
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 LOOP I = 1 TO RECORDS(WORKQUEUE)
   GET(WORKQUEUE,I)
   LClarionList = WorkQueue
   CL:FieldType = 'STRING'
   CL:FieldLength = 20
   ADD(LClarionList)
 END
[END]
EMBED %ControlPreEventHandling
[INSTANCES]
WHEN '?List1'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    DO UpdateScreen
[END]
[END]
WHEN '?WorkType'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    do UpdateScreen
[END]
[END]
WHEN '?WorkLength'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 Do UpdateScreen
[END]
WHEN 'NewSelection'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 Do UpdateScreen
[END]
[END]
WHEN '?OkButton'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[GROUP]
PRIORITY 4000
INSTANCE 1
[END]
[END]
WHEN '?Delete'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   DO UpdateScreen
   GET(LClarionList,CHOICE(?list1))
   if ~errorcode()
      delete(LClarionList)
   end
   DISPLAY()
[END]
[END]
[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
UpdateScreen    ROUTINE

  IF OldIndex
     GET(LClarionList,OldIndex)
     cl:FieldType = WorkType
     cl:FieldLength = WorkLength
     put(LClarionList)
  END

  GET(LClarionList,CHOICE(?LIST1))
  WorkType = CL:FieldType
  WorkLength = CL:FieldLength

  OldIndex = choice(?List1)

  DISPLAY()
[END]
EMBED %AfterWindowClosing
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 CLEAR(WORKQUEUE)
 FREE(WORKQUEUE)

 LOOP I = 1 TO RECORDS(LClarionList)
   GET(LClarionList,I)
   WorkQueue = LClarionList
   ADD(WORKQUEUE)
 END
[END]
[END]
[ADDITION]
NAME Clarion CloseCurrentWindow
[INSTANCE]
INSTANCE 1
[WINDOW]
Window  WINDOW('Field Adjustments'),AT(,,283,163),FONT('Tahoma',8,,FONT:regular),DOUBLE,CENTER, |
          GRAY,IMM,SYSTEM
          LIST,AT(4,3,273,137),USE(?List1),VSCROLL,GRID(COLOR:Silver),FORMAT('140L(2)|M~' & |
            'Field Name~@s35@80L(2)|M~Field Type~@s20@80L(2)|M~Length~@s20@'),FROM(LClarionList), |
            #FIELDS(CL:FieldName,CL:FieldType,CL:FieldLength),#ORIG(?List1)
          COMBO(@s20),AT(4,144,85,13),USE(WorkType),DROP(10),FORMAT('80L(2)|M@s20@'),FROM('STRING|CST' & |
            'RING|BYTE|SHORT|LONG'),#FIELDS(WorkType),#ORIG(?Combo1)
          SPIN(@s5),AT(93,144,43,13),USE(WorkLength),#ORIG(?Spin1)
          BUTTON('&Delete'),AT(184,145,45,14),USE(?Delete),#ORIG(?Button2)
          BUTTON('&Close'),AT(233,145,45,14),USE(?OkButton),DEFAULT
        END

[PROCEDURE]
NAME XMLL:SaveWindow
PROTOTYPE '(STRING)'
PARAMETERS '(ProcedureName)'
NOEXPORT
[COMMON]
FROM Clarion Source
MODIFIED '2012/03/23' '17:32:26'
[DATA]
[SCREENCONTROLS]
! ENTRY(@s20),USE(Info)
[REPORTCONTROLS]
! STRING(@s20),USE(Info)
Info                     GROUP,PRE()
!!> GUID('fdbd8471-1e87-4b5a-a769-4561adf407c7'),PICTURE(@s2)
[SCREENCONTROLS]
! ENTRY(@s20),USE(X)
[REPORTCONTROLS]
! STRING(@s20),USE(X)
X                          SIGNED
!!> GUID('89701f23-0d5a-4a0f-b237-3e500d8a4943'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(Y)
[REPORTCONTROLS]
! STRING(@s20),USE(Y)
Y                          SIGNED
!!> GUID('97ae35c5-c245-4007-9cbb-6e5672735913'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(W)
[REPORTCONTROLS]
! STRING(@s20),USE(W)
W                          SIGNED
!!> GUID('96634cc7-7757-4e02-8b11-4f90a0801551'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(H)
[REPORTCONTROLS]
! STRING(@s20),USE(H)
H                          SIGNED
!!> GUID('51bcace0-46ea-4865-91f3-561f648a692d'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@n3),USE(Maximized)
[REPORTCONTROLS]
! STRING(@n3),USE(Maximized)
Maximized                  BYTE
!!> GUID('1af65f55-484b-4f5a-8e08-3b0e92162e99'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@n3),USE(Minimized)
[REPORTCONTROLS]
! STRING(@n3),USE(Minimized)
Minimized                  BYTE
!!> GUID('fd995471-bbbd-451d-9c8b-9d79d9476868'),PICTURE(@n3)
                         END
!!> GUID('029a41ea-b6bd-4546-ab0b-16bf94a0ca00')
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
     Info.Maximized = CHOOSE (TARGET{PROP:Maximize} <> 0)
     Info.Minimized = CHOOSE (TARGET{PROP:Iconize} <> 0)

     IF NOT Info.Minimized AND NOT Info.Maximized
       Info.X = TARGET{PROP:XPos}
       Info.Y = TARGET{PROP:YPos}

       IF TARGET{PROP:Resize}
         Info.W = TARGET{PROP:Width}
         Info.H = TARGET{PROP:Height}
       END
     END

    PUTREG(REG_LOCAL_MACHINE,'SOFTWARE\IQXML\' & ProcedureName ,'Maximize', CHOOSE (NOT Info.Maximized, 'No', 'Yes'))
    PUTREG(REG_LOCAL_MACHINE,'SOFTWARE\SoftVelocity\Clarion7','Minimize', CHOOSE (NOT Info.Minimized, 'No', 'Yes'))

    PUTREG(REG_LOCAL_MACHINE,'SOFTWARE\IQXML\' & ProcedureName ,'xPOS', info.x)
    PUTREG(REG_LOCAL_MACHINE,'SOFTWARE\IQXML\' & ProcedureName ,'yPOS', info.y)
    PUTREG(REG_LOCAL_MACHINE,'SOFTWARE\IQXML\' & ProcedureName ,'Height', info.H)
    PUTREG(REG_LOCAL_MACHINE,'SOFTWARE\IQXML\' & ProcedureName ,'Width', info.W)



[END]
[END]
[PROCEDURE]
NAME XMLL:RestoreWindow
PROTOTYPE '(STRING)'
PARAMETERS '(ProcedureName)'
NOEXPORT
[COMMON]
FROM Clarion Source
MODIFIED '2010/11/01' '19:57:51'
[DATA]
[SCREENCONTROLS]
! ENTRY(@n3),USE(IsMax)
[REPORTCONTROLS]
! STRING(@n3),USE(IsMax)
IsMax                    BYTE,AUTO
!!> GUID('4323bcfc-569d-4e57-9e69-a809e5ac5958'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@s20),USE(Info)
[REPORTCONTROLS]
! STRING(@s20),USE(Info)
Info                     GROUP,PRE()
!!> GUID('baf84b46-92cb-411a-a8eb-1646573e6658'),PICTURE(@s3)
[SCREENCONTROLS]
! ENTRY(@s20),USE(X)
[REPORTCONTROLS]
! STRING(@s20),USE(X)
X                          SIGNED
!!> GUID('ee41e16c-511c-4f38-a25a-e25b13bff723'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(Y)
[REPORTCONTROLS]
! STRING(@s20),USE(Y)
Y                          SIGNED
!!> GUID('f5b50f63-4f98-431d-a15b-1bf87b344a5b'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(W)
[REPORTCONTROLS]
! STRING(@s20),USE(W)
W                          SIGNED
!!> GUID('14352b75-9faa-45cf-9b39-ebb19712559d'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@s20),USE(H)
[REPORTCONTROLS]
! STRING(@s20),USE(H)
H                          SIGNED
!!> GUID('3856cf31-4d41-4d62-a6e0-e2e593aa06d6'),PICTURE(@s20)
[SCREENCONTROLS]
! ENTRY(@n3),USE(Maximized)
[REPORTCONTROLS]
! STRING(@n3),USE(Maximized)
Maximized                  BYTE
!!> GUID('b86b6051-6f00-42b0-889c-ac03a4c7f70e'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@n3),USE(Minimized)
[REPORTCONTROLS]
! STRING(@n3),USE(Minimized)
Minimized                  BYTE
!!> GUID('a7626d37-d8ad-4325-9d2e-5e4f6e808729'),PICTURE(@n3)
[SCREENCONTROLS]
! ENTRY(@n3),USE(Got)
[REPORTCONTROLS]
! STRING(@n3),USE(Got)
Got                        BYTE
!!> GUID('c97d59d5-98d6-42ed-93de-b800651c8a7a'),PICTURE(@n3)
                         END
!!> GUID('61bc25ca-f92e-4490-b890-edcd514e5ec7')
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
     Info.Got = True

     CASE GETREG(REG_LOCAL_MACHINE,'SOFTWARE\IQXML\' & ProcedureName ,'Maximize')
     OF 'No'
       Info.Maximized = FALSE
     OF 'Yes'
       Info.Maximized = TRUE
     ELSE
       Info.Got = FALSE
     END
     IF Info.Got
        Info.Minimized = GETREG(REG_LOCAL_MACHINE,'SOFTWARE\IQXML\' & ProcedureName ,'Minimize')

        Info.X = GETREG(REG_LOCAL_MACHINE,'SOFTWARE\IQXML\' & ProcedureName ,'xPOS')
        Info.Y = GETREG(REG_LOCAL_MACHINE,'SOFTWARE\IQXML\' & ProcedureName ,'yPOS')
        Info.W = GETREG(REG_LOCAL_MACHINE,'SOFTWARE\IQXML\' & ProcedureName ,'Width')
        Info.H = GETREG(REG_LOCAL_MACHINE,'SOFTWARE\IQXML\' & ProcedureName ,'Height')

        IsMax = TARGET{PROP:Maximize}

        IF NOT Info.Maximized AND IsMax
          TARGET{PROP:Maximize} = FALSE
        END

        TARGET{PROP:XPos} = Info.X
        TARGET{PROP:YPos} = Info.Y

        IF TARGET{PROP:Resize}
          IF Info.W <> 0
            TARGET{PROP:Width} = Info.W
          END
          IF Info.H <> 0
            TARGET{PROP:Height} = Info.H
          END
        END

        IF Info.Maximized AND NOT IsMax
          TARGET{PROP:Maximize} = TRUE
        END

        TARGET{PROP:Iconize} = Info.Minimized
     END
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM Clarion GENERATED
MODIFIED '2012/02/02' '10:11:40'
[DATA]
[SCREENCONTROLS]
! PROMPT('PARSEQUEUE:'),USE(?PARSEQUEUE:Prompt)
! ENTRY(@s20),USE(PARSEQUEUE)
[REPORTCONTROLS]
! STRING(@s20),USE(PARSEQUEUE)
PARSEQUEUE               QUEUE,PRE(PRQUE),THREAD
!!> GUID('0726d6a9-9309-4ee1-9d8b-5930c722e6c0'),PROMPT('PARSEQUEUE:'),HEADER('PARSEQUEUE'),PICTURE(@s20),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('QUEUEVALUE:'),USE(?PRQUE:QUEUEVALUE:Prompt)
! ENTRY(@s255),USE(PRQUE:QUEUEVALUE)
[REPORTCONTROLS]
! STRING(@s255),USE(PRQUE:QUEUEVALUE)
QUEUEVALUE                 CSTRING(2048)
!!> GUID('f9879869-3237-4664-8b37-c3d901e0badd'),PROMPT('QUEUEVALUE:'),HEADER('QUEUEVALUE'),PICTURE(@s255),TYPEMODE(INS)
                         END
!!> GUID('8fd10ee0-a8d4-4832-bb44-f4666ee56558')
[SCREENCONTROLS]
! PROMPT('PRS : QUEUENUM:'),USE(?PRS:QUEUENUM:Prompt)
! ENTRY(@n-14),USE(PRS:QUEUENUM),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(PRS:QUEUENUM),RIGHT(1)
PRS:QUEUENUM             LONG,THREAD
!!> GUID('ec10901a-8a40-4b36-9292-44dea360bb46'),PROMPT('PRS : QUEUENUM:'),HEADER('PRS : QUEUENUM'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME XML:Parse
PROTOTYPE '(STRING,STRING,STRING),LONG'
PARAMETERS '(IN1,INPARSE,INQUOTE)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '16:40:32'
[DATA]
[SCREENCONTROLS]
! PROMPT('len 1:'),USE(?len1:Prompt)
! ENTRY(@n-14),USE(len1),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(len1),RIGHT(1)
len1                     LONG,AUTO
!!> GUID('36bb219c-c38c-45a7-946c-478f54d7e8a1'),PROMPT('len 1:'),HEADER('len 1'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Len Idx:'),USE(?LenIdx:Prompt)
! ENTRY(@n-14),USE(LenIdx),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(LenIdx),RIGHT(1)
LenIdx                   LONG
!!> GUID('30eb9a9c-046c-4d87-8520-adf0e95608a8'),PROMPT('Len Idx:'),HEADER('Len Idx'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG,AUTO
!!> GUID('cc0673b0-e40f-4d8e-a725-21a5b9738396'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('on:'),USE(?on:Prompt)
! ENTRY(@n3),USE(on)
[REPORTCONTROLS]
! STRING(@n3),USE(on)
on                       BYTE
!!> GUID('891b9248-8200-4da1-bdf8-fa31d48c62b6'),PROMPT('on:'),HEADER('on'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Work Field:'),USE(?WorkField:Prompt)
! ENTRY(@s255),USE(WorkField)
[REPORTCONTROLS]
! STRING(@s255),USE(WorkField)
WorkField                CSTRING(2048)
!!> GUID('9b878c3d-2647-4e6b-a587-486c35d2e0fd'),PROMPT('Work Field:'),HEADER('Work Field'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    len1 = len(IN1)
    I = 1

    FREE(PARSEQUEUE)
    CLEAR(PARSEQUEUE)
    PRS:QUEUENUM=0

    IF LEN(InParse) = 1
       Do SingleParse
    ELSE
       Do EasyParse
    END

    I = RECORDS(PARSEQUEUE)

    RETURN(I)

[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
EasyParse   ROUTINE

    LenIdx = 1

    LOOP

       IF LenIdx > len1 THEN BREAK.

       I = INSTRING(INPARSE,IN1,1,LenIdx)

       CASE I
       of 0
          PRQUE:QUEUEVALUE = IN1[LenIdx : len1]
          ADD(PARSEQUEUE)
          BREAK

       OF LenIdx
          PRQUE:QUEUEVALUE = ' '
          ADD(PARSEQUEUE)

       ELSE
          WorkField = IN1[LenIdx : I-1]
          PRQUE:QUEUEVALUE = WorkField
          ADD(PARSEQUEUE)
       END

       LenIdx = I + LEN(INPARSE)

    END


[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
SingleParse ROUTINE


    LOOP
       LOOP
         if I > len1 THEN BREAK.
         IF in1[I] = INPARSE And ON = false
            BREAK
         ELSIF INQuote AND INQuote = in1[I]

            if i < len1
               IF ON = True and in1[i+1] = inquote
                  WORKFIELD = WORKFIELD & IN1[I]
                  I+=2
                  CYCLE
               END
            END

            IF ON = FALSE AND WORKFIELD <> ''       ! SOMETHING ALREADY IN THE FIELD SO CONSIDER IT ALL VALID
               WORKFIELD = WORKFIELD & IN1[I]
            ELSE
               IF ON = False
                  ON = True
               ELSE
                  ON = False
               end
            END
         ELSE
            WORKFIELD = WORKFIELD & IN1[I]
         END
         I+=1
       END
       PRQUE:QUEUEVALUE = WORKFIELD
       ADD(PARSEQUEUE)
       WORKFIELD  = ''
       IF I > LEN1 THEN BREAK.
       i+=1
    END
[END]
[END]
[PROCEDURE]
NAME XML:ParseRead
PROTOTYPE '(),STRING'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '16:50:13'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    IF PRS:QUEUENUM < RECORDS(PARSEQUEUE)
       PRS:QUEUENUM+=1
       GET(PARSEQUEUE,PRS:QUEUENUM)
       RETURN(PRQUE:QUEUEVALUE)
    else
       RETURN('')
    END

[END]
[END]
[PROCEDURE]
NAME XML:ParseEmpty
[COMMON]
FROM Clarion Source
MODIFIED '2012/02/02' '13:28:07'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 FREE(PARSEQUEUE)
 CLEAR(PARSEQUEUE)
 PRS:QUEUENUM=0
[END]
[END]
[PROCEDURE]
NAME XML:ExtractPortion
PROTOTYPE '(STRING,STRING,STRING),STRING'
PARAMETERS '(InText,InFind,InType)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '16:45:12'
[DATA]
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG
!!> GUID('dd2ff2db-aab0-43a1-8ffe-4cfecb68dd8a'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('j:'),USE(?j:Prompt)
! ENTRY(@n-14),USE(j),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(j),RIGHT(1)
j                        LONG
!!> GUID('766b6628-e4fc-4197-8b20-bfb93d8b6595'),PROMPT('j:'),HEADER('j'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('k:'),USE(?k:Prompt)
! ENTRY(@n-14),USE(k),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(k),RIGHT(1)
k                        LONG
!!> GUID('8c612896-a5da-4f9f-b6aa-ea00e19094aa'),PROMPT('k:'),HEADER('k'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  I = LEN(InFind)
  J = INSTRING(inFind,InText,1,1)

  if j = 0
     if InType = 'r' or InType = 'l'
        return(InText)
     else
        return('')
     end
  else
     case InType
     of 'l' orof 'L'
        IF J = 1
           return('')
        else
           return(intext[1:j-1])
        end
     of 'r' orof 'R'
        k = len(InText)
        if J + I > K
           return('')
        else
           return(intext[j+i : k])
        end
     end
  end

  return('')
[END]
[END]
[PROCEDURE]
NAME XML:ParseBreak
PROTOTYPE '(STRING,STRING,*STRING,*STRING)'
PARAMETERS '(STRING InVal,STRING InSep,*STRING OutLeft,*STRING OutRight)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/24' '17:21:31'
[DATA]
[SCREENCONTROLS]
! PROMPT('s Len:'),USE(?sLen:Prompt)
! ENTRY(@n-14),USE(sLen),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(sLen),RIGHT(1)
sLen                     LONG
!!> GUID('994a78cc-a420-4c31-8038-af30e5886cd7'),PROMPT('s Len:'),HEADER('s Len'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END

  sLen = instring(InSep,InVal,1,1)

  IF SLEN = 1
     OutLeft = ''
     OutRight = sub(InVal,2,len(InVal))
     OutRight = clip(OutRight)
  ELSIF sLen > 1
     OutLeft = sub(InVal,1,sLen-1)
     OutRight = sub(InVal,sLen+1,len(InVal))
     OutRight = clip(OutRight)
  else
     OutLeft = InVal
     OutRight= ''
  end
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM Clarion GENERATED
MODIFIED '2016/01/06' '11:13:13'
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SA:GetDOW
PROTOTYPE '(LONG,<<BYTE>),STRING'
PARAMETERS '(LONG InDate,<<BYTE MaxCharacters>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '16:30:48'
[DATA]
[SCREENCONTROLS]
! PROMPT('Return S:'),USE(?ReturnS:Prompt)
! ENTRY(@s10),USE(ReturnS)
[REPORTCONTROLS]
! STRING(@s10),USE(ReturnS)
ReturnS                  CSTRING(11)
!!> GUID('f8b22124-e039-48e6-a23d-c7e54c808efe'),PROMPT('Return S:'),HEADER('Return S'),PICTURE(@s10),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 if inDate < 8
    execute InDate
    ReturnS = 'Sunday'
    ReturnS = 'Monday'
    ReturnS = 'Tuesday'
    ReturnS = 'Wednesday'
    ReturnS = 'Thursday'
    ReturnS = 'Friday'
    ReturnS = 'Saturday'
    end
 else
    execute (InDate % 7) + 1
    ReturnS = 'Sunday'
    ReturnS = 'Monday'
    ReturnS = 'Tuesday'
    ReturnS = 'Wednesday'
    ReturnS = 'Thursday'
    ReturnS = 'Friday'
    ReturnS = 'Saturday'
    end
 END

 IF MaxCharacters > 0
    IF MaxCharacters < 11
       ReturnS = ReturnS[1 : MaxCharacters]
    END
 END

 RETURN(ReturnS)



[END]
[END]
[PROCEDURE]
NAME SA:GetMonthName
PROTOTYPE '(LONG,<<BYTE>),STRING'
PARAMETERS '(LONG InDate,<<BYTE MaxCharacters>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/10' '21:06:07'
[DATA]
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG,AUTO
!!> GUID('5b43714f-9bf5-4c73-a3c2-f8c913b6c6b7'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Return S:'),USE(?ReturnS:Prompt)
! ENTRY(@s20),USE(ReturnS)
[REPORTCONTROLS]
! STRING(@s20),USE(ReturnS)
ReturnS                  CSTRING(21)
!!> GUID('146b9143-71f9-41d1-aa4a-b059244de4a9'),PROMPT('Return S:'),HEADER('Return S'),PICTURE(@s20),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    if inDate > 12
       i = MONTH(InDate)
    else
       i = InDate
    end

    execute i
    ReturnS = 'January'
    ReturnS = 'February'
    ReturnS = 'March'
    ReturnS = 'April'
    ReturnS = 'May'
    ReturnS = 'June'
    ReturnS = 'July'
    ReturnS = 'August'
    ReturnS = 'September'
    ReturnS = 'October'
    ReturnS = 'November'
    ReturnS = 'December'
    end

    IF MaxCharacters > 0
       ReturnS = ReturnS[1 : MaxCharacters]
    end

    return(ReturnS)


[END]
[END]
[PROCEDURE]
NAME SA:TimeSinceNow
PROTOTYPE '(LONG,BYTE,<<LONG>),STRING'
PARAMETERS '(LONG InTime,BYTE ShowMilli,<<LONG OutTime>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/04/19' '12:15:19'
[DATA]
[SCREENCONTROLS]
! PROMPT('MS a:'),USE(?MSa:Prompt)
! ENTRY(@n-14),USE(MSa),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(MSa),RIGHT(1)
MSa                      LONG,AUTO
!!> GUID('80f43cc2-6900-4386-ac69-9f30fc68761d'),PROMPT('MS a:'),HEADER('MS a'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('MS b:'),USE(?MSb:Prompt)
! ENTRY(@n-14),USE(MSb),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(MSb),RIGHT(1)
MSb                      LONG,AUTO
!!> GUID('d24192fa-3f16-4292-840c-96e05bbacc49'),PROMPT('MS b:'),HEADER('MS b'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Return S:'),USE(?ReturnS:Prompt)
! ENTRY(@s20),USE(ReturnS)
[REPORTCONTROLS]
! STRING(@s20),USE(ReturnS)
ReturnS                  CSTRING(21)
!!> GUID('c8cd35f9-2209-42a1-93bf-03a9dccfcf71'),PROMPT('Return S:'),HEADER('Return S'),PICTURE(@s20),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  if OutTime > 0
     MSa = OutTime - InTime
  else
     MSa = CLOCK() - InTime
  end

  case ShowMilli
  of 1
     MSb = MSa % 10
     IF MSb = 0 THEN MSa+=1.
     ReturnS = format(msa,@t04) & '.' & format(MSB,@n01)
  of 2
     MSb = MSa % 100
     IF MSb = 0 THEN MSa+=1.
     ReturnS = format(msa,@t04) & '.' & format(MSB,@n02)
  else
     ReturnS = format(msa,@t04)
  end

  return(ReturnS)
[END]
[END]
[PROCEDURE]
NAME SA:FullTimeSinceNow
PROTOTYPE '(LONG InDate, LONG InTime),STRING'
PARAMETERS '(LONG InDate,LONG InTime)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/04/19' '12:16:33'
[DATA]
[SCREENCONTROLS]
! PROMPT('Total Days:'),USE(?TotalDays:Prompt)
! ENTRY(@n-7),USE(TotalDays),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(TotalDays),RIGHT(1)
TotalDays                SHORT,AUTO
!!> GUID('579235cd-d61f-41e6-aa72-e05afbd8b03e'),PROMPT('Total Days:'),HEADER('Total Days'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG,AUTO
!!> GUID('16bbcf5b-2eee-48ad-b662-cb27a6cb9f45'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('First Day:'),USE(?FirstDay:Prompt)
! ENTRY(@n-14),USE(FirstDay),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(FirstDay),RIGHT(1)
FirstDay                 LONG,AUTO
!!> GUID('804a38b2-678c-46fc-a4df-351572b49b2c'),PROMPT('First Day:'),HEADER('First Day'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Return S:'),USE(?ReturnS:Prompt)
! ENTRY(@s127),USE(ReturnS)
[REPORTCONTROLS]
! STRING(@s127),USE(ReturnS)
ReturnS                  CSTRING(128)
!!> GUID('d2f96d21-5623-4469-badc-8d110f9e1b28'),PROMPT('Return S:'),HEADER('Return S'),PICTURE(@s127),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END

    Do AddDays
    Do AddHours
    RETURN(ReturnS)
[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
AddDays ROUTINE

    TotalDays = TODAY() - InDate
    if TotalDays = 0
       I = CLOCK() - inTime
    else
       FirstDay = 8640000 - InTime
       if TotalDays = 1
          I = CLOCK() + FirstDay
          if I > 8640000
             ReturnS = ReturnS & '1 day and '
             i = i - 8640000
          end
       else
          I = CLOCK() + FirstDay
          if I > 8640000
             if TotalDays = 1
                ReturnS = ReturnS & TotalDays & ' day and '
             else
                ReturnS = ReturnS & TotalDays & ' days and '
             end
             i = i - 8640000
          else
             if TotalDays - 1 = 1
                ReturnS = ReturnS & TotalDays - 1 & ' day and '
             else
                ReturnS = ReturnS & TotalDays - 1 & ' days and '
             end
          end
       end
    end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
AddHours    ROUTINE

    if i > 720000
       i = i / 360000
       if i > 23 then i = i - 23.
       ReturnS = ReturnS & i & ' hours'
    else
       i = i / 6000
       if i > 60
          i = i-60
          if i = 1
             ReturnS = ReturnS & '1 hour 1 minute'
          else
             ReturnS = ReturnS & '1 hour ' & i & ' minutes'
          end
       else
          if i = 1
             ReturnS = ReturnS & i & ' minute'
          else
             ReturnS = ReturnS & i & ' minutes'
          end
       end
    end
[END]
[END]
[PROCEDURE]
NAME SA:GetDaysInMonth
PROTOTYPE '(LONG InDate),SHORT'
PARAMETERS '(LONG InDate)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '16:34:45'
[DATA]
[SCREENCONTROLS]
! PROMPT('mm:'),USE(?mm:Prompt)
! ENTRY(@n-7),USE(mm),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(mm),RIGHT(1)
mm                       SHORT,AUTO
!!> GUID('f4f52f1d-2ee4-4638-821a-8508d0de03c7'),PROMPT('mm:'),HEADER('mm'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('yy:'),USE(?yy:Prompt)
! ENTRY(@n-7),USE(yy),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(yy),RIGHT(1)
yy                       SHORT,AUTO
!!> GUID('db042eb5-4e45-4b44-b8ac-57f1c22aa2c1'),PROMPT('yy:'),HEADER('yy'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Clarion Date:'),USE(?ClarionDate:Prompt)
! ENTRY(@n-14),USE(ClarionDate),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ClarionDate),RIGHT(1)
ClarionDate              LONG,AUTO
!!> GUID('fe482fd2-4d0f-446b-a2f9-33ab8e202115'),PROMPT('Clarion Date:'),HEADER('Clarion Date'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    if InDate < 13
       CASE InDate
       OF 1 OROF 3 OROF 5 OROF 7 OROF 8 OROF 10 OROF 12
          RETURN(31)
       OF 2
          RETURN(28)
       ELSE
          RETURN(30)
       END
    else
       MM=MONTH(Indate)
       YY=YEAR(Indate)
       MM+=1
       IF MM = 13
          YY+=1
          MM=1
       END

       ClarionDate = DATE(MM,1,YY) - 1
       MM = DAY(ClarionDate)

       RETURN(MM)
     end

[END]
[END]
[PROCEDURE]
NAME SA:GetDateTimeString
PROTOTYPE '(LONG InDate,LONG InTime,STRING InText, BYTE AddDOW,<<STRING DatePicture>,<<STRING TimePicture>),STRING'
PARAMETERS '(LONG InDate,LONG InTime,STRING InText,BYTE AddDOW,<<STRING DatePicture>,<<STRING TimePicture>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/04/19' '12:14:41'
[DATA]
[SCREENCONTROLS]
! PROMPT('Return S:'),USE(?ReturnS:Prompt)
! ENTRY(@s128),USE(ReturnS)
[REPORTCONTROLS]
! STRING(@s128),USE(ReturnS)
ReturnS                  CSTRING(129)
!!> GUID('4fc8f5dc-8963-4b7f-a384-f46289170056'),PROMPT('Return S:'),HEADER('Return S'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Use D:'),USE(?UseD:Prompt)
! ENTRY(@s12),USE(UseD)
[REPORTCONTROLS]
! STRING(@s12),USE(UseD)
UseD                     CSTRING(13)
!!> GUID('326a5e99-114f-4779-9a95-7c4fdc30f6ad'),PROMPT('Use D:'),HEADER('Use D'),PICTURE(@s12),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   if AddDOW = True
      ReturnS = SA:GetDOW(inDate) & ', '
   end

   if DatePicture <> ''
      UseD = clip(DatePicture)
   else
      UseD = '@d4'
   end

   if ReturnS
      returnS = returnS & ' ' & CLIP(LEFT(Format(InDate,UseD)))
   else
      returnS = CLIP(LEFT(Format(InDate,UseD)))
   end

   if InTime <> -1
      returnS = returnS & ' '

      if InText
         returnS = returnS & clip(InText) & ' '
      end
      if TimePicture <> ''
         UseD = clip(TimePicture)
      else
         UseD = '@t07'
      end
      returnS = returnS & CLIP(LEFT(Format(InTime,UseD)))
   end

   return(ReturnS)

[END]
[END]
[PROCEDURE]
NAME SA:MinutesSinceNow
PROTOTYPE '(LONG InDate,LONG InTime),LONG'
PARAMETERS '(LONG InDate,LONG InTime)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/04/19' '12:15:27'
[DATA]
[SCREENCONTROLS]
! PROMPT('Cur Clock:'),USE(?CurClock:Prompt)
! ENTRY(@n-14),USE(CurClock),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(CurClock),RIGHT(1)
CurClock                 LONG,AUTO
!!> GUID('aca4edbd-281f-49b6-aa8d-635e67b1fa4a'),PROMPT('Cur Clock:'),HEADER('Cur Clock'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Total Days:'),USE(?TotalDays:Prompt)
! ENTRY(@n-14),USE(TotalDays),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(TotalDays),RIGHT(1)
TotalDays                LONG,AUTO
!!> GUID('f6e1fd68-b2d4-4c2d-81ee-2d6a0121dc8c'),PROMPT('Total Days:'),HEADER('Total Days'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('First Day:'),USE(?FirstDay:Prompt)
! ENTRY(@n-14),USE(FirstDay),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(FirstDay),RIGHT(1)
FirstDay                 LONG
!!> GUID('db33842b-470c-4ced-bdd3-f6f863b17f78'),PROMPT('First Day:'),HEADER('First Day'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i Long:'),USE(?iLong:Prompt)
! ENTRY(@n-14),USE(iLong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(iLong),RIGHT(1)
iLong                    LONG
!!> GUID('b9460f1a-a5c6-4ef2-990b-e31d3e2b7b18'),PROMPT('i Long:'),HEADER('i Long'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Mins:'),USE(?Mins:Prompt)
! ENTRY(@n-14),USE(Mins),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(Mins),RIGHT(1)
Mins                     LONG
!!> GUID('1d0a8b42-c5bc-4d70-b69a-d937cd08277d'),PROMPT('Mins:'),HEADER('Mins'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Return L:'),USE(?ReturnL:Prompt)
! ENTRY(@n-14),USE(ReturnL),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ReturnL),RIGHT(1)
ReturnL                  LONG
!!> GUID('9ca9ab5a-b66e-41e2-8e05-2373bb138daa'),PROMPT('Return L:'),HEADER('Return L'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    if inDate > 0
       TotalDays = TODAY() - InDate
    else
       TotalDays = 0
    end

    CurClock = CLOCK()

    ! FIND NUMBER OF MINUTES
    ! ----------------------
    IF TotalDays >= 0
       IF TotalDays = 0
          iLONG = CurClock - InTime
       ELSE
          FirstDay = 8640000 - InTime            ! how long it has been running the first day
          iLONG = CurClock + FirstDay            ! how long it has been running the last day
          if TotalDays > 1
             Mins = 1440 * (TotalDays  - 1)      ! how long it has been running all the other days
          end
       end

       iLONG = iLONG / 6000
       Mins  = Mins + iLONG

       returnL = Mins
    end

    RETURN(RETURNL)


[END]
[END]
[PROCEDURE]
NAME SA:GetDateTimeSimple
PROTOTYPE '(<<LONG InDate>,<<LONG InTIme>),STRING'
PARAMETERS '(<<LONG InDate>,<<LONG InTIme>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/09' '21:36:28'
[DATA]
[SCREENCONTROLS]
! PROMPT('MM:'),USE(?MM:Prompt)
! ENTRY(@n-7),USE(MM),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(MM),RIGHT(1)
MM                       SHORT,AUTO
!!> GUID('8458e7cf-1963-4176-b7f0-eebe035a79ad'),PROMPT('MM:'),HEADER('MM'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('DD:'),USE(?DD:Prompt)
! ENTRY(@n-7),USE(DD),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(DD),RIGHT(1)
DD                       SHORT,AUTO
!!> GUID('d0204ffc-00c6-45fa-9b3e-683edad55ece'),PROMPT('DD:'),HEADER('DD'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('YY:'),USE(?YY:Prompt)
! ENTRY(@n-7),USE(YY),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(YY),RIGHT(1)
YY                       SHORT,AUTO
!!> GUID('aaf266f2-8f00-45e0-83a9-d33a3a85f133'),PROMPT('YY:'),HEADER('YY'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Return S:'),USE(?ReturnS:Prompt)
! ENTRY(@s12),USE(ReturnS)
[REPORTCONTROLS]
! STRING(@s12),USE(ReturnS)
ReturnS                  STRING(12)
!!> GUID('49c52fd4-e5aa-4ea4-af50-98deedf5e94a'),PROMPT('Return S:'),HEADER('Return S'),PICTURE(@s12),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   if InDate
       MM = month(InDate)
       DD = day(InDate)
       YY = year(InDate)
       YY = YY - 2000
   else
       MM = month(TODAY())
       DD = day(TODAY())
       YY = year(TODAY())
       YY = YY - 2000
   end

   if InTime
      ReturnS = format(MM,@n02) & format(DD,@n02) & format(YY,@n02) & FORMAT(InTime,@t05)
   else
      ReturnS = format(MM,@n02) & format(DD,@n02) & format(YY,@n02) & FORMAT(CLOCK(),@t05)
   end

   Return(ReturnS)
[END]
[END]
[PROCEDURE]
NAME SA:GetSecondsString
PROTOTYPE '(LONG InSeconds),STRING'
PARAMETERS '(LONG InSeconds)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/10' '18:39:07'
[DATA]
[SCREENCONTROLS]
! PROMPT('jlong:'),USE(?jlong:Prompt)
! ENTRY(@n-14),USE(jlong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(jlong),RIGHT(1)
jlong                    LONG
!!> GUID('631d9b75-c3bc-4a67-aec7-386f4aecf2c3'),PROMPT('jlong:'),HEADER('jlong'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Out Text:'),USE(?OutText:Prompt)
! ENTRY(@s31),USE(OutText)
[REPORTCONTROLS]
! STRING(@s31),USE(OutText)
OutText                  CSTRING(32)
!!> GUID('4457895d-0d19-4cd4-8d4e-9eaa8a43abcc'),PROMPT('Out Text:'),HEADER('Out Text'),PICTURE(@s31),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    if InSeconds = 1
       OutText = InSeconds & ' second'
    elsif InSeconds < 60
       OutText = InSeconds & ' seconds'
    else
       jLONG = INT(InSeconds / 60)
       if jLONG = 1
          OutText = jLONG & ' minute'
       else
          OutText = jLONG & ' minutes'
       end
       OutText = OutText & ' and ' & round(InSeconds % 60,.01) & ' seconds'
    end
    return(OutText)
[END]
[END]
[PROCEDURE]
NAME SA:DeformatDate
PROTOTYPE '(STRING),LONG'
PARAMETERS '(STRING InDate)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/28' '14:01:26'
[DATA]
[SCREENCONTROLS]
! PROMPT('Use Date:'),USE(?UseDate:Prompt)
! ENTRY(@s10),USE(UseDate)
[REPORTCONTROLS]
! STRING(@s10),USE(UseDate)
UseDate                  STRING(10),AUTO
!!> GUID('c42fe42e-7b6b-49c4-a99c-471185abc1ae'),PROMPT('Use Date:'),HEADER('Use Date'),PICTURE(@s10),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('mm:'),USE(?mm:Prompt)
! ENTRY(@n-7),USE(mm),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(mm),RIGHT(1)
mm                       SHORT
!!> GUID('2d412500-a27d-474b-b7d0-10459e03f3e1'),PROMPT('mm:'),HEADER('mm'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('dd:'),USE(?dd:Prompt)
! ENTRY(@n-7),USE(dd),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(dd),RIGHT(1)
dd                       SHORT
!!> GUID('6058d28e-e501-47af-9673-91d354dfaa57'),PROMPT('dd:'),HEADER('dd'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('yy:'),USE(?yy:Prompt)
! ENTRY(@n-7),USE(yy),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(yy),RIGHT(1)
yy                       SHORT
!!> GUID('49274aeb-c1c3-4e46-998d-14da89b65f52'),PROMPT('yy:'),HEADER('yy'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Return Date:'),USE(?ReturnDate:Prompt)
! ENTRY(@n-14),USE(ReturnDate),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ReturnDate),RIGHT(1)
ReturnDate               LONG
!!> GUID('6c6dc591-83ba-4e31-b278-44ce92bf5905'),PROMPT('Return Date:'),HEADER('Return Date'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 UseDate = InDate
 if UseDate[5] = '-' and UseDate[8] = '-'
    mm = sub(UseDate,6,2)
    dd = sub(UseDate,9,2)
    yy = sub(UseDate,1,4)
    ReturnDate = Date(mm,dd,yy)
 elsif UseDate[3] = '/' and UseDate[6] = '/'
    mm = sub(UseDate,1,2)
    dd = sub(UseDate,4,2)
    yy = sub(UseDate,7,4)
    ReturnDate = Date(mm,dd,yy)
 elsif NUMERIC(InDate) and len(InDate) > 6
    UseDate = format(InDate,@n08)
    mm = sub(UseDate,1,2)
    dd = sub(UseDate,3,2)
    yy = sub(UseDate,5,4)
    ReturnDate = Date(mm,dd,yy)
 end

 return(ReturnDate)


[END]
[END]
[END]
[MODULE]
[COMMON]
FROM Clarion GENERATED
MODIFIED '2016/01/06' '16:52:41'
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SA:StripACharacter
PROTOTYPE '(STRING par:inString,STRING inCharacter),STRING'
PARAMETERS '(STRING par:inString,STRING inCharacter)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '16:36:30'
[DATA]
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG,AUTO
!!> GUID('f29e4c2e-1672-471b-a468-bfe5b26ea4b7'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n-14),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(J),RIGHT(1)
J                        LONG,AUTO
!!> GUID('00add04c-e78d-44dc-afa1-8d5fbce08807'),PROMPT('J:'),HEADER('J'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Return S:'),USE(?ReturnS:Prompt)
! ENTRY(@s255),USE(ReturnS)
[REPORTCONTROLS]
! STRING(@s255),USE(ReturnS)
ReturnS                  CSTRING(1025)
!!> GUID('985ab45f-a022-4d63-ab67-9665a5efa3d8'),PROMPT('Return S:'),HEADER('Return S'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 IF LEN(InCharacter) = 1
    I = LEN(par:instring)
    if i > 128
       StringRef &= NEW(CSTRING(I + 1))
       LOOP j = 1 to I
         if par:instring[J] <> InCharacter
            StringRef = StringRef & par:instring[J]
         end
       end
       par:instring = StringRef
       DISPOSE(StringRef)
       RETURN(par:inString)
    else
       LOOP J = 1 to I
         if par:instring[J] <> InCharacter
            ReturnS = ReturnS & par:instring[J]
         end
       end
       RETURN(ReturnS)
    end
 ELSE
    RETURN('')
 END


[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
StringRef   &CSTRING
[END]
[END]
[PROCEDURE]
NAME SA:StringCount
PROTOTYPE '(STRING,STRING,BYTE),SHORT'
PARAMETERS '(In1,InTest,InType)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/07' '19:27:02'
[DATA]
[SCREENCONTROLS]
! PROMPT('Test Chr:'),USE(?TestChr:Prompt)
! ENTRY(@s1),USE(TestChr)
[REPORTCONTROLS]
! STRING(@s1),USE(TestChr)
TestChr                  STRING(1),AUTO
!!> GUID('e64996fc-c668-4d37-bbc0-8209cf408176'),PROMPT('Test Chr:'),HEADER('Test Chr'),PICTURE(@s1),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG
!!> GUID('8826ad9f-be07-414f-8ce8-76955cebb7fe'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('j:'),USE(?j:Prompt)
! ENTRY(@n-14),USE(j),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(j),RIGHT(1)
j                        LONG,AUTO
!!> GUID('86147d5f-37e2-47d5-975f-4ae839012c12'),PROMPT('j:'),HEADER('j'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('rcount:'),USE(?rcount:Prompt)
! ENTRY(@n-7),USE(rcount),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(rcount),RIGHT(1)
rcount                   SHORT
!!> GUID('4317422c-11de-4423-90a0-94e375be2255'),PROMPT('rcount:'),HEADER('rcount'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   TestChr = intest[1]
   j = len(in1)

   LOOP I = 1 TO j
     IF IN1[i] = testchr
        if sub(in1,i,j) = InTest
           RCount+=1
        end
      end
    end

    case inType
    of 0                    ! return count
       return(Rcount)
    of 1                    ! is odd
       if rcount = 0
          return(-1)
       else
          if rcount % 2
             return(0)
          else
             return(1)
          end
       end
    of 2                    ! is even
       if rcount = 0
          return(-1)
       else
          if rcount % 2
             return(1)
          else
             return(0)
          end
       end
    end


[END]
[END]
[PROCEDURE]
NAME SA:ExtractParm
PROTOTYPE '(STRING TheString,STRING TheFind,BYTE InCase,*BYTE DoesExists),STRING'
PARAMETERS '(STRING TheString,STRING TheFind,BYTE InCase,*BYTE DoesExists)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/24' '10:30:03'
[DATA]
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG,AUTO
!!> GUID('f4b9c2d7-a92f-4902-96b7-e94479b33436'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n-14),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(J),RIGHT(1)
J                        LONG,AUTO
!!> GUID('e8d33fe1-74c3-4e71-bcbc-6f9b4fd27dd1'),PROMPT('J:'),HEADER('J'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Return S:'),USE(?ReturnS:Prompt)
! ENTRY(@s255),USE(ReturnS)
[REPORTCONTROLS]
! STRING(@s255),USE(ReturnS)
ReturnS                  CSTRING(10241)
!!> GUID('6dfa2a67-6be4-40fd-98e2-c42bb98ff581'),PROMPT('Return S:'),HEADER('Return S'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  ! does value exists?  If Yes, return TRUE and take that value out of the string

  if inCase = True
     i = instring(TheFind,TheString,1,1)
  else
     i = instring(UPPER(TheFind),UPPER(TheString),1,1)
  end

  if i > 0
     DoesExists = True
     j = len(TheFind)
     ReturnS = sub(TheString,1,i-1) & sub(TheString,i+j,8193)
     ReturnS = clip(ReturnS)
  else
     DoesExists = False
     ReturnS = TheString
  END

  return(ReturnS)
[END]
[END]
[PROCEDURE]
NAME SA:RemoveLeadingChars
PROTOTYPE '(STRING InText,STRING InChars),STRING'
PARAMETERS '(STRING InText,STRING InChars)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/12' '18:01:18'
[DATA]
[SCREENCONTROLS]
! PROMPT('S 1:'),USE(?S1:Prompt)
! ENTRY(@n-7),USE(S1),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(S1),RIGHT(1)
S1                       SHORT,AUTO
!!> GUID('09b983da-e29d-4886-afbe-d78d2d95b4f2'),PROMPT('S 1:'),HEADER('S 1'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('tchr:'),USE(?tchr:Prompt)
! ENTRY(@s1),USE(tchr)
[REPORTCONTROLS]
! STRING(@s1),USE(tchr)
tchr                     STRING(1)
!!> GUID('e0373cc9-559d-4263-9d54-42b89126b0d4'),PROMPT('tchr:'),HEADER('tchr'),PICTURE(@s1),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('d3d398df-014c-48c9-80e3-f5955960ebd8'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Retu:'),USE(?ReturnS:Prompt)
! ENTRY(@s255),USE(ReturnS)
[REPORTCONTROLS]
! STRING(@s255),USE(ReturnS)
ReturnS                  CSTRING(1025),AUTO
!!> GUID('d1fbc471-ae20-49b0-8e6f-14d78d293d84'),PROMPT('Retu:'),HEADER('Retu'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    ReturnS = CLIP(LEFT(InText))
    S1 = LEN(ReturnS)

    LOOP I = 1 TO S1
      TCHR = RETURNS[I]
      IF INSTRING(TCHR,InChars,1,1) = 0 then break.
      RETURNS[I] = ' '
    END

    ReturnS = LEFT(ReturnS)
    ReturnS = CLIP(ReturnS)

    RETURN(ReturnS)
[END]
[END]
[PROCEDURE]
NAME SA:StripAllButNumbers
PROTOTYPE '(STRING InText,<<BYTE AllowIndicators>),STRING'
PARAMETERS '(STRING InText,<<BYTE AllowIndicators>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/15' ' 9:40:49'
[DATA]
[SCREENCONTROLS]
! PROMPT('s Len:'),USE(?sLen:Prompt)
! ENTRY(@n-14),USE(sLen),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(sLen),RIGHT(1)
sLen                     LONG,AUTO
!!> GUID('aa06a267-3e27-40f8-85a0-dfdb412000c5'),PROMPT('s Len:'),HEADER('s Len'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i LONG:'),USE(?iLONG:Prompt)
! ENTRY(@n-14),USE(iLONG),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(iLONG),RIGHT(1)
iLONG                    LONG
!!> GUID('e4f7d557-c94b-45c3-9d31-ab2200dd74f9'),PROMPT('i LONG:'),HEADER('i LONG'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Return S:'),USE(?ReturnS:Prompt)
! ENTRY(@s255),USE(ReturnS)
[REPORTCONTROLS]
! STRING(@s255),USE(ReturnS)
ReturnS                  CSTRING(1025)
!!> GUID('327cb9e4-5e23-4122-962e-94d407990053'),PROMPT('Return S:'),HEADER('Return S'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
     slen = len(InText)

     LOOP iLONG = 1 to sLen
        if AllowIndicators = True
           CASE inText[iLONG]
           OF '0' to '9' OROF '.' OROF '-'
              ReturnS = ReturnS & inText[iLONG]
           END
        else
           IF inText[iLONG] >= '0' and inText[iLONG] <= '9'
              ReturnS = ReturnS & inText[iLONG]
           END
        end
     END

     RETURN(ReturnS)
[END]
[END]
[PROCEDURE]
NAME SA:MixedCase
PROTOTYPE '(STRING InText),STRING'
PARAMETERS '(STRING InText)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/10' '21:06:52'
[DATA]
[SCREENCONTROLS]
! PROMPT('Out Text:'),USE(?OutText:Prompt)
! ENTRY(@s255),USE(OutText)
[REPORTCONTROLS]
! STRING(@s255),USE(OutText)
OutText                  CSTRING(2049),AUTO
!!> GUID('5a35d117-719c-446a-9e46-abdac1e012cb'),PROMPT('Out Text:'),HEADER('Out Text'),PICTURE(@s255),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('i Long:'),USE(?iLong:Prompt)
! ENTRY(@n-14),USE(iLong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(iLong),RIGHT(1)
iLong                    LONG
!!> GUID('d4234e46-aecb-4d55-bb1b-d81e2415dc88'),PROMPT('i Long:'),HEADER('i Long'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('j Long:'),USE(?jLong:Prompt)
! ENTRY(@n-14),USE(jLong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(jLong),RIGHT(1)
jLong                    LONG,AUTO
!!> GUID('801436b6-8250-4176-8ec4-75f388001db3'),PROMPT('j Long:'),HEADER('j Long'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    OutText = CLIP(InText)
    jLONG = True

    LOOP iLONG = 1 to len(OutText)

       if jLONG=true
          OutText[iLONG]  = upper(OutText[iLONG])
       else
          OutText[iLONG]  = lower(OutText[iLONG])
       end

       CASE OutText[ilong]
       OF ' ' OROF '.' OROF '-'
          jLONG=True
       ELSE
          jLONG=false
       END

    END

    OutText = XML:Replace(OutText,' And ',' and ',-1)
    OutText = XML:Replace(OutText,' Or ',' or ',-1)
    OutText = XML:Replace(OutText,'Von ','von ',-1)
    OutText = XML:Replace(OutText,'Van ','van ',-1)

    return(OutText)
[END]
[END]
[PROCEDURE]
NAME SA:ConvertToDecimal
PROTOTYPE '(STRING InText),STRING'
PARAMETERS '(STRING InText)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/12' '18:01:35'
[DATA]
[SCREENCONTROLS]
! PROMPT('SLEN:'),USE(?SLEN:Prompt)
! ENTRY(@n-7),USE(SLEN),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(SLEN),RIGHT(1)
SLEN                     SHORT,AUTO
!!> GUID('600b759e-45f0-4293-a53d-2484e299dba2'),PROMPT('SLEN:'),HEADER('SLEN'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('js:'),USE(?js:Prompt)
! ENTRY(@n-7),USE(js),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(js),RIGHT(1)
js                       SHORT
!!> GUID('bc2db6c5-e677-4fc5-bed9-b4a864ec14e3'),PROMPT('js:'),HEADER('js'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('is:'),USE(?is:Prompt)
! ENTRY(@n-7),USE(is),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(is),RIGHT(1)
is                       SHORT
!!> GUID('6ac795c7-f451-4bf1-a014-6f72ebae0e6f'),PROMPT('is:'),HEADER('is'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Out Text:'),USE(?OutText:Prompt)
! ENTRY(@s255),USE(OutText)
[REPORTCONTROLS]
! STRING(@s255),USE(OutText)
OutText                  CSTRING(1025)
!!> GUID('c4d2ce09-7441-4e21-a277-6e75267959a4'),PROMPT('Out Text:'),HEADER('Out Text'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   sLen = len(clip(InText))

   LOOP is = 1 to sLen

     case InText[is]
     of '('
        js = 1
     of ')'
        if js =1 then js = 2.
     of '-'
        js = 2
     else
        if InText[is] >= '0' and InText[is] <= '9'
           outtext = outtext & InText[is]
        elsif InText[is] = '.'
           outtext = outtext & InText[is]
        end
     end

   end

   if js = 2
      outtext = '-' & outtext
   end

   return(OutText)

[END]
[END]
[PROCEDURE]
NAME SA:CleanPopupString
PROTOTYPE '(STRING InText),STRING'
PARAMETERS '(STRING InText)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/12' '18:01:44'
[DATA]
[SCREENCONTROLS]
! PROMPT('S 1:'),USE(?S1:Prompt)
! ENTRY(@n-7),USE(S1),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(S1),RIGHT(1)
S1                       SHORT,AUTO
!!> GUID('92cc8492-2c21-4395-8896-d6150fa31351'),PROMPT('S 1:'),HEADER('S 1'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i Long:'),USE(?iLong:Prompt)
! ENTRY(@n-14),USE(iLong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(iLong),RIGHT(1)
iLong                    LONG
!!> GUID('bcd780d3-5066-491d-820f-161064290619'),PROMPT('i Long:'),HEADER('i Long'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Out Text:'),USE(?OutText:Prompt)
! ENTRY(@s255),USE(OutText)
[REPORTCONTROLS]
! STRING(@s255),USE(OutText)
OutText                  CSTRING(1025),AUTO
!!> GUID('c067a2a7-312d-477b-acfc-46ab3358b04c'),PROMPT('Out Text:'),HEADER('Out Text'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   OutText = clip(InText)
   S1 = LEN(OutText)

   LOOP ILONG = 1 to S1
     case OutText[ilong]
     of '|' orof '{{'                 ! don't allow in any character
        OutText[ilong] = ' '
     of '~' orof '+'                  ! don't allow in 1st character
        if ilong = 1
           outtext[1] = ' '
        end
     end
   END

   OutText = xml:replace(OutText,'&','&&',-1)
   OutText = clip(OutText)

   return(OutText)
[END]
[END]
[PROCEDURE]
NAME SA:RemoveTrailingChars
PROTOTYPE '(STRING InText,STRING InChars,<<STRING DoNotPass>),STRING'
PARAMETERS '(STRING InText,STRING InChars,<<STRING DoNotPass>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/24' '10:30:32'
[DATA]
[SCREENCONTROLS]
! PROMPT('S 1:'),USE(?S1:Prompt)
! ENTRY(@n-7),USE(S1),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(S1),RIGHT(1)
S1                       SHORT,AUTO
!!> GUID('7e6d55e4-9b3a-44d3-af56-ba6b52d23e1e'),PROMPT('S 1:'),HEADER('S 1'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('t Chr:'),USE(?tChr:Prompt)
! ENTRY(@s1),USE(tChr)
[REPORTCONTROLS]
! STRING(@s1),USE(tChr)
tChr                     STRING(1),AUTO
!!> GUID('a07756c0-773f-4061-b2ee-c248a56dd9c2'),PROMPT('t Chr:'),HEADER('t Chr'),PICTURE(@s1),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('973ae410-6020-4d95-9e3d-87a1079e955f'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Out Text:'),USE(?OutText:Prompt)
! ENTRY(@s255),USE(OutText)
[REPORTCONTROLS]
! STRING(@s255),USE(OutText)
OutText                  CSTRING(1025),AUTO
!!> GUID('990d5f3e-b88e-4905-aafb-5dc7d47eea18'),PROMPT('Out Text:'),HEADER('Out Text'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   OutText=clip(LEFT(InText))
   S1 = len(OutText)

   loop I = S1 to 1 by -1
     Tchr = outtext[i]
     if instring(Tchr,InChars,1,1) = 0 THEN BREAK.
     OutText[i] = ' '
     IF NOT OMITTED(3)
        if tchr = DoNotPass then break.
     end
   end

   OutText = CLIP(OutText)

   Return(OutText)
[END]
[END]
[PROCEDURE]
NAME SA:FormatExpiration
PROTOTYPE '(STRING InText),STRING'
PARAMETERS '(STRING InText)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/10' '15:37:59'
[DATA]
[SCREENCONTROLS]
! PROMPT('Out Text:'),USE(?OutText:Prompt)
! ENTRY(@s20),USE(OutText)
[REPORTCONTROLS]
! STRING(@s20),USE(OutText)
OutText                  CSTRING(21),AUTO
!!> GUID('227df566-f066-49a1-9d48-feec7103d4c0'),PROMPT('Out Text:'),HEADER('Out Text'),PICTURE(@s20),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  OutText = InText

  if instring('/',InText,1,1) or sub(InText,1,1) = '0'
      CASE LEN(CLIP(InText))
      of 3
         OutText = sub(InText,1,1) & sub(InText,2,2)
      of 4
         OutText = sub(InText,1,1) & sub(InText,3,2)
      of 5
         OutText = sub(InText,1,2) & sub(InText,4,2)
         if OutText[1] = '0'
            OutText = sub(OutText,2,3)
         end
      end
   end

   return(OutText)
[END]
[END]
[PROCEDURE]
NAME SA:ExtractCharacters
PROTOTYPE '(STRING InText,STRING LookingFor,SHORT NumCharacters,<<SHORT AtOffset>),STRING'
PARAMETERS '(STRING InText,STRING LookingFor,SHORT NumCharacters,<<SHORT AtOffset>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/14' '14:17:08'
[DATA]
[SCREENCONTROLS]
! PROMPT('s 1:'),USE(?s1:Prompt)
! ENTRY(@n-7),USE(s1),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(s1),RIGHT(1)
s1                       SHORT,AUTO
!!> GUID('8dc7ad7d-e571-402a-9a1e-909d3d83fc55'),PROMPT('s 1:'),HEADER('s 1'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('s 2:'),USE(?s2:Prompt)
! ENTRY(@n-7),USE(s2),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(s2),RIGHT(1)
s2                       SHORT,AUTO
!!> GUID('c0cc2cf7-534d-4d10-b950-2599d809d194'),PROMPT('s 2:'),HEADER('s 2'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('ilong:'),USE(?ilong:Prompt)
! ENTRY(@n-14),USE(ilong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ilong),RIGHT(1)
ilong                    LONG
!!> GUID('0ec8c0a4-7b4f-42c5-aed1-08cb27745861'),PROMPT('ilong:'),HEADER('ilong'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('jlong:'),USE(?jlong:Prompt)
! ENTRY(@n-14),USE(jlong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(jlong),RIGHT(1)
jlong                    LONG
!!> GUID('eab0e604-f743-4931-a47f-d491aefe93fa'),PROMPT('jlong:'),HEADER('jlong'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Out Text:'),USE(?OutText:Prompt)
! ENTRY(@s255),USE(OutText)
[REPORTCONTROLS]
! STRING(@s255),USE(OutText)
OutText                  CSTRING(10241)
!!> GUID('caa0b2d4-34a1-416f-acd8-8c80f7bcdd1c'),PROMPT('Out Text:'),HEADER('Out Text'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    S1 = NumCharacters
    S2 = AtOffset

    iLONG = len(LookingFor)
    jLONG = instring(LookingFor,InText,1,1)

    if jLONG
       if S2 > 0
          OutText = sub(InText,jLONG+ilong+S2-1,S1)   ! real offset
       else
          OutText = sub(InText,jLONG+iLONG+S2,S1)   ! next character
       end
       OutText = clip(OutText)

       ! pull off any garbage
       ilong = instring(LookingFor,OutText,1,1)
       if iLONG
          OutText = sub(OutText,1,iLONG-1)
       end

    else
       OutText = ''
    end

    return(OutText)



[END]
[END]
[PROCEDURE]
NAME SA:ExtractOutside
PROTOTYPE '(STRING InText,STRING LeftSide,STRING RightSide,<<STRING ToKeep>,<<BYTE FromRight>),STRING'
PARAMETERS '(STRING InText,STRING LeftSide,STRING RightSide,<<STRING ToKeep>,<<BYTE FromRight>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/12' '18:13:47'
[DATA]
[SCREENCONTROLS]
! PROMPT('s 1:'),USE(?s1:Prompt)
! ENTRY(@n-14),USE(s1),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(s1),RIGHT(1)
s1                       LONG
!!> GUID('561355c8-507a-4b63-924d-f5087f4132a2'),PROMPT('s 1:'),HEADER('s 1'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('s 2:'),USE(?s2:Prompt)
! ENTRY(@n-14),USE(s2),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(s2),RIGHT(1)
s2                       LONG
!!> GUID('3562456f-5ce3-416c-b2d5-808e6ee04a61'),PROMPT('s 2:'),HEADER('s 2'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('F 1:'),USE(?F1:Prompt)
! ENTRY(@n-14),USE(F1),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(F1),RIGHT(1)
F1                       LONG,AUTO
!!> GUID('6d14f5ec-48c0-49ff-9d26-e7e3df426dd3'),PROMPT('F 1:'),HEADER('F 1'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i Long:'),USE(?iLong:Prompt)
! ENTRY(@n-14),USE(iLong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(iLong),RIGHT(1)
iLong                    LONG
!!> GUID('8c82993f-73b6-4d49-be14-3d7ba4fe4c9b'),PROMPT('i Long:'),HEADER('i Long'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('j Long:'),USE(?jLong:Prompt)
! ENTRY(@n-14),USE(jLong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(jLong),RIGHT(1)
jLong                    LONG
!!> GUID('f3804291-d7bb-40b7-8f34-0a34febaaa75'),PROMPT('j Long:'),HEADER('j Long'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('k Long:'),USE(?kLong:Prompt)
! ENTRY(@n-14),USE(kLong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(kLong),RIGHT(1)
kLong                    LONG
!!> GUID('7d34cb77-ed47-4afc-9c5c-751140c80ea9'),PROMPT('k Long:'),HEADER('k Long'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Out Text:'),USE(?OutText:Prompt)
! ENTRY(@s255),USE(OutText)
[REPORTCONTROLS]
! STRING(@s255),USE(OutText)
OutText                  CSTRING(10241)
!!> GUID('e32d3506-6d6b-454a-b996-228e16f950bd'),PROMPT('Out Text:'),HEADER('Out Text'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    F1 = len(InText)
    s1 = len(LeftSide)
    s2 = len(RightSide)

    case UPPER(ToKeep)
    of 'R'
        Do RemovePortionFromStringR
    of 'L'
        Do RemovePortionFromStringL
    of 'B'
        Do RemovePortionFromStringB
    else
        Do RemovePortionFromString
    END

    return(OutText)

RemovePortionFromStringB     ROUTINE     ! KEEP BOTH (EVERYTHING)

   iLONG = INSTRING(LeftSide,InText,1,1)
   if ilong
      if FromRight = True
         IF S2 = 1
            jLONG = instring(RightSide,intext,-1,F1)
         ELSE
            loop klong = f1 to ilong+1 by -1
              if sub(intext,klong,s2) = RightSide
                 jlong = klong
                 break
              end
            end
         end
      else
         jLONG = instring(RightSide,intext,1,iLONG+s1)
      end
      if jLONG
         OutText = sub(InText,1,iLONG+S1-1) & sub(inText,jLONG,len(InText))
         OutText = clip(OutText)
      END
   END

RemovePortionFromString     ROUTINE     ! KEEP NOTHING

   iLONG = INSTRING(LeftSide,InText,1,1)
   if ilong
      if FromRight = True
         IF S2 = 1
            jLONG = instring(RightSide,intext,-1,F1)
         ELSE
            loop klong = f1 to ilong+1 by -1
              if sub(intext,klong,s2) = RightSide
                 jlong = klong
                 break
              end
            end
         end
      else
         jLONG = instring(RightSide,intext,1,iLONG+s1)
      end
      if jLONG
         OutText = sub(InText,1,iLONG-1) & sub(inText,jLONG+s2,len(InText))
         OutText = clip(OutText)
      END
   END

RemovePortionFromStringL     ROUTINE    ! KEEP LEFT

   iLONG = INSTRING(LeftSide,InText,1,1)
   if ilong
      if FromRight = True
         IF S2 = 1
            jLONG = instring(RightSide,intext,-1,F1)
         ELSE
            loop klong = f1 to ilong+1 by -1
              if sub(intext,klong,s2) = RightSide
                 jlong = klong
                 break
              end
            end
         end
      else
         jLONG = instring(RightSide,intext,1,iLONG+s1)
      end
      if jLONG
         OutText = sub(InText,1,iLONG-1+s1) & sub(inText,jLONG+s2,len(InText))
         OutText = clip(OutText)
      END
   END

RemovePortionFromStringR     ROUTINE    ! KEEP RIGHT

   iLONG = INSTRING(LeftSide,InText,1,1)
   if ilong
      if FromRight
         IF S2 = 1
            jLONG = instring(RightSide,intext,-1,F1)
         ELSE
            loop klong = f1 to ilong+1 by -1
              if sub(intext,klong,s2) = RightSide
                 jlong = klong
                 break
              end
            end
         end
      else
         jLONG = instring(RightSide,intext,1,iLONG+s1)
      end
      if jLONG
         OutText = sub(InText,1,iLONG-1) & sub(inText,jLONG,len(InText))
         OutText = clip(OutText)
      END
   END
[END]
[END]
[PROCEDURE]
NAME SA:FormatSQLDate
PROTOTYPE '(STRING InDate,<<BYTE AddDow>),STRING'
PARAMETERS '(STRING InDate,<<BYTE AddDow>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/17' '16:07:45'
[DATA]
[SCREENCONTROLS]
! PROMPT('Return S:'),USE(?ReturnS:Prompt)
! ENTRY(@s32),USE(ReturnS)
[REPORTCONTROLS]
! STRING(@s32),USE(ReturnS)
ReturnS                  CSTRING(33),AUTO
!!> GUID('7794633f-9ee2-41a7-9071-4b365be9a199'),PROMPT('Return S:'),HEADER('Return S'),PICTURE(@s32),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('New Date:'),USE(?NewDate:Prompt)
! ENTRY(@s10),USE(NewDate)
[REPORTCONTROLS]
! STRING(@s10),USE(NewDate)
NewDate                  STRING(10),AUTO
!!> GUID('199a9683-748c-42ca-bbe6-875ee7a63bd0'),PROMPT('New Date:'),HEADER('New Date'),PICTURE(@s10),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('i Long:'),USE(?iLong:Prompt)
! ENTRY(@n-14),USE(iLong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(iLong),RIGHT(1)
iLong                    LONG,AUTO
!!> GUID('d0e491f9-1123-4641-b1a1-c5ed38b15f5e'),PROMPT('i Long:'),HEADER('i Long'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   If InDate and inDate[1] <> ''
      NewDate = InDate                      ! grab just date portion
      iLong = DEFORMAT(NewDate,@d010-)
      ReturnS = FORMAT(iLong,@d017B)

      case AddDow
      of 1
         ReturnS = ReturnS & ' ' & SA:GetDOW(iLong)
      of 2
         ReturnS = ReturnS & ' ' & SA:GetDOW(iLong,3)
      end
   else
      ReturnS = ''
   end
   return(ReturnS)



[END]
[END]
[PROCEDURE]
NAME SA:ExtractInside
PROTOTYPE '(STRING InText,STRING LeftSide,STRING RightSide,<<STRING ToKeep>,<<BYTE FromRight>),STRING'
PARAMETERS '(STRING InText,STRING LeftSide,STRING RightSide,<<STRING ToKeep>,<<BYTE FromRight>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/12' '18:13:24'
[DATA]
[SCREENCONTROLS]
! PROMPT('s 1:'),USE(?s1:Prompt)
! ENTRY(@n-14),USE(s1),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(s1),RIGHT(1)
s1                       LONG
!!> GUID('66334bc3-761d-40c8-b8f0-d4d3cf548999'),PROMPT('s 1:'),HEADER('s 1'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('s 2:'),USE(?s2:Prompt)
! ENTRY(@n-14),USE(s2),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(s2),RIGHT(1)
s2                       LONG
!!> GUID('2edde2e2-d958-4725-b318-c5de6d818c03'),PROMPT('s 2:'),HEADER('s 2'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('F 1:'),USE(?F1:Prompt)
! ENTRY(@n-14),USE(F1),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(F1),RIGHT(1)
F1                       LONG,AUTO
!!> GUID('f6f8b90a-1d5d-4c13-a2f5-f0944a8125f1'),PROMPT('F 1:'),HEADER('F 1'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i Long:'),USE(?iLong:Prompt)
! ENTRY(@n-14),USE(iLong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(iLong),RIGHT(1)
iLong                    LONG
!!> GUID('fb5962bf-877e-4494-a464-e22961eeca02'),PROMPT('i Long:'),HEADER('i Long'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('j Long:'),USE(?jLong:Prompt)
! ENTRY(@n-14),USE(jLong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(jLong),RIGHT(1)
jLong                    LONG
!!> GUID('551d5606-ebb8-4594-bf9a-08e3d1d1214e'),PROMPT('j Long:'),HEADER('j Long'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('k Long:'),USE(?kLong:Prompt)
! ENTRY(@n-14),USE(kLong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(kLong),RIGHT(1)
kLong                    LONG
!!> GUID('7b236850-8e2d-4c3d-b08f-775a34f08a24'),PROMPT('k Long:'),HEADER('k Long'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Out Text:'),USE(?OutText:Prompt)
! ENTRY(@s255),USE(OutText)
[REPORTCONTROLS]
! STRING(@s255),USE(OutText)
OutText                  CSTRING(10241)
!!> GUID('60c743b0-c921-4c26-b840-856a0069f6cf'),PROMPT('Out Text:'),HEADER('Out Text'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    F1 = len(InText)
    s1 = len(LeftSide)
    s2 = len(RightSide)

    case UPPER(ToKeep)
    of 'R'
        Do RemovePortionFromStringR
    of 'L'
        Do RemovePortionFromStringL
    of 'B'
        Do RemovePortionFromStringB
    else
        Do RemovePortionFromString
    END

    return(OutText)

RemovePortionFromStringB     ROUTINE     ! KEEP EVERYTHING

   iLONG = INSTRING(LeftSide,InText,1,1)
   if ilong
      if FromRight = True
         IF S2 = 1
            jLONG = instring(RightSide,intext,-1,F1)
         ELSE
            loop klong = f1 to ilong+1 by -1
              if sub(intext,klong,s2) = RightSide
                 jlong = klong
                 break
              end
            end
         end
      else
         jLONG = instring(RightSide,intext,1,iLONG+s1)
      end
      if jLONG
         s1 = ilong
         s2 = JLONG + s2 - 1
         if s2 >= s1
            OutText = InText[s1 : s2]
         end
      END
   END

RemovePortionFromString     ROUTINE     ! KEEP NOTHING

   iLONG = INSTRING(LeftSide,InText,1,1)
   if ilong
      if FromRight = True
         IF S2 = 1
            jLONG = instring(RightSide,intext,-1,F1)
         ELSE
            loop klong = f1 to ilong+1 by -1
              if sub(intext,klong,s2) = RightSide
                 jlong = klong
                 break
              end
            end
         end
      else
         jLONG = instring(RightSide,intext,1,iLONG+s1)
      end
      if jLONG
         s1 = ilong + s1
         s2 = JLONG - 1
         if s2 >= s1
            OutText = InText[s1 : s2]
         end
      END
   END

RemovePortionFromStringL     ROUTINE    ! KEEP LEFT

   iLONG = INSTRING(LeftSide,InText,1,1)
   if ilong
      if FromRight = True
         IF S2 = 1
            jLONG = instring(RightSide,intext,-1,F1)
         ELSE
            loop klong = f1 to ilong+1 by -1
              if sub(intext,klong,s2) = RightSide
                 jlong = klong
                 break
              end
            end
         end
      else
         jLONG = instring(RightSide,intext,1,iLONG+s1)
      end
      if jLONG
         s1 = ilong-1+s1+1
         s2 = jlong+s2-1
         if s2 >= s1
            outText = intext[s1 : s2]
         end
      END
   END

RemovePortionFromStringR     ROUTINE    ! KEEP RIGHT

   iLONG = INSTRING(LeftSide,InText,1,1)
   if ilong
      if FromRight
         IF S2 = 1
            jLONG = instring(RightSide,intext,-1,F1)
         ELSE
            loop klong = f1 to ilong+1 by -1
              if sub(intext,klong,s2) = RightSide
                 jlong = klong
                 break
              end
            end
         end
      else
         jLONG = instring(RightSide,intext,1,iLONG+s1)
      end
      if jLONG
         s1 = ilong
         s2 = jlong-1
         if s2 >= s1
            OutText = intext[s1 : s2]
         end
      END
   END
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM Clarion GENERATED
MODIFIED '2016/01/07' '23:41:17'
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SA:GetFileInfo
PROTOTYPE '(STRING InFileName,BYTE InType),STRING'
PARAMETERS '(STRING InFileName,BYTE InType)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/10' '19:13:38'
[DATA]
[SCREENCONTROLS]
! PROMPT('i Long:'),USE(?iLong:Prompt)
! ENTRY(@n-14),USE(iLong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(iLong),RIGHT(1)
iLong                    LONG,AUTO
!!> GUID('2e919f8e-8746-4917-978d-5df3c9389f60'),PROMPT('i Long:'),HEADER('i Long'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('j Long:'),USE(?jLong:Prompt)
! ENTRY(@n-14),USE(jLong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(jLong),RIGHT(1)
jLong                    LONG,AUTO
!!> GUID('ea09618f-c11f-4394-9fd0-6ab2390348c5'),PROMPT('j Long:'),HEADER('j Long'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('return S:'),USE(?returnS:Prompt)
! ENTRY(@s255),USE(returnS)
[REPORTCONTROLS]
! STRING(@s255),USE(returnS)
returnS                  CSTRING(385)
!!> GUID('b40c40ce-adf2-4de8-8bc5-cfea912cd6f0'),PROMPT('return S:'),HEADER('return S'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
AllFiles             QUEUE(File:queue),PRE(FIL)            !Inherit exact declaration of File:queue
                            END
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
     case InType
     of 9
        Do GetExtensionName
     of 8
        Do GetPathName
     of 7
        Do GetFileName
     of 6
        returnS = saa:GetFileVersion(InFileName)
     else
         DIRECTORY(AllFiles,InFileName,ff_:NORMAL)
         GET(ALLFILES,1)

         EXECUTE InType
         returnS = CLIP(fil:name)   ! 1
         returnS = fil:date         ! 2
         returnS = fil:time         ! 3
         returnS = fil:Size         ! 4
         returnS = fil:attrib       ! 5
         returnS = saa:GetFileVersion(InFileName)
         else
           returnS = fil:name
         end

         FREE(AllFiles)
     end

     returnS = clip(returnS)
     RETURN(returnS)

[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
GetFileName ROUTINE

    ILONG = LEN(CLIP(InFileName))
    jlong = 0

    LOOP jLONG = 1 TO ILONG
       CASE InFileName[jlong]
       OF '\' OROF '/' OROF ':'
          returnS = ''
       OF '.'
          BREAK
       ELSE
          returnS = returnS & InFileName[jlong]
       end
    end


GetPathName ROUTINE

    ILONG = LEN(CLIP(InFileName))
    jlong = 0

    LOOP jLONG = ILONG to 1 by -1
       CASE InFileName[jlong]
       OF '\' OROF '/' OROF ':'
          returnS = InFileName[1 : JLONG]
          BREAK
       end
    end

GetExtensionName    ROUTINE

    ILONG = LEN(CLIP(InFileName))
    jlong = 0

    LOOP jLONG = ILONG to 1 by -1
       CASE InFileName[jlong]
       OF '\' OROF '/'  OROF ':'
          BREAK
       OF '.'
          returnS = sub(InFileName,jlong+1,ILONG)
          BREAK
       end
    end

[END]
[END]
[PROCEDURE]
NAME SAA:GetFileVersion
PROTOTYPE '(STRING InFileName),STRING'
PARAMETERS '(STRING InFileName)'
NOEXPORT
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/09' '11:47:19'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
BuildVersion         STRING(32)

VS_FixedFileInfo    GROUP,TYPE
dwSignature             LONG
dwStructVersion         LONG
dwFileVersionMS         LONG
dwFileVersionLS         LONG
dwProductVersionMS      LONG
dwProductVersionLS      LONG
dwFileFlagsMask         LONG
dwFileFlags             LONG
dwFileOS                LONG
dwFileType              LONG
dwFileSubtype           LONG
dwFileDateMS            LONG
dwFileDateLS            LONG
                    End

szFilename              CSTRING(260),AUTO
lBufferSize             LONG,AUTO
dummy                   LONG
szRawVersionInfo        BYTE,DIM(8192)
szRawQueryInfo          BYTE,DIM(8192)
szSubBlock              CSTRING(50)
temp_ptr                LONG
Version_Info            LIKE(VS_FixedFileInfo)

MAJOR                   LONG
MINOR                   LONG
REVISION                LONG
BUILD                   LONG
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  IF EXISTS(InFileName)
        szFilename = InFileName
        lBufferSize = GetFileVersionInfoSize(ADDRESS(szFilename), ADDRESS(dummy))

        IF lBufferSize = 0
           BuildVersion = ''
        ELSIF GetFileVersionInfo(ADDRESS(szFilename), dummy, lBufferSize, ADDRESS(szRawVersionInfo)) = 0
           BuildVersion = ''
        ELSE
           szSubBlock = '\'

          ! set up our temporary pointer
          temp_ptr = ADDRESS(szRawQueryInfo)
          IF VerQueryValue(ADDRESS(szRawVersionInfo), ADDRESS(szSubBlock), ADDRESS(temp_ptr), ADDRESS(lBufferSize)) <> 0
              memcpy(ADDRESS(Version_Info), temp_ptr , lBufferSize)
              Minor = BAND(Version_Info:dwFileVersionMS,0FFFFH)
              Major = BSHIFT(Version_Info:dwFileVersionMS,-16)
              Revision = BAND(Version_Info:dwFileVersionLS,0FFFFH)
              Build = BSHIFT(Version_Info:dwFileVersionLS,-16)
              BuildVersion = Major & '.' & Minor & '.' & Build & '.' & Revision
          END
       END
    END

    return(BuildVersion)


[END]
[END]
[PROCEDURE]
NAME SA:ChangeColorTint
PROTOTYPE '(LONG InColor,STRING InChange),LONG'
PARAMETERS '(LONG InColor,STRING InChange)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/15' ' 8:55:23'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
clr LONG

clrgrp GROUP,OVER(CLR)
R BYTE
G BYTE
B BYTE
A BYTE
  END
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   CLR = InColor

   Case InChange
   of 'B'
      clrgrp.R = CHOOSE( clrgrp.R + 16 <= 255, clrgrp.R + 16, 255 )
      clrgrp.G = CHOOSE( clrgrp.G + 16 <= 255, clrgrp.G + 16, 255 )
      clrgrp.B = CHOOSE( clrgrp.B + 16 <= 255, clrgrp.B + 16, 255 )
   of 'L'
      clrgrp.R = CHOOSE( clrgrp.R - 16 >= 0, clrgrp.R - 16, 0 )
      clrgrp.G = CHOOSE( clrgrp.G - 16 >= 0, clrgrp.G - 16, 0 )
      clrgrp.B = CHOOSE( clrgrp.B - 16 >= 0, clrgrp.B - 16, 0 )
   END

   Return(CLR)
[END]
[END]
[PROCEDURE]
NAME SA:RGBtoDecimal
PROTOTYPE '(STRING InText),LONG'
PARAMETERS '(STRING InText)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/10' '17:53:47'
[DATA]
[SCREENCONTROLS]
! PROMPT('cs 64:'),USE(?cs64:Prompt)
! ENTRY(@s20),USE(cs64)
[REPORTCONTROLS]
! STRING(@s20),USE(cs64)
cs64                     CSTRING(21)
!!> GUID('5407ad23-63cc-46b7-ad81-4522d92d0f4b'),PROMPT('cs 64:'),HEADER('cs 64'),PICTURE(@s20),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('ilong:'),USE(?ilong:Prompt)
! ENTRY(@n-14),USE(ilong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ilong),RIGHT(1)
ilong                    LONG
!!> GUID('5bf1f2db-b4cf-47b8-97a4-d2627c9f94a2'),PROMPT('ilong:'),HEADER('ilong'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('jlong:'),USE(?jlong:Prompt)
! ENTRY(@n-14),USE(jlong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(jlong),RIGHT(1)
jlong                    LONG
!!> GUID('06128668-1a45-49f0-9729-f820545a5381'),PROMPT('jlong:'),HEADER('jlong'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END

    CS64 = sub(InText,5,2) & sub(InText,3,2) & sub(InText,1,2)

    LOOP iLONG = 1 TO LEN(CS64)
      jLONG = jLONG * 16 + INSTRING(CS64[iLONG],'0123456789ABCDEF',1,1)-1
    END

    return(jLONG)

[END]
[END]
[PROCEDURE]
NAME SA:GetOpSystem
PROTOTYPE '(<<BYTE ShowIfTS>),STRING'
PARAMETERS '(<<BYTE ShowIfTS>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/11' '10:28:21'
[DATA]
[SCREENCONTROLS]
! PROMPT('ilong:'),USE(?ilong:Prompt)
! ENTRY(@n-14),USE(ilong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ilong),RIGHT(1)
ilong                    LONG
!!> GUID('f4b8c2c1-3529-494b-b340-9fc746656bc7'),PROMPT('ilong:'),HEADER('ilong'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Out Text:'),USE(?OutText:Prompt)
! ENTRY(@s254),USE(OutText)
[REPORTCONTROLS]
! STRING(@s254),USE(OutText)
OutText                  CSTRING(255)
!!> GUID('654cc44a-d14a-4bad-af15-7cba12b3da6a'),PROMPT('Out Text:'),HEADER('Out Text'),PICTURE(@s254),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('cs 64:'),USE(?cs64:Prompt)
! ENTRY(@s64),USE(cs64)
[REPORTCONTROLS]
! STRING(@s64),USE(cs64)
cs64                     CSTRING(65)
!!> GUID('d8c92936-3de7-4872-a54f-4b876d633ccb'),PROMPT('cs 64:'),HEADER('cs 64'),PICTURE(@s64),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    OutText = GETREG(REG_LOCAL_MACHINE,'SOFTWARE\Microsoft\Windows NT\CurrentVersion','ProductName')
    if OutText
       cs64 = GETREG(REG_LOCAL_MACHINE,'SOFTWARE\Microsoft\Windows NT\CurrentVersion','EditionID')
       if cs64
          OutText = OutText & ' - ' & cs64
       end
       cs64 = GETREG(REG_LOCAL_MACHINE,'SOFTWARE\Microsoft\Windows NT\CurrentVersion','CurrentBuildNumber')
       if cs64
          OutText = OutText & ' (Build ' & cs64 & ')'
       else
          cs64 = GETREG(REG_LOCAL_MACHINE,'SOFTWARE\Microsoft\Windows NT\CurrentVersion','CurrentBuild')
          if cs64
             OutText = OutText & ' (Build ' & cs64 & ')'
          end
       end
       if ShowIfTS = True
          IF GetSystemMetrics(01000h) <> 0
             OutText = OutText & ' [Terminal Services]'
          end
       end
    else
       outText = system{PROP:WindowsVersion}
       iLong = instring('Bits',outtext,1,1)
       if iLong
          OutText = sub(outText,1,ilong-1) & 'Bit'
       end
    end

   return(OutText)
[END]
[END]
[PROCEDURE]
NAME SA:FixAsFileName
PROTOTYPE '(STRING InFileName),STRING'
PARAMETERS '(STRING InFileName)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/17' '10:06:35'
[DATA]
[SCREENCONTROLS]
! PROMPT('slen:'),USE(?slen:Prompt)
! ENTRY(@n-7),USE(slen),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(slen),RIGHT(1)
slen                     SHORT,AUTO
!!> GUID('9a56d95e-8eaa-4d01-8249-3590c3fff8c6'),PROMPT('slen:'),HEADER('slen'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i Short:'),USE(?iShort:Prompt)
! ENTRY(@n-7),USE(iShort),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(iShort),RIGHT(1)
iShort                   SHORT
!!> GUID('1acd7739-f48e-466f-b406-a6df2b1e6f6e'),PROMPT('i Short:'),HEADER('i Short'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Chr V:'),USE(?ChrV:Prompt)
! ENTRY(@n-7),USE(ChrV),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(ChrV),RIGHT(1)
ChrV                     SHORT
!!> GUID('3b5802c3-bae7-49d9-9c17-207b4034cc09'),PROMPT('Chr V:'),HEADER('Chr V'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Out Text:'),USE(?OutText:Prompt)
! ENTRY(@s255),USE(OutText)
[REPORTCONTROLS]
! STRING(@s255),USE(OutText)
OutText                  CSTRING(385)
!!> GUID('5169f346-d246-4de3-bb43-3d7160e932d8'),PROMPT('Out Text:'),HEADER('Out Text'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    slen = LEN(CLIP(InFileName))

    LOOP iShort = 1 to sLen
        ChrV = val(InFileName[iShort])
        case ChrV
        of 39
           OutText = OutText & ''       ! nothing
        of 33 to 38
        orof 42 to 44
        orof 46 to 47
        orof 58 to 64
        orof 91 to 96
        orof 123 to 126
           OutText = OutText & '_'
        else
           OutText = OutText & InFileName[iShort]
        end
     END

     RETURN(OutText)

[END]
[END]
[END]
[MODULE]
[COMMON]
FROM Clarion GENERATED
MODIFIED '2016/01/10' '13:40:03'
[DATA]
[SCREENCONTROLS]
! PROMPT('MOD : SAS tatic Picture:'),USE(?MOD:SAStaticPicture:Prompt)
! ENTRY(@s20),USE(MOD:SAStaticPicture)
[REPORTCONTROLS]
! STRING(@s20),USE(MOD:SAStaticPicture)
MOD:SAStaticPicture      CSTRING(21)
!!> GUID('3a95337e-50a2-4fd3-9868-a27781f78d5a'),PROMPT('MOD : SAS tatic Picture:'),HEADER('MOD : SAS tatic Picture'),PICTURE(@s20),TYPEMODE(INS)
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SA:ClipandJustify
PROTOTYPE '(STRING InText,<<STRING OptPicture>),STRING'
PARAMETERS '(STRING InText,<<STRING OptPicture>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '16:30:20'
[DATA]
[SCREENCONTROLS]
! PROMPT('Out Text:'),USE(?OutText:Prompt)
! ENTRY(@s255),USE(OutText)
[REPORTCONTROLS]
! STRING(@s255),USE(OutText)
OutText                  CSTRING(1025),AUTO
!!> GUID('2cb68645-e4b2-48db-8c11-8d6e4f66f338'),PROMPT('Out Text:'),HEADER('Out Text'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    if OptPicture
       OutText = FORMAT(InText,OptPicture)
    else
       OutText = FORMAT(InText,MOD:SAStaticPicture)
    end

    OutText = LEFT(OutText)
    OutText = CLIP(OutText)

    RETURN(OutText)

[END]
[END]
[PROCEDURE]
NAME SA:ClipAndJustifySet
PROTOTYPE '(STRING InPicture)'
PARAMETERS '(STRING InPicture)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/10' '13:42:17'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    MOD:SAStaticPicture = InPicture
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM Clarion GENERATED
MODIFIED '2016/01/10' '15:06:11'
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SA:DoesItContainAny
PROTOTYPE '(STRING InText,STRING ContainList,BYTE IsCaseSensitive),SHORT'
PARAMETERS '(STRING InText,STRING ContainList,BYTE IsCaseSensitive)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/10' '15:24:34'
[DATA]
[SCREENCONTROLS]
! PROMPT('Return Short:'),USE(?ReturnShort:Prompt)
! ENTRY(@n-7),USE(ReturnShort),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(ReturnShort),RIGHT(1)
ReturnShort              SHORT
!!> GUID('afc88eda-7a2f-4d00-a862-4415c2c386c4'),PROMPT('Return Short:'),HEADER('Return Short'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('CS 64:'),USE(?CS64:Prompt)
! ENTRY(@s64),USE(CS64)
[REPORTCONTROLS]
! STRING(@s64),USE(CS64)
CS64                     CSTRING(65)
!!> GUID('3087bfd3-492a-44cb-984c-8e59988ae479'),PROMPT('CS 64:'),HEADER('CS 64'),PICTURE(@s64),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('ilong:'),USE(?ilong:Prompt)
! ENTRY(@n-14),USE(ilong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ilong),RIGHT(1)
ilong                    LONG
!!> GUID('2c251c79-4c50-4ce6-b0ef-1657bc67a4c7'),PROMPT('ilong:'),HEADER('ilong'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Check Queue:'),USE(?CheckQueue:Prompt)
! ENTRY(@s20),USE(CheckQueue)
[REPORTCONTROLS]
! STRING(@s20),USE(CheckQueue)
CheckQueue               QUEUE,PRE(CQ)
!!> GUID('83cf78f7-91a8-464b-8682-7ef37b5b532b'),PROMPT('Check Queue:'),HEADER('Check Queue'),PICTURE(@s20),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('The Value:'),USE(?CQ:TheValue:Prompt)
! ENTRY(@s64),USE(CQ:TheValue)
[REPORTCONTROLS]
! STRING(@s64),USE(CQ:TheValue)
TheValue                   CSTRING(65)
!!> GUID('3cec40c0-ff37-476f-ba23-ba0224ffb264'),PROMPT('The Value:'),HEADER('The Value'),PICTURE(@s64),TYPEMODE(INS)
                         END
!!> GUID('e223f489-e25f-4823-9017-0c9c46157120')
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END

    LOOP iLONG = 1 TO LEN(ContainList)
       IF ContainList[iLONG] = '|'
          Do DoesItContainAdd
       ELSE
          CS64=CS64&ContainList[ILONG]
       END
    END
    Do DoesItContainAdd

    if IsCaseSensitive = False
       InText = UPPER(InText)
    end

    LOOP iLONG = 1 to RECORDS(CheckQueue)
       GET(CheckQueue,ilong)
       IF INSTRING(CQ:TheValue,InText,1,1)
          ReturnShort = iLong
          BREAK
       END
     END

     return(ReturnShort)

[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
DoesItContainAdd    ROUTINE

    if cs64
       IF IsCaseSensitive = False
          CQ:TheValue  = UPPER(CS64)
       else
          CQ:TheValue = CS64
       END
       ADD(CheckQueue)
       CS64=''
    end

[END]
[END]
[PROCEDURE]
NAME SA:DoesItContain
PROTOTYPE '(STRING InText,STRING DoesItHave,<<BYTE IsCaseSensitive>),BYTE'
PARAMETERS '(STRING InText,STRING DoesItHave,<<BYTE IsCaseSensitive>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '17:12:41'
[DATA]
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('b6c810be-3230-44a5-b8bc-ca6b1407618d'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 if IsCaseSensitive = True
    i = instring(DoesItHave,InText,1,1)
    if i > 0
       return(True)
    else
       Return(False)
    end
 ELSE
    i = instring(upper(DoesItHave),upper(InText),1,1)
    if i > 0
       return(True)
    else
       Return(False)
    end
 end


[END]
[END]
[PROCEDURE]
NAME SA:WildCardMatch
PROTOTYPE '(STRING InText,STRING InWC),BYTE'
PARAMETERS '(STRING InText,STRING InWC)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/06/22' ' 9:54:06'
[DATA]
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('b7b24210-d875-4be6-8989-4ae6850d639e'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('j:'),USE(?j:Prompt)
! ENTRY(@n-14),USE(j),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(j),RIGHT(1)
j                        LONG
!!> GUID('131ac58b-6b0a-43a5-ae82-27fb46e3c52c'),PROMPT('j:'),HEADER('j'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i L:'),USE(?iL:Prompt)
! ENTRY(@n-7),USE(iL),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(iL),RIGHT(1)
iL                       SHORT
!!> GUID('d9e7eb4a-abd3-468f-947a-a9f6a4048f66'),PROMPT('i L:'),HEADER('i L'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i R:'),USE(?iR:Prompt)
! ENTRY(@n-7),USE(iR),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(iR),RIGHT(1)
iR                       SHORT
!!> GUID('0c4b30a1-800b-4700-a756-e5e0743e8b41'),PROMPT('i R:'),HEADER('i R'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i All:'),USE(?iAll:Prompt)
! ENTRY(@n-7),USE(iAll),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(iAll),RIGHT(1)
iAll                     SHORT
!!> GUID('d743edcb-2d75-486f-9de3-c8819d1eff38'),PROMPT('i All:'),HEADER('i All'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Left Str:'),USE(?LeftStr:Prompt)
! ENTRY(@s255),USE(LeftStr)
[REPORTCONTROLS]
! STRING(@s255),USE(LeftStr)
LeftStr                  CSTRING(256)
!!> GUID('ea9c0614-70ce-4c44-b51d-8a4ea5af8729'),PROMPT('Left Str:'),HEADER('Left Str'),PICTURE(@s255),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Right Str:'),USE(?RightStr:Prompt)
! ENTRY(@s255),USE(RightStr)
[REPORTCONTROLS]
! STRING(@s255),USE(RightStr)
RightStr                 CSTRING(256)
!!> GUID('006add5b-3ca4-478a-8c02-04b402ffbba3'),PROMPT('Right Str:'),HEADER('Right Str'),PICTURE(@s255),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('w Left Str:'),USE(?wLeftStr:Prompt)
! ENTRY(@s254),USE(wLeftStr)
[REPORTCONTROLS]
! STRING(@s254),USE(wLeftStr)
wLeftStr                 CSTRING(255)
!!> GUID('8d2cb1b0-104c-4857-b77c-1fb89dc34234'),PROMPT('w Left Str:'),HEADER('w Left Str'),PICTURE(@s254),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('w Right Str:'),USE(?wRightStr:Prompt)
! ENTRY(@s254),USE(wRightStr)
[REPORTCONTROLS]
! STRING(@s254),USE(wRightStr)
wRightStr                CSTRING(255)
!!> GUID('48a6f489-a499-4e25-8437-57afbf7ee9c0'),PROMPT('w Right Str:'),HEADER('w Right Str'),PICTURE(@s254),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('L OK:'),USE(?L_OK:Prompt)
! ENTRY(@n3),USE(L_OK)
[REPORTCONTROLS]
! STRING(@n3),USE(L_OK)
L_OK                     BYTE
!!> GUID('951ae418-b9d5-4150-b94d-825f104a401e'),PROMPT('L OK:'),HEADER('L OK'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('R OK:'),USE(?R_OK:Prompt)
! ENTRY(@n3),USE(R_OK)
[REPORTCONTROLS]
! STRING(@n3),USE(R_OK)
R_OK                     BYTE
!!> GUID('249f3b5c-4fe1-4a4f-a4a3-027e55446946'),PROMPT('R OK:'),HEADER('R OK'),PICTURE(@n3),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END

    ! exact match
    I = instring('*',inWC,1,1)
    if I = 0
       if lower(InText) = lower(InWC)
          return(True)
       else
          Return(False)
       end
    end

    iAll = len(clip(InText))
    j = instring('.',InText,-1,iAll)
    if J
       leftStr = sub(InText,1,j-1)
       rightStr = sub(InText,j+1,255)
    else
      leftStr = InText
    end

    ! in text left and right
    leftStr = clip(leftStr)
    rightStr = clip(rightStr)
    leftstr = lower(leftstr)
    rightstr = lower(rightstr)
    il = len(leftStr)
    iR = len(RightStr)

    ! WC left and right
    iAll = len(clip(InWC))
    j = instring('.',InWC,-1,iAll)
    if J
       wleftStr = sub(InWC,1,j-1)
       wrightStr = sub(InWC,j+1,255)
    else
      wleftStr = InWC
    end
    wleftStr = lower(clip(wleftStr))
    wrightStr = lower(clip(wrightStr))

    if wleftstr = '*' and wRightStr = '*'
       return(True)
    end

    ! both have to be true
    if wleftstr = '*'
       l_ok = true
    end
    if wrightstr = '*'
       r_ok = True
    end

    if wrightstr = rightstr
       r_OK = true
    end

    if wleftstr = leftstr
       l_OK = true
    end

    if l_OK = true and r_OK = true
       return(True)
    end

    if len(wleftstr) > 1
       i = instring('*',wleftstr,1,1)
       if i
          i-=1
          if i > 0
             if sub(leftstr,1,i) = sub(wleftstr,1,i)
                l_OK = True
             end
          end
       end
    end

    if len(wRightstr) > 1
       i = instring('*',wRightstr,1,1)
       if i
          i-=1
          if i > 0
             if sub(RightStr,1,i) = sub(wRightstr,1,i)
                r_OK = True
             end
          end
       end
    end

    if l_OK = true and r_OK = true
       return(True)
    else
       return(False)
    end


[END]
[END]
[END]
[MODULE]
[COMMON]
FROM Clarion GENERATED
MODIFIED '2016/01/10' '18:58:51'
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SA:WriteToSysDebugger
PROTOTYPE '(STRING InText)'
PARAMETERS '(STRING InText)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/14' '13:46:51'
[DATA]
[SCREENCONTROLS]
! PROMPT('Out Text:'),USE(?OutText:Prompt)
! ENTRY(@s255),USE(OutText)
[REPORTCONTROLS]
! STRING(@s255),USE(OutText)
OutText                  CSTRING(1025)
!!> GUID('887dc19a-8720-4408-a662-b784df2d212d'),PROMPT('Out Text:'),HEADER('Out Text'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
      OutText = InText
      OutputDebugString(Address(OutText))


[END]
[END]
[END]
[MODULE]
[COMMON]
FROM Clarion GENERATED
MODIFIED '2016/01/10' '19:26:57'
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SA:GetCRC
PROTOTYPE '(STRING InText,BYTE InType,<<SHORT InStart>,<<SHORT InLength>),STRING'
PARAMETERS '(STRING InText,BYTE InType,<<SHORT InStart>,<<SHORT InLength>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/02/22' '17:12:54'
[DATA]
[SCREENCONTROLS]
! PROMPT('Out Text:'),USE(?OutText:Prompt)
! ENTRY(@s128),USE(OutText)
[REPORTCONTROLS]
! STRING(@s128),USE(OutText)
OutText                  CSTRING(129)
!!> GUID('03d68b9d-005a-4421-952b-5fe17f6af23e'),PROMPT('Out Text:'),HEADER('Out Text'),PICTURE(@s128),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('S 1:'),USE(?S1:Prompt)
! ENTRY(@n-7),USE(S1),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(S1),RIGHT(1)
S1                       SHORT
!!> GUID('6f031dad-a177-4d7f-9f71-67d839942fa2'),PROMPT('S 1:'),HEADER('S 1'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('S 2:'),USE(?S2:Prompt)
! ENTRY(@n-7),USE(S2),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(S2),RIGHT(1)
S2                       SHORT
!!> GUID('2ea835e9-5126-42c4-8b89-82239007ab63'),PROMPT('S 2:'),HEADER('S 2'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('slen:'),USE(?slen:Prompt)
! ENTRY(@n-7),USE(slen),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(slen),RIGHT(1)
slen                     SHORT
!!> GUID('c3f6a0e6-34c7-442d-b80e-56adec6620b5'),PROMPT('slen:'),HEADER('slen'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i Long:'),USE(?iLong:Prompt)
! ENTRY(@n-14),USE(iLong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(iLong),RIGHT(1)
iLong                    LONG
!!> GUID('0c204257-fc40-4953-bfe6-3b776aaef46d'),PROMPT('i Long:'),HEADER('i Long'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('j Long:'),USE(?jLong:Prompt)
! ENTRY(@n-14),USE(jLong),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(jLong),RIGHT(1)
jLong                    LONG
!!> GUID('fb63372a-79c2-44e7-9956-0607f2271c27'),PROMPT('j Long:'),HEADER('j Long'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    S1 = InStart
    S2 = InLength

    SLEN = LEN(CLIP(InText))

    ! SET BOUNDRIES
    ! -------------
    IF S1 < 1 THEN S1 = 1.
    IF S2 = 0 THEN S2 = LEN(INTEXT).

    CASE Intype
    OF 0
       Do CRCBXOR
       DO CRCToCCLow
    OF 1
       Do CRCBXOR
       if jLONG = 0
          OutText='NULL'
       else
          OutText = CHR(jLONG) ! null is sent as nothing
       end
    OF 2
       DO CRCALL
       DO CRCTOCCHigh
       DO CRCTOCCLow
    OF 3
       DO CRCALL
       OutText = jLONG
    END

    return(OutText)

CRCBXOR     ROUTINE

    LOOP iLONG = S1 TO S2
         if iLONG > sLen
            jLONG = BXOR(jLONG, VAL(' '))
         else
            jLONG = BXOR(jLONG, VAL(InText[iLONG]))
         end
    END

CRCALL      ROUTINE

    LOOP iLONG  = S1 TO S2
         if iLONG > sLen
            jLONG = jLONG + VAL(' ')
         else
            jLONG = jLONG + VAL(InText[iLONG])
         end
    END

CRCToCCHigh      ROUTINE

    iLong=jLONG / 4096
    Do DecToHexS
    jLONG=jLONG % 4096
    iLong=jLONG / 256
    Do DecToHexS
    jLONG=jLONG % 256


CRCToCCLow     ROUTINE

    iLONG=jLONG / 16
    Do DecToHexS
    iLONG=jLONG % 16
    Do DecToHexS

DecToHexS   ROUTINE

    OUTTEXT = OUTTEXT & SUB('0123456789ABCDEF',iLONG+1,1)
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM Clarion GENERATED
MODIFIED '2016/01/12' '10:52:29'
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SA:RangePicker
PROTOTYPE '(*LONG RetLowerDate,*LONG RetHigherDate, BYTE)'
PARAMETERS '(*LONG RetLowerDate,*LONG RetHigherDate,BYTE OnlyPast)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/12' '10:52:35'
[DATA]
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG
!!> GUID('94c8b4fc-ae6f-444e-97ac-93852fea887a'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('MM:'),USE(?MM:Prompt)
! ENTRY(@n-7),USE(MM),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(MM),RIGHT(1)
MM                       SHORT
!!> GUID('2c73e017-0871-4f47-8c8d-95c02180e96f'),PROMPT('MM:'),HEADER('MM'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('YY:'),USE(?YY:Prompt)
! ENTRY(@n-7),USE(YY),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(YY),RIGHT(1)
YY                       SHORT
!!> GUID('41a784dc-92e4-4762-8195-e5f447263c42'),PROMPT('YY:'),HEADER('YY'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('loc : lower Date:'),USE(?lowerDate:Prompt)
! ENTRY(@n-14),USE(lowerDate),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(lowerDate),RIGHT(1)
loc:lowerDate            LONG
!!> GUID('38bc14f1-2a9a-42f8-b0b1-dcf0a59c8ff6'),PROMPT('loc : lower Date:'),HEADER('loc : lower Date'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('loc : higher Date:'),USE(?higherDate:Prompt)
! ENTRY(@n-14),USE(higherDate),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(higherDate),RIGHT(1)
loc:higherDate           LONG
!!> GUID('b31e5b56-0a15-455c-901a-3aaaa1dbc4fc'),PROMPT('loc : higher Date:'),HEADER('loc : higher Date'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   if OnlyPast = True
      i = POPUP('Today|Yesterday|~Tomorrow|-|This Week|Last Week|~Next Week|-|This Month|Last Month|~Next Month|-|By Quarter{{This Quarter|Last Quarter}|-|By Year{{This Year|Last Year|~Next Year}|-|Year To Date')
   else
      i = POPUP('Today|Yesterday|Tomorrow|-|This Week|Last Week|Next Week|-|This Month|Last Month|Next Month|-|By Quarter{{This Quarter|Last Quarter}|-|By Year{{This Year|Last Year|Next Year}|-|Year To Date|Rest of Year|Next 365 days')
   end

   CASE I
   OF 1
      LOC:LowerDate = today()
      LOC:HigherDate = today()
   OF 2
      LOC:LowerDate = today() - 1
      LOC:HigherDate = today() - 1
   OF 3
      LOC:LowerDate = today() + 1
      LOC:HigherDate = today() + 1
   OF 4
      LOC:LowerDate = today() % 7
      LOC:LowerDate = TODAY() - LOC:LowerDate
      LOC:HigherDate = LOC:LowerDate + 6
   OF 5
      LOC:LowerDate = today() % 7
      LOC:LowerDate = TODAY() - LOC:LowerDate - 7
      LOC:HigherDate = LOC:LowerDate + 6
   OF 6
      LOC:LowerDate = today() % 7
      LOC:LowerDate = TODAY() - LOC:LowerDate + 7
      LOC:HigherDate = LOC:LowerDate + 6
   OF 7
      LOC:LowerDate   = DATE(MONTH(TODAY()),1,YEAR(TODAY()))
      LOC:HigherDate  = DATE(MONTH(TODAY())+1,1,YEAR(TODAY())) - 1
   OF 8
      MM = MONTH(TODAY())
      YY = YEAR(TODAY())
      LOC:HigherDate  = DATE(MM,1,YY) - 1

      MM-=1
      IF MM = 0
         MM = 12
         YY -=1
      END
      LOC:LowerDate   = DATE(MM,1,YY)
   OF 9
      LOC:LowerDate   = DATE(MONTH(TODAY())+1,1,YEAR(TODAY()))
      LOC:HigherDate  = DATE(MONTH(TODAY())+2,1,YEAR(TODAY())) - 1
   of 11
      mm = month(today())
      case mm
      of 1 orof 2 orof 3
         mm = 10
         loc:LowerDate = date(mm,1,year(today())-1)
         loc:higherDate = date(mm+2,SA:GetDaysInMonth(mm+2),year(today())-1)
      of 4 orof 5 orof 6
         mm = 1
         loc:LowerDate = date(mm,1,year(today()))
         loc:higherDate = date(mm+2,SA:GetDaysInMonth(mm+2),year(today()))
      of 7 orof 8 orof 9
         mm = 4
         loc:LowerDate = date(mm,1,year(today()))
         loc:higherDate = date(mm+2,SA:GetDaysInMonth(mm+2),year(today()))
      else
         mm = 7
         loc:LowerDate = date(mm,1,year(today()))
         loc:higherDate = date(mm+2,SA:GetDaysInMonth(mm+2),year(today()))
      end
   OF 10
      mm = month(today())
      case mm
      of 1 orof 2 orof 3
         mm = 1
      of 4 orof 5 orof 6
         mm = 4
      of 7 orof 8 orof 9
         mm = 7
      else
         mm = 10
      end
      loc:LowerDate = date(mm,1,year(today()))
      loc:higherDate = date(mm+2,SA:GetDaysInMonth(mm+2),year(today()))
   OF 12
      LOC:LowerDate   = DATE(1,1,YEAR(TODAY()))
      LOC:HigherDate  = DATE(12,31,YEAR(TODAY()))
   OF 13
      LOC:LowerDate   = DATE(1,1,YEAR(TODAY())-1)
      LOC:HigherDate  = DATE(12,31,YEAR(TODAY())-1)
   OF 14
      LOC:LowerDate   = DATE(1,1,YEAR(TODAY())+1)
      LOC:HigherDate  = DATE(12,31,YEAR(TODAY())+1)
   OF 15
      LOC:LowerDate   = DATE(1,1,YEAR(TODAY()))
      LOC:HigherDate  = TODAY()
   OF 16
      LOC:LowerDate   = TODAY()
      LOC:HigherDate  = DATE(12,31,YEAR(TODAY()))
   OF 17
      LOC:LowerDate   = TODAY()
      LOC:HigherDate  = DATE(MONTH(TODAY()),DAY(TODAY()),YEAR(TODAY())+1)
   else
      loc:lowerdate = today()
      loc:higherdate = today()
   end

   RetLowerDate = loc:LowerDate
   RetHigherDate = loc:HigherDate
   if OnlyPast = True
      if RetHigherDate >= Today()
         RetHigherDate = Today() - 1
      end
   end

[END]
[END]
[PROCEDURE]
NAME SA:CalendarPicker
PROTOTYPE '(LONG PassedDate,<<STRING PassedTitle>,<< BYTE ShowSmall>),LONG'
PARAMETERS '(LONG PassedDate,<<STRING PassedTitle>,<<BYTE ShowSmall>)'
[COMMON]
FROM Clarion Window
MODIFIED '2016/01/12' '14:39:05'
[DATA]
LocalRequest             LONG
!!> GUID('e6025d03-f8e1-413a-a681-97bcc860d218')
OriginalRequest          LONG
!!> GUID('086eda2d-c139-4618-8f8a-51e92cb0482f')
LocalResponse            LONG
!!> GUID('3b890ddd-285a-45a0-9e8e-289826628d0e')
FilesOpened              LONG
!!> GUID('98a629f6-10bf-428d-8bef-24c5ecd16e9b')
WindowOpened             LONG
!!> GUID('ef371ddb-ba4f-45fd-a7e9-ae8e45fd0484')
WindowInitialized        LONG
!!> GUID('21b5f29b-3d42-4e16-b1c2-93fc4f276cd5')
ForceRefresh             LONG
!!> GUID('ee7d3406-a945-48f8-90d6-2946612c2864')
[SCREENCONTROLS]
! ENTRY(@n-14),USE(the_date)
[REPORTCONTROLS]
! STRING(@n-14),USE(the_date)
the_date                 LONG
!!> GUID('16232ebf-bce4-44b9-8353-011562442fe4'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(the_month)
[REPORTCONTROLS]
! STRING(@n-7),USE(the_month)
the_month                SHORT
!!> GUID('b79e9a88-6005-42dc-a787-c80b1ca48576'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(the_day)
[REPORTCONTROLS]
! STRING(@n-7),USE(the_day)
the_day                  SHORT
!!> GUID('36c69634-6ba8-4514-bbe3-3cdda31d7a43'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(the_year)
[REPORTCONTROLS]
! STRING(@n-7),USE(the_year)
the_year                 SHORT
!!> GUID('9b65eecf-caa6-48c9-a0d2-f12002138578'),PICTURE(@n-7)
[SCREENCONTROLS]
! PROMPT('Next Day:'),USE(?NextDay:Prompt)
! ENTRY(@n-7),USE(NextDay),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(NextDay),RIGHT(1)
NextDay                  SHORT
!!> GUID('b1f4b1d3-9977-4213-bbcc-82c4bfc58f22'),PROMPT('Next Day:'),HEADER('Next Day'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i First Day:'),USE(?iFirstDay:Prompt)
! ENTRY(@s1),USE(iFirstDay),RIGHT(1)
[REPORTCONTROLS]
! STRING(@s1),USE(iFirstDay),RIGHT(1)
iFirstDay                STRING(1)
!!> GUID('c6731ce1-53cf-4991-941f-7a316354e5a0'),PROMPT('i First Day:'),HEADER('i First Day'),PICTURE(@s1),TYPEMODE(INS)
[SCREENCONTROLS]
! TEXT,USE(ThisMessage)
[REPORTCONTROLS]
! TEXT,USE(ThisMessage)
ThisMessage              STRING(2048)
!!> GUID('b98f2179-1152-45fd-9b50-0655ab6f14a5'),PROMPT('This Message:'),HEADER('This Message'),PICTURE(@s255)
[SCREENCONTROLS]
! TEXT,USE(LastMessage)
[REPORTCONTROLS]
! TEXT,USE(LastMessage)
LastMessage              STRING(2048)
!!> GUID('9c035af0-eea8-4eed-943b-412d4fb5edea'),PROMPT('Last Message:'),HEADER('Last Message'),PICTURE(@s255)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(base_col)
[REPORTCONTROLS]
! STRING(@n-7),USE(base_col)
base_col                 SHORT ! Column for first day of month, 0-based
!!> GUID('c58beb0a-e910-4229-a7b2-d8f897db6ec2'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(base_date)
[REPORTCONTROLS]
! STRING(@n-14),USE(base_date)
base_date                LONG ! Clarion date for first day in month
!!> GUID('c5871ef7-eb9d-448a-aeeb-6008b263b7bb'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(last_day)
[REPORTCONTROLS]
! STRING(@n-7),USE(last_day)
last_day                 SHORT ! Last day of month, in Clarion day format
!!> GUID('73e0acbb-66fa-4715-a600-702d58ba1543'),PICTURE(@n-7)
[SCREENCONTROLS]
! PROMPT('last day P:'),USE(?last_dayP:Prompt)
! ENTRY(@n-7),USE(last_dayP),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(last_dayP),RIGHT(1)
last_dayP                SHORT
!!> GUID('7f6dd39d-44f2-487f-8415-d3a5708e0085'),PROMPT('last day P:'),HEADER('last day P'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(loop_date)
[REPORTCONTROLS]
! STRING(@n-14),USE(loop_date)
loop_date                LONG
!!> GUID('a2ae7951-789e-422a-b8f2-8812bd7fe8dc'),PICTURE(@n-14)
[SCREENCONTROLS]
! PROMPT('GR Row:'),USE(?GR_Row:Prompt)
! ENTRY(@n-7),USE(GR_Row),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(GR_Row),RIGHT(1)
GR_Row                   SHORT
!!> GUID('daf21c65-8544-43a0-b4ab-a6b794dc7615'),PROMPT('GR Row:'),HEADER('GR Row'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('GR Col:'),USE(?GR_Col:Prompt)
! ENTRY(@n-7),USE(GR_Col),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(GR_Col),RIGHT(1)
GR_Col                   SHORT
!!> GUID('aa1edd19-1f14-444a-9ac8-1aa53d62ea5c'),PROMPT('GR Col:'),HEADER('GR Col'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(grid_start)
[REPORTCONTROLS]
! STRING(@n-14),USE(grid_start)
grid_start               LONG
!!> GUID('ef967430-9158-48d0-964d-e70ebeb9772d'),PICTURE(@n-14)
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n-14),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(I),RIGHT(1)
I                        LONG
!!> GUID('2e69d6e7-1ac8-41e8-9afb-d6b0641c7e46'),PROMPT('I:'),HEADER('I'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n-14),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(J),RIGHT(1)
J                        LONG
!!> GUID('43b16724-c7f1-4046-a309-2fce064a8fb2'),PROMPT('J:'),HEADER('J'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('X:'),USE(?X:Prompt)
! ENTRY(@n-7),USE(X),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(X),RIGHT(1)
X                        SHORT
!!> GUID('28ea06f3-87b5-45a3-8291-85a97b11c13a'),PROMPT('X:'),HEADER('X'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Y:'),USE(?Y:Prompt)
! ENTRY(@n-7),USE(Y),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(Y),RIGHT(1)
Y                        SHORT
!!> GUID('63fd4382-9850-4358-ba8b-fb114591dcf0'),PROMPT('Y:'),HEADER('Y'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(sunday_date)
[REPORTCONTROLS]
! STRING(@n-14),USE(sunday_date)
sunday_date              LONG
!!> GUID('9d26a82f-68de-4b47-9985-9d1047deae11'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(SelectedDay)
[REPORTCONTROLS]
! STRING(@n-14),USE(SelectedDay)
SelectedDay              LONG
!!> GUID('ecf36ebf-6e77-49ce-96a3-61b5f2df0ae7'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@s9),USE(SelectedMonth)
[REPORTCONTROLS]
! STRING(@s9),USE(SelectedMonth)
SelectedMonth            STRING(9)
!!> GUID('f069ab22-093c-4c88-b47d-40374d103205'),PICTURE(@s9)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(SelectedYear)
[REPORTCONTROLS]
! STRING(@n-14),USE(SelectedYear)
SelectedYear             LONG
!!> GUID('2aa9d0de-1107-4e62-901b-d49aeed7c838'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@s42),USE(QCal)
[REPORTCONTROLS]
! STRING(@s42),USE(QCal)
QCal                     QUEUE,PRE(Q)
!!> GUID('b38b3b29-d8ff-4595-babd-d35f941ad16a'),PICTURE(@s42)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(Q:Day1)
[REPORTCONTROLS]
! STRING(@n-7),USE(Q:Day1)
Day1                       SHORT
!!> GUID('13739700-5a92-4955-82d5-f443591b9062'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(Q:day1style)
[REPORTCONTROLS]
! STRING(@n-14),USE(Q:day1style)
day1style                  LONG
!!> GUID('e92853ae-348d-4249-93ca-942f88d69bd2'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(Q:Day2)
[REPORTCONTROLS]
! STRING(@n-7),USE(Q:Day2)
Day2                       SHORT
!!> GUID('1028ae34-ecf7-47fb-ae89-28499e9fe813'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(Q:day2style)
[REPORTCONTROLS]
! STRING(@n-14),USE(Q:day2style)
day2style                  LONG
!!> GUID('4e938467-5817-482c-b19d-494ecb420d78'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(Q:Day3)
[REPORTCONTROLS]
! STRING(@n-7),USE(Q:Day3)
Day3                       SHORT
!!> GUID('d5716185-10c0-45ae-b1b0-d4d4e99104e6'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(Q:day3style)
[REPORTCONTROLS]
! STRING(@n-14),USE(Q:day3style)
day3style                  LONG
!!> GUID('d6347440-69e6-4fbc-9eff-af96d1c82a9a'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(Q:Day4)
[REPORTCONTROLS]
! STRING(@n-7),USE(Q:Day4)
Day4                       SHORT
!!> GUID('ac36e2bd-c69a-4673-91d6-ab7ffc6d4566'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(Q:day4style)
[REPORTCONTROLS]
! STRING(@n-14),USE(Q:day4style)
day4style                  LONG
!!> GUID('7446f698-0f73-4d96-9ab9-e554bb145e22'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(Q:Day5)
[REPORTCONTROLS]
! STRING(@n-7),USE(Q:Day5)
Day5                       SHORT
!!> GUID('f820ce77-4aa9-4dda-b277-32b127cecad5'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(Q:day5style)
[REPORTCONTROLS]
! STRING(@n-14),USE(Q:day5style)
day5style                  LONG
!!> GUID('4ec386b8-12e0-4a92-99f6-6503df55b7cf'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(Q:Day6)
[REPORTCONTROLS]
! STRING(@n-7),USE(Q:Day6)
Day6                       SHORT
!!> GUID('bffaeea1-6686-45c9-a547-35080743c725'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(Q:day6style)
[REPORTCONTROLS]
! STRING(@n-14),USE(Q:day6style)
day6style                  LONG
!!> GUID('ba449e12-f5cd-4525-af2d-e5309a6dec5a'),PICTURE(@n-14)
[SCREENCONTROLS]
! ENTRY(@n-7),USE(Q:Day7)
[REPORTCONTROLS]
! STRING(@n-7),USE(Q:Day7)
Day7                       SHORT
!!> GUID('27f1d801-3bbc-4416-acd8-04a0bf72e5df'),PICTURE(@n-7)
[SCREENCONTROLS]
! ENTRY(@n-14),USE(Q:day7style)
[REPORTCONTROLS]
! STRING(@n-14),USE(Q:day7style)
day7style                  LONG
!!> GUID('2ae46b6a-dcda-4e6c-80f4-e5eba569d931'),PICTURE(@n-14)
                         END
!!> GUID('45aaa4cb-69da-4a79-b54b-a021d1214f88')
[SCREENCONTROLS]
! PROMPT('To Add:'),USE(?ToAdd:Prompt)
! ENTRY(@n3),USE(ToAdd)
[REPORTCONTROLS]
! STRING(@n3),USE(ToAdd)
ToAdd                    BYTE
!!> GUID('e6c8f7c0-d344-4489-aa2b-c0255978c017'),PROMPT('To Add:'),HEADER('To Add'),PICTURE(@n3)
[PROMPTS]
%ReturnValue FIELD  (the_date)
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (1)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ButtonAction DEPEND %Control DEFAULT TIMES 9
WHEN  ('') ('No Special Action')
WHEN  ('?AddMonth') ('No Special Action')
WHEN  ('?AddYear') ('No Special Action')
WHEN  ('?GotoToday') ('No Special Action')
WHEN  ('?List:Cal') ('No Special Action')
WHEN  ('?SelectedMonth') ('No Special Action')
WHEN  ('?SelectedYear') ('No Special Action')
WHEN  ('?SubMonth') ('No Special Action')
WHEN  ('?SubYear') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 2
WHEN  ('?AddMonth') ('')
WHEN  ('?SubMonth') ('')

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?AddMonth') ('')
WHEN  ('?SubMonth') ('')

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 2
WHEN  ('?AddMonth') ()
WHEN  ('?SubMonth') ()

%ButtonThread DEPEND %Control LONG TIMES 2
WHEN  ('?AddMonth') (0)
WHEN  ('?SubMonth') (0)

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 9
WHEN  ('') ('25000')
WHEN  ('?AddMonth') ('25000')
WHEN  ('?AddYear') ('25000')
WHEN  ('?GotoToday') ('25000')
WHEN  ('?List:Cal') ('25000')
WHEN  ('?SelectedMonth') ('25000')
WHEN  ('?SelectedYear') ('25000')
WHEN  ('?SubMonth') ('25000')
WHEN  ('?SubYear') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?AddMonth') ('')
WHEN  ('?SubMonth') ('')

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 2
WHEN  ('?AddMonth') ()
WHEN  ('?SubMonth') ()

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 2
WHEN  ('?AddMonth') (0)
WHEN  ('?SubMonth') (0)

%ButtonRequest DEPEND %Control DEFAULT TIMES 9
WHEN  ('') ('None')
WHEN  ('?AddMonth') ('None')
WHEN  ('?AddYear') ('None')
WHEN  ('?GotoToday') ('None')
WHEN  ('?List:Cal') ('None')
WHEN  ('?SelectedMonth') ('None')
WHEN  ('?SelectedYear') ('None')
WHEN  ('?SubMonth') ('None')
WHEN  ('?SubYear') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 2
WHEN  ('?AddMonth') ('')
WHEN  ('?SubMonth') ('')

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 2
WHEN  ('?AddMonth') ()
WHEN  ('?SubMonth') ()

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 1
WHEN  ('?SelectedYear') ()

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 1
WHEN  ('?SelectedYear') ()

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 1
WHEN  ('?SelectedYear') ('')

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 1
WHEN  ('?SelectedYear') ()

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 1
WHEN  ('?SelectedYear') ()

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 1
WHEN  ('?SelectedYear') ('')

%PostLookupDuringValidate DEPEND %Control LONG TIMES 7
WHEN  ('') (1)
WHEN  ('?AddMonth') (1)
WHEN  ('?AddYear') (1)
WHEN  ('?List:Cal') (1)
WHEN  ('?SelectedMonth') (1)
WHEN  ('?SelectedYear') (1)
WHEN  ('?SubMonth') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 7
WHEN  ('')TIMES 0
WHEN  ('?AddMonth')TIMES 0
WHEN  ('?AddYear')TIMES 0
WHEN  ('?List:Cal')TIMES 0
WHEN  ('?SelectedMonth')TIMES 0
WHEN  ('?SelectedYear')TIMES 0
WHEN  ('?SubMonth')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 7
WHEN  ('')TIMES 0
WHEN  ('?AddMonth')TIMES 0
WHEN  ('?AddYear')TIMES 0
WHEN  ('?List:Cal')TIMES 0
WHEN  ('?SelectedMonth')TIMES 0
WHEN  ('?SelectedYear')TIMES 0
WHEN  ('?SubMonth')TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (1)
%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabDisableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 6
WHEN  ('')TIMES 0
WHEN  ('?AddMonth')TIMES 0
WHEN  ('?AddYear')TIMES 0
WHEN  ('?List:Cal')TIMES 0
WHEN  ('?SelectedMonth')TIMES 0
WHEN  ('?SubMonth')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 6
WHEN  ('')TIMES 0
WHEN  ('?AddMonth')TIMES 0
WHEN  ('?AddYear')TIMES 0
WHEN  ('?List:Cal')TIMES 0
WHEN  ('?SelectedMonth')TIMES 0
WHEN  ('?SubMonth')TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 6
WHEN  ('') ('Default')
WHEN  ('?AddMonth') ('Default')
WHEN  ('?AddYear') ('Default')
WHEN  ('?List:Cal') ('Default')
WHEN  ('?SelectedMonth') ('Default')
WHEN  ('?SubMonth') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 3
WHEN  ('') ('Off')
WHEN  ('?AddYear') ('Off')
WHEN  ('?SubMonth') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 3
WHEN  ('') ('')
WHEN  ('?AddYear') ('')
WHEN  ('?SubMonth') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 3
WHEN  ('') (0)
WHEN  ('?AddYear') (0)
WHEN  ('?SubMonth') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 3
WHEN  ('') (-1)
WHEN  ('?AddYear') (-1)
WHEN  ('?SubMonth') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 3
WHEN  ('') (0)
WHEN  ('?AddYear') (0)
WHEN  ('?SubMonth') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 3
WHEN  ('') (-1)
WHEN  ('?AddYear') (-1)
WHEN  ('?SubMonth') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 3
WHEN  ('') (0)
WHEN  ('?AddYear') (0)
WHEN  ('?SubMonth') (0)

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('AIBtn0')

%AIEnableMimicControl DEPEND %Control LONG TIMES 1
WHEN  ('') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 1
WHEN  ('') ('?List:Cal')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 1
WHEN  ('') (0)

[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %AfterWindowOpening
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  DO InitValues
  if PassedTitle then Window{Prop:Text}=PassedTitle.
[END]
EMBED %PrepareAlerts
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  DO ShowMonth

[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
InitValues ROUTINE

  if ShowSmall = True
     ?SelectedMonth{prop:width} = 60
     ?SelectedYear{prop:at,1} = ?SelectedMonth{prop:at,1} + ?SelectedMonth{prop:width} + 2
     ?SubMonth{prop:at,1} = ?SelectedYear{prop:at,1} + ?SelectedYear{prop:width} + 2
     ?GotoToday{prop:at,1} = ?SubMonth{prop:at,1} + ?SubMonth{prop:width} + 2
     ?addMonth{prop:at,1} = ?GotoToday{prop:at,1} + ?GotoToday{prop:width} + 2
     SETPOSITION(?List:Cal,,,?addMonth{prop:at,1} + ?addMonth{prop:width} + 2,114)
     SETPOSITION(0,,,?List:Cal{prop:width} + 8,136)
     ?AddYear{prop:hide} = true
     ?SubYear{prop:hide} = true
     ?List:Cal{PROP:FONTSIZE} = 8
     ?List:Cal{prop:lineheight} = 16
     loop i = 1 to 7
       ?List:Cal{proplist:width,i} = 25
     end
  ELSE
     ?List:Cal{prop:lineheight} = 23
  end

  Do FixDayOfWeek

  IF PassedDate
    The_Date = PassedDate
  else
    the_date = TODAY()                                     !Set today's date
  END

  DO Month2Str

  SelectedYear = YEAR(the_date)

  IF iFirstDay = '0'                 !SwitchMon = True
     Sunday_Date = DATE(1,4,1993)    ! A known Monday
  else
     Sunday_Date = DATE(1,3,1993)    ! A known Sunday
  end


FixUpMonth ROUTINE

  ! -- Correct month underflow
  IF the_month < 1
    the_year -= 1
    the_month = 12
  END
  !-- Correct month overflow
  IF the_month > 12
    the_year += 1
    the_month = 1
  END
  !-- If the selected month has less days then
  !-- make it the first of the month
  last_day = DAY(DATE(the_month + 1, 1, the_year) -1) ! Last day of month
  IF the_day > last_day
    the_day = 1
  END

[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
ShowMonth ROUTINE

  if WindowInitialized
     FREE(QCal)
  end

  the_month = MONTH(the_date)
  the_day = DAY(the_date)
  the_year = YEAR(the_date)
  base_date = DATE(the_month, 1, the_year)              ! Clarion date for first day in month
  base_col = ABS((base_date - sunday_date) % 7)         ! Column for first day
  last_day = DAY(DATE(the_month + 1, 1, the_year) -1)  ! Last day of month
  last_dayP = day(date(the_month,1,the_year)-1)

  Do StartingWeek

  LOOP i = loop_date TO last_day BY 7
    Q:Day1 = i
    Q:Day2 = i + 1
    Q:Day3 = i + 2
    Q:Day4 = i + 3
    Q:Day5 = i + 4
    Q:Day6 = i + 5
    Q:Day7 = i + 6
    Do AddToCalendar
  END

  GET(QCal,RECORDS(QCal))

  !-- Clear trailing unused columns
  IF Q:Day1 > last_day THEN Q:Day1 = 0.
  IF Q:Day2 > last_day THEN Q:Day2 = 0.
  IF Q:Day3 > last_day THEN Q:Day3 = 0.
  IF Q:Day4 > last_day THEN Q:Day4 = 0.
  IF Q:Day5 > last_day THEN Q:Day5 = 0.
  IF Q:Day6 > last_day THEN Q:Day6 = 0.
  IF Q:Day7 > last_day THEN Q:Day7 = 0.
  PUT(QCal)

  Do SyncShoulders
  Do SyncCurrentSelection


SyncCurrentSelection    ROUTINE

  ?List:Cal{Prop:Selected} = GR_Row
  ?List:Cal{PROP:column} = GR_Col

PreviousYear ROUTINE
  the_year -= 1
  the_date = DATE(the_month, the_day, the_year)
  DO Month2Str
  DO ShowMonth
  DO RefreshWindow

PreviousMonth ROUTINE
  the_month -= 1
  DO FixUpMonth
  the_date = DATE(the_month, the_day, the_year)
  DO Month2Str
  DO ShowMonth
  DO RefreshWindow

NextMonth ROUTINE
  the_month += 1
  DO FixUpMonth
  the_date = DATE(the_month, the_day, the_year)
  DO Month2Str
  DO ShowMonth
  DO RefreshWindow

RealNextYear ROUTINE

  the_date = DATE(1,1,year(today()) + 1)
  Do ShowNow

RealThisYear ROUTINE

  the_date = DATE(1,1,year(today()) )
  Do ShowNow

RealNextYearB ROUTINE

  the_date = DATE(12,1,year(today()) + 1)
  Do ShowNow

RealThisYearB ROUTINE

  the_date = DATE(12,1,year(today()) )
  Do ShowNow

FindToday ROUTINE

  the_date = Today()
  Do ShowNow

ShowNow ROUTINE

  DO Month2Str
  DO ShowMonth
  DO RefreshWindow
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
StartingWeek   ROUTINE

  CLEAR(QCal)

  Grid_Start = base_Col + 1

  CASE base_col
  OF 6
    Q:Day7 = 1
    loop_date = 2
  OF 0
    Q:Day1 = 1
    Q:Day2 = 2
    Q:Day3 = 3
    Q:Day4 = 4
    Q:Day5 = 5
    Q:Day6 = 6
    Q:Day7 = 7
    loop_date = 8
  OF 1
    Q:Day2 = 1
    Q:Day3 = 2
    Q:Day4 = 3
    Q:Day5 = 4
    Q:Day6 = 5
    Q:Day7 = 6
    loop_date = 7
  OF 2
    Q:Day3 = 1
    Q:Day4 = 2
    Q:Day5 = 3
    Q:Day6 = 4
    Q:Day7 = 5
    loop_date = 6
  OF 3
    Q:Day4 = 1
    Q:Day5 = 2
    Q:Day6 = 3
    Q:Day7 = 4
    loop_date = 5
  OF 4
    Q:Day5 = 1
    Q:Day6 = 2
    Q:Day7 = 3
    loop_date = 4
  OF 5
    Q:Day6 = 1
    Q:Day7 = 2
    loop_date = 3
  END
  Do AddToCalendar


[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
AddToCalendar   ROUTINE

  ADD(QCal)

  CASE the_day
  of Q:Day1
     GR_Col = 1
     GR_Row = RECORDS(QCal)
  of Q:Day2
     GR_Col = 2
     GR_Row = RECORDS(QCal)
  of Q:Day3
     GR_Col = 3
     GR_Row = RECORDS(QCal)
  of Q:Day4
     GR_Col = 4
     GR_Row = RECORDS(QCal)
  of Q:Day5
     GR_Col = 5
     GR_Row = RECORDS(QCal)
  of Q:Day6
     GR_Col = 6
     GR_Row = RECORDS(QCal)
  of Q:Day7
     GR_Col = 7
     GR_Row = RECORDS(QCal)
  end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
GetTheDate ROUTINE

  x = choice(?List:cal)
  IF X = 0 THEN EXIT.

  GET(QCal,X)
  IF ~ERRORCODE()
     Y = ?List:Cal{PROP:column}
     EXECUTE Y
     SelectedDay = Q:Day1
     SelectedDay = Q:Day2
     SelectedDay = Q:Day3
     SelectedDay = Q:Day4
     SelectedDay = Q:Day5
     SelectedDay = Q:Day6
     SelectedDay = Q:Day7
     END
     IF SelectedDay > 0
        the_day = SelectedDay
     END
     if x = 1 and The_Day > 7
        if the_Month = 1
           the_date = DATE(12, the_day, the_year-1)              ! Set the the correct date
        else
           the_date = DATE(the_month-1, the_day, the_year)       ! Set the the correct date
        end
     elsif x > 3 and The_Day < 14
        the_date = DATE(the_month+1, the_day, the_year)          ! Set the the correct date
     else
        the_date = DATE(the_month, the_day, the_year)            ! Set the the correct date
     end
  END


Month2Str ROUTINE

 SelectedMonth = CHOOSE(Month(The_Date),'January','February','March','April','May','June','July','August','September','October','November','December')

Str2Month ROUTINE

  The_MONTH = choice(?SelectedMonth)

WrapItUp ROUTINE

  IF KEYCODE() = EscKey
     the_date = PassedDate
  end

FixDayOfWeek    ROUTINE

  iFirstDay = GETREG(REG_CURRENT_USER,'Control Panel\International','iFirstDayOfWeek')

  if iFirstDay = '0'
     ?list:Cal{PROPLIST:Header,1} = 'Mon'
     ?list:Cal{PROPLIST:Header,2} = 'Tue'
     ?list:Cal{PROPLIST:Header,3} = 'Wed'
     ?list:Cal{PROPLIST:Header,4} = 'Thu'
     ?list:Cal{PROPLIST:Header,5} = 'Fri'
     ?list:Cal{PROPLIST:Header,6} = 'Sat'
     ?list:Cal{PROPLIST:Header,7} = 'Sun'
  else
     ?list:Cal{PROPLIST:Header,1} = 'Sun'
     ?list:Cal{PROPLIST:Header,2} = 'Mon'
     ?list:Cal{PROPLIST:Header,3} = 'Tue'
     ?list:Cal{PROPLIST:Header,4} = 'Wed'
     ?list:Cal{PROPLIST:Header,5} = 'Thu'
     ?list:Cal{PROPLIST:Header,6} = 'Fri'
     ?list:Cal{PROPLIST:Header,7} = 'Sat'
  end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
SyncShoulders   ROUTINE

    NextDay = 0
    GET(QCal,1)
    if q:day1 = 0
       if Q:Day6=0
          Do SyncNextDay
          q:Day6 = NextDay;Q:day6style=4
       end
       if Q:Day5=0
          Do SyncNextDay
          q:Day5 = NextDay;Q:day5style=4
       end
       if Q:Day4=0
          Do SyncNextDay
          q:Day4 = NextDay;Q:day4style=4
       end
       if Q:Day3=0
          Do SyncNextDay
          q:Day3 = NextDay;Q:day3style=4
       end
       if Q:Day2=0
          Do SyncNextDay
          q:Day2 = NextDay;Q:day2style=4
       end
       if Q:Day1=0
          Do SyncNextDay
          q:Day1 = NextDay;Q:day1style=4
       end
       PUT(QCal)
    end

    NextDay = 0
    GET(QCal,records(QCal))
    if Q:Day2 = 0
       NextDay+=1;Q:Day2 = NextDay;Q:day2style=4.
    if Q:Day3 = 0
       NextDay+=1;Q:Day3 = NextDay;Q:day3style=4.
    if Q:Day4 = 0
       NextDay+=1;Q:Day4 = NextDay;Q:day4style=4.
    if Q:Day5 = 0
       NextDay+=1;Q:Day5 = NextDay;Q:day5style=4.
    if Q:Day6 = 0
       NextDay+=1;Q:Day6 = NextDay;Q:day6style=4.
    if Q:Day7 = 0
       NextDay+=1;Q:Day7 = NextDay;Q:day7style=4.
    PUT(QCal)

    IF RECORDS(QCAL) = 4
       NextDay+=1;Q:Day1 = NextDay;Q:day1style=4
       NextDay+=1;Q:Day2 = NextDay;Q:day2style=4
       NextDay+=1;Q:Day3 = NextDay;Q:day3style=4
       NextDay+=1;Q:Day4 = NextDay;Q:day4style=4
       NextDay+=1;Q:Day5 = NextDay;Q:day5style=4
       NextDay+=1;Q:Day6 = NextDay;Q:day6style=4
       NextDay+=1;Q:Day7 = NextDay;Q:day7style=4
       ADD(QCal)
    END

SyncNextDay ROUTINe

    IF NextDay = 0
       NextDay = last_dayP
    else
       NextDay-=1
    end
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
NextYear ROUTINE
  the_year += 1
  the_date = DATE(the_month,the_day, the_year)
  Do SetupYears

PrevYear ROUTINE
  the_year -= 1
  the_date = DATE(the_month,the_day, the_year)
  Do SetupYears

SetupYears  ROUTINE

  DO Month2Str
  DO ShowMonth
  DO RefreshWindow

[END]
EMBED %ControlPostEventHandling
[INSTANCES]
WHEN '?List:Cal'
[INSTANCES]
WHEN 'AlertKey'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    CASE KEYCODE()

    OF EnterKey OROF MouseLeft2
       LocalResponse = RequestCompleted
       Do ProcedureRETURN
    END
[END]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  Do GetTheDate
[END]
WHEN 'NewSelection'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    Do GetTheDate
[END]
[END]
WHEN '?SubMonth'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  Do PreviousMonth
[END]
[END]
WHEN '?AddMonth'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   Do NextMonth
[END]
[END]
[END]
EMBED %ControlPreEventHandling
[INSTANCES]
WHEN '?SelectedMonth'
[INSTANCES]
WHEN 'NewSelection'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
     DO Str2Month
     DO FixUpMonth
     the_date = DATE(the_month, the_day, the_year)
     DO ShowMonth
     DO RefreshWindow
[END]
[END]
WHEN '?SelectedYear'
[INSTANCES]
WHEN 'NewSelection'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   the_year = SelectedYear
   the_date = DATE(the_month, the_day, the_year)
   DO ShowMonth
   DO RefreshWindow
[END]
[END]
WHEN '?GotoToday'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   CASE POPUP('Goto Today<9>Ctrl+T|-|Beginning of Year|End of Year|Beginning Next Year|End of Next Year')
   OF 1
      Do FindToday
   OF 2
      Do RealThisYear
   OF 3
      Do RealThisYearB
   OF 4
      Do RealNextYear
   OF 5
      Do RealNextYearB
   end


[END]
[END]
WHEN '?SubYear'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 DO PrevYear
[END]
[END]
WHEN '?AddYear'
[INSTANCES]
WHEN 'Accepted'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 DO NextYear
[END]
[END]
[END]
EMBED %BeforeWindowClosing
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  DO WrapItUp
[END]
EMBED %RefreshWindowBeforeLookup
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
SelectedYear = the_year
[END]
EMBED %ListboxStyleBeforeDefine
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  ?list:cal{PROPSTYLE:FontStyle, 0}     = FONT:REGULAR
  ?list:cal{PROPSTYLE:FontColor, 0}     = COLOR:BLACK
  ?list:cal{PROPSTYLE:BackColor, 0}     = COLOR:NONE

  ?list:cal{PROPSTYLE:FontStyle, 1}     = FONT:BOLD
  ?list:cal{PROPSTYLE:FontColor, 1}     = COLOR:BLACK
  ?list:cal{PROPSTYLE:BackColor, 1}     = 00E6C09Ah

  ?list:cal{PROPSTYLE:FontStyle, 2}     = FONT:REGULAR
  ?list:cal{PROPSTYLE:FontColor, 2}     = COLOR:BLACK
  ?list:cal{PROPSTYLE:BackColor, 2}     = COLOR:NONE

  ?list:cal{PROPSTYLE:FontStyle, 3}     = FONT:BOLD
  ?list:cal{PROPSTYLE:FontColor, 3}     = COLOR:BLUE
  ?list:cal{PROPSTYLE:BackColor, 3}     = COLOR:NONE

  ?list:cal{PROPSTYLE:FontStyle, 4}     = FONT:THIN
  ?list:cal{PROPSTYLE:FontColor, 4}     = COLOR:SILVER
  ?list:cal{PROPSTYLE:BackColor, 4}     = COLOR:NONE


[END]
EMBED %WindowEventHandling
[INSTANCES]
WHEN 'AlertKey'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    IF KEYCODE() = CtrlT
       Do FindToday
    END
[END]
[END]
[END]
[WINDOW]
WINDOW  WINDOW('Calendar'),AT(,,279,189),FONT('Segoe UI',8,COLOR:Black,FONT:regular,CHARSET:ANSI), |
          DOUBLE,ALRT(CtrlT),CENTER,COLOR(00F5D8BBh),GRAY,SYSTEM
          LIST,AT(4,18,271,166),USE(?List:Cal),FONT(,10,00404040h,FONT:regular,CHARSET:ANSI), |
            ALRT(EnterKey),ALRT(MouseLeft2),COLOR(COLOR:White),GRID(00F5F5F5h),COLUMN,FORMAT('38C|_FY~Su' & |
            'n~@n2B@38C|_FY~Mon~@n2B@38C|_FY~Tue~@n2B@38C|_FY~Wed~@n2B@38C|_FY~Thu~@n2B' & |
            '@38C|_FY~Fri~@n2B@38C|_FY~Sat~@n2B@/'),FROM(QCal),#ORDINAL(1)
          LIST,AT(4,3,86,12),USE(SelectedMonth),FONT(,9,,,CHARSET:ANSI),LEFT(1),VSCROLL,COLOR(COLOR:White), |
            DROP(12),FORMAT('20L(1)'),FROM('January|February|March|April|May|June|July|' & |
            'August|September|October|November|December'),#ORDINAL(2)
          SPIN(@n4),AT(95,3,36,12),USE(SelectedYear),FONT(,9,,,CHARSET:ANSI),RIGHT(1),COLOR(COLOR:White), |
            RANGE(1801,2099),STEP(1),#ORDINAL(3)
          BUTTON,AT(161,1,25,14),USE(?SubMonth),KEY(PgUpKey),ICON('back1.ico'),FLAT,SKIP,TIP('Previous M' & |
            'onth (PgUp)'),#ORDINAL(4)
          BUTTON,AT(218,1,25,14),USE(?AddMonth),KEY(PgDnKey),ICON('next1.ico'),FLAT,SKIP,TIP('Next Month (PgDn)'), |
            #ORDINAL(5)
          BUTTON,AT(191,1,23,14),USE(?GotoToday),ICON('avail3.ico'),FLAT,SKIP,#ORDINAL(6)
          BUTTON,AT(131,1,25,14),USE(?SubYear),KEY(CtrlPgUp),ICON('back2.ico'),FLAT,SKIP,TIP('Previous Y' & |
            'ear (Ctrl+PgUp)'),#ORDINAL(7)
          BUTTON,AT(248,1,25,14),USE(?AddYear),KEY(CtrlPgDn),ICON('next2.ico'),FLAT,SKIP,TIP('Next Year ' & |
            '(Ctrl+PgDn)'),#ORDINAL(8)
        END

[PROCEDURE]
NAME SA:GetVideoSize
PROTOTYPE '(BYTE),LONG'
PARAMETERS '(BYTE InType)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/27' '18:20:34'
[DATA]
[SCREENCONTROLS]
! PROMPT('hpix:'),USE(?hpix:Prompt)
! ENTRY(@n-14),USE(hpix),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(hpix),RIGHT(1)
hpix                     LONG
!!> GUID('b28fb615-2b80-4471-b387-248439cf318f'),PROMPT('hpix:'),HEADER('hpix'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('vpix:'),USE(?vpix:Prompt)
! ENTRY(@n-14),USE(vpix),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(vpix),RIGHT(1)
vpix                     LONG
!!> GUID('f005df2c-c9e2-45dc-9fbb-19af26e3c6e8'),PROMPT('vpix:'),HEADER('vpix'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('ahpix:'),USE(?ahpix:Prompt)
! ENTRY(@n-14),USE(ahpix),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(ahpix),RIGHT(1)
ahpix                    LONG
!!> GUID('956d0f87-6e19-4962-8958-7722eb5c3395'),PROMPT('ahpix:'),HEADER('ahpix'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('result:'),USE(?result:Prompt)
! ENTRY(@n-14),USE(result),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(result),RIGHT(1)
result                   LONG
!!> GUID('15b6ae3d-120d-4867-9b8b-c5b3adebdf62'),PROMPT('result:'),HEADER('result'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('hwnd:'),USE(?hwnd:Prompt)
! ENTRY(@n13),USE(hwnd),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n13),USE(hwnd),RIGHT(1)
hwnd                     ULONG
!!> GUID('d7be001f-bc3c-43be-8c4b-f8cfc59017f4'),PROMPT('hwnd:'),HEADER('hwnd'),PICTURE(@n13),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('HDC:'),USE(?HDC:Prompt)
! ENTRY(@n13),USE(HDC),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n13),USE(HDC),RIGHT(1)
HDC                      ULONG
!!> GUID('a0dc36c2-72ec-4c4c-b63b-0af460ff2e15'),PROMPT('HDC:'),HEADER('HDC'),PICTURE(@n13),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
  hwnd=getdesktopwindow()
  hdc=getdc(hwnd)
  hpix=getdevicecaps(hdc,8)
  vpix=getdevicecaps(hdc,10)
  ahpix=getdevicecaps(hdc,88) + 5
  if ahpix = 99 or ahpix = 101 then ahpix = 100.
  result=releaseDC(hwnd,hdc)

  case inType
  of 1
     return(hpix)
  of 2
     return(vPix)
  of 3
     return(ahpix)
  else
     return(0)
  end
[END]
[END]
[PROCEDURE]
NAME SA:GetRandomString
PROTOTYPE '(SHORT InLen,BYTE InSpecial),STRING'
PARAMETERS '(SHORT InLen,BYTE InSpecial)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/08/18' '17:31:01'
[DATA]
[SCREENCONTROLS]
! PROMPT('Use Return:'),USE(?UseReturn:Prompt)
! ENTRY(@s254),USE(UseReturn)
[REPORTCONTROLS]
! STRING(@s254),USE(UseReturn)
UseReturn                CSTRING(255)
!!> GUID('df24c9f9-ce24-4b17-828f-3e9b49f5f935'),PROMPT('Use Return:'),HEADER('Use Return'),PICTURE(@s254),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-7),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(i),RIGHT(1)
i                        SHORT
!!> GUID('b35e95b2-4e81-4714-9d3b-ce6d30e3cd2e'),PROMPT('i:'),HEADER('i'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('j:'),USE(?j:Prompt)
! ENTRY(@n-7),USE(j),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(j),RIGHT(1)
j                        SHORT
!!> GUID('4b89806b-f2b9-42b7-9b1d-d0d6f63cc795'),PROMPT('j:'),HEADER('j'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('pass:'),USE(?pass:Prompt)
! ENTRY(@n3),USE(pass)
[REPORTCONTROLS]
! STRING(@n3),USE(pass)
pass                     BYTE
!!> GUID('67a6ffd1-c40c-4c05-ac1a-91a307f84f7c'),PROMPT('pass:'),HEADER('pass'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('JJ:'),USE(?JJ:Prompt)
! ENTRY(@s1),USE(JJ)
[REPORTCONTROLS]
! STRING(@s1),USE(JJ)
JJ                       STRING(1)
!!> GUID('7adfb398-2eb6-4c01-8df9-07d4a9071034'),PROMPT('JJ:'),HEADER('JJ'),PICTURE(@s1),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END

    loop i = 1 to InLen
       case InSpecial
       ! UPPER CASE LETTERS
       of 0
          j = random(65,90)
          jj = chr(j)
          UseReturn = UseReturn & jj
       ! UPPER AND LOWER CASE LETTERS
       of 1
          j = random(65,90)
          jj = chr(j)
          if random(1,20) % 2 = 0
             jj = lower(jj)
          end
          UseReturn = UseReturn & jj
       ! NUMBERS AND UPPER CASE LETTERS
       of 2
          LOOP
            j = random(48,90)
            IF J > 57 AND J < 65 THEN CYCLE.
            BREAK
          END
          jj = chr(j)
          UseReturn = UseReturn & jj
       ! NUMBERS AND UPPER AND LOWER CASE LETTERS
       of 3
          LOOP
            j = random(48,90)
            IF J > 57 AND J < 65 THEN CYCLE.
            if j = 34 then cycle.
            if j = 39 then cycle.
            if j = 60 then cycle.
            if j = 62 then cycle.
            BREAK
          END
          jj = chr(j)
          if random(1,20) % 2 = 0
             jj = lower(jj)
          end
          UseReturn = UseReturn & jj
       ! everything
       of 4
          pass+=1
          LOOP
            if pass % 2 = 0
               j = random(65,90)
            else
               j = random(33,90)
            end
            if j = 34 then cycle.
            if j = 39 then cycle.
            if j = 38 then cycle.
            if j = 43 then cycle.
            if j = 46 then cycle.
            if j = 47 then cycle.
            if j = 60 then cycle.
            if j = 62 then cycle.
            BREAK
          END
          jj = chr(j)
          if random(1,20) % 2 = 0
             jj = lower(jj)
          end
          UseReturn = UseReturn & jj
       end
     end

     RETURN(UseReturn)

[END]
[END]
[END]
[MODULE]
[COMMON]
FROM Clarion GENERATED
MODIFIED '2016/01/14' '20:16:51'
[DATA]
[SCREENCONTROLS]
! PROMPT('x MOD : Keep File Name:'),USE(?xMOD:KeepFileName:Prompt)
! ENTRY(@s255),USE(xMOD:KeepFileName)
[REPORTCONTROLS]
! STRING(@s255),USE(xMOD:KeepFileName)
xMOD:KeepFileName        STRING(384),THREAD
!!> GUID('987a0423-8339-4846-b160-c06849969468'),PROMPT('x MOD : Keep File Name:'),HEADER('x MOD : Keep File Name'),PICTURE(@s255),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('x MOD : In Append:'),USE(?xMOD:InAppend:Prompt)
! ENTRY(@n3),USE(xMOD:InAppend)
[REPORTCONTROLS]
! STRING(@n3),USE(xMOD:InAppend)
xMOD:InAppend            BYTE,THREAD
!!> GUID('a404af3e-84c0-4a93-9519-4917b81932a9'),PROMPT('x MOD : In Append:'),HEADER('x MOD : In Append'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('x MOD : In Type:'),USE(?xMOD:InType:Prompt)
! ENTRY(@n3),USE(xMOD:InType)
[REPORTCONTROLS]
! STRING(@n3),USE(xMOD:InType)
xMOD:InType              BYTE,AUTO
!!> GUID('195f657f-6e31-42f3-91f6-b4a69529d55a'),PROMPT('x MOD : In Type:'),HEADER('x MOD : In Type'),PICTURE(@n3),TYPEMODE(INS)
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SA:WriteToFile
PROTOTYPE '(STRING InFileName,STRING InText,<<BYTE AppendFile>,<<BYTE DateTime>)'
PARAMETERS '(STRING InFileName,STRING InText,<<BYTE AppendFile>,<<BYTE DateTime>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/07/02' ' 9:00:36'
[DATA]
[SCREENCONTROLS]
! PROMPT('Time String:'),USE(?TimeString:Prompt)
! ENTRY(@s32),USE(TimeString)
[REPORTCONTROLS]
! STRING(@s32),USE(TimeString)
TimeString               CSTRING(33),AUTO
!!> GUID('fb8df82a-7225-4276-897f-4fa0e08ceaa4'),PROMPT('Time String:'),HEADER('Time String'),PICTURE(@s32),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('u Append File:'),USE(?uAppendFile:Prompt)
! ENTRY(@n3),USE(uAppendFile)
[REPORTCONTROLS]
! STRING(@n3),USE(uAppendFile)
uAppendFile              BYTE,AUTO
!!> GUID('ac603e82-64d3-4a4b-9fd0-b105757fadc5'),PROMPT('u Append File:'),HEADER('u Append File'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('u Date Time:'),USE(?uDateTime:Prompt)
! ENTRY(@n3),USE(uDateTime)
[REPORTCONTROLS]
! STRING(@n3),USE(uDateTime)
uDateTime                BYTE,AUTO
!!> GUID('4dd4861a-ff57-4340-b21d-fdf2f451670d'),PROMPT('u Date Time:'),HEADER('u Date Time'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('LF ile:'),USE(?LFile:Prompt)
! ENTRY(@n3),USE(LFile)
[REPORTCONTROLS]
! STRING(@n3),USE(LFile)
LFile                    BYTE
!!> GUID('4bb50f77-9dc7-436a-ac07-da92c57a500a'),PROMPT('LF ile:'),HEADER('LF ile'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG,AUTO
!!> GUID('d9c07a09-0390-4a32-9686-23b5659c929a'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('s len:'),USE(?s_len:Prompt)
! ENTRY(@n-14),USE(s_len),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(s_len),RIGHT(1)
s_len                    LONG,AUTO
!!> GUID('21b33fc5-b939-4200-89e8-e7b2101d1992'),PROMPT('s len:'),HEADER('s len'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('s i:'),USE(?s_i:Prompt)
! ENTRY(@n-14),USE(s_i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(s_i),RIGHT(1)
s_i                      LONG,AUTO
!!> GUID('e8ecb646-e878-4b58-96f4-a8f9b30eefd8'),PROMPT('s i:'),HEADER('s i'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('s j:'),USE(?s_j:Prompt)
! ENTRY(@n-14),USE(s_j),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(s_j),RIGHT(1)
s_j                      LONG,AUTO
!!> GUID('298ee7c0-495e-4415-8f4f-3c1ae9650e43'),PROMPT('s j:'),HEADER('s j'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('s k:'),USE(?s_k:Prompt)
! ENTRY(@n-14),USE(s_k),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(s_k),RIGHT(1)
s_k                      LONG,AUTO
!!> GUID('88f1c1e7-0f3b-4e2f-a381-d14f3ca0a8b1'),PROMPT('s k:'),HEADER('s k'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('s kn:'),USE(?s_kn:Prompt)
! ENTRY(@n-14),USE(s_kn),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(s_kn),RIGHT(1)
s_kn                     LONG,AUTO
!!> GUID('fa3b513b-74cd-46ad-856f-23783bc3d71e'),PROMPT('s kn:'),HEADER('s kn'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   if InFileName
      glo:_XML_xmlfilename = InFileName
   else
      glo:_XML_xmlfilename = xMOD:KeepFileName
   end

   if DateTime = 255
      uDateTime = xMOD:InType
   else
      if omitted(4)
         UDateTime = 0
      else
         uDateTime = DateTime
      end
   end

   if AppendFile = 255
      uAppendFile = xMOD:InAppend
   else
      uAppendFile = AppendFile
   end

   if uAppendFile = True
      SHARE(XMLText)
      IF ERRORCODE() = 2
         CREATE(XMLText)
         OPEN(XMLText)
      END
   ELSE
      REMOVE(XMLText)
      CREATE(XMLText)
      OPEN(XMLText)
   end

   IF ~ERRORCODE()
       i = len(InText)

       if i > 65000
          i = 65000
          Lfile = True
       else
          if UDateTime <> 30 then I+=2.
       end

       case uDateTime
       of 0
           if lFile
              TXT:RECORD = InText[1 : 65000]
           else
              TXT:RECORD = InText & '<13><10>'
           end
       of 1
           if lFile
              TXT:RECORD = format(today(),@d01) & ' - ' & SA:TimeSinceNow(0,2) & '  ' & InText[1 : 65000]
           else
              TXT:RECORD = format(today(),@d01) & ' - ' & SA:TimeSinceNow(0,2) & '  ' & InText & '<13><10>'
           end
           I = I + 24
       of 2
           if Lfile = True
              TXT:RECORD = format(today(),@d01) & ' - ' & SA:TimeSinceNow(0,2) & '  ' & FORMAT(THREAD(),@N03) & '  ' & inText[1 : 65000]
           else
              TXT:RECORD = format(today(),@d01) & ' - ' & SA:TimeSinceNow(0,2) & '  ' & FORMAT(THREAD(),@N03) & '  ' & inText & '<13><10>'
           end
           I = I + 29
       of 11
           if lFile = True
              TXT:RECORD = format(today(),@d017) & ' - ' & SA:TimeSinceNow(0,2) & '  ' & InText[1 : 65000]
           else
              TXT:RECORD = format(today(),@d017) & ' - ' & SA:TimeSinceNow(0,2) & '  ' & InText & '<13><10>'
           end
           I = I + 24
       of 12
           if lFIle = True
              TXT:RECORD = format(today(),@d017) & ' - ' & SA:TimeSinceNow(0,2) & '  ' & FORMAT(THREAD(),@N03) & '  ' & inText[1 : 65000]
           else
              TXT:RECORD = format(today(),@d017) & ' - ' & SA:TimeSinceNow(0,2) & '  ' & FORMAT(THREAD(),@N03) & '  ' & inText & '<13><10>'
           end
           I = I + 29
       of 20
           s_len = Len(InText)
           LOOP s_i  = 1 TO s_len by 16
              I = 9
              txt:record = format(s_I,@n07) & ': '
              LOOP s_j = 0 TO 15
                 s_kn = s_I + s_j
                 s_k = val(intext[s_kn])

                 if s_j = 8
                    I+=1
                 end
                 TXT:RECORD = SUB(TXT:RECORD,1,I) & ' ' & format(s_K,@n03)
                 I+=4

                 if s_kn = s_len then break.
              END
              TXT:RECORD = SUB(TXT:RECORD,1,I) & '<13><10>'
              I+=2
              APPEND(xmlText,I)
           end
           I=0
       ELSE
           TXT:RECORD = InText
       end
       IF I > 0 THEN APPEND(XMLText,I).
       if lFile
          Do WriteRestOfFile
       end
       CLOSE(XMLTEXT)
    END


WriteRestOfFile ROUTINE

    i = len(InText)
    s_i = 65001
    s_k = False

    loop
       s_J = s_i + 32000
       if S_j > i
          S_j = I
          s_k = True
       end
       IF s_J < s_I then break.             ! safety
       TXT:RECORD = intext[s_i : s_J]
       s_len = s_j - s_i + 1
       APPEND(XMLText,s_len)
       if s_k = True
          if uDateTime <> 30
             TXT:RECORD = '<13><10>'
             APPEND(XMLText,2)
          end
          BREAK
       END
       s_i = s_i + 32000
    END


[END]
[END]
[PROCEDURE]
NAME SA:WriteToFileSetName
PROTOTYPE '(STRING InFileName,<<BYTE InAppend>,<<BYTE InType>)'
PARAMETERS '(STRING InFileName,<<BYTE InAppend>,<<BYTE InType>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/26' '18:24:35'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    xMOD:KeepFileName = InFileName
    xMOD:InAppend = InAppend
    xMOD:InType = InType
[END]
[END]
[PROCEDURE]
NAME SA:WriteLine
PROTOTYPE '(STRING InText)'
PARAMETERS '(STRING InText)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/01/14' '20:25:32'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   SA:WriteToFile('',InText,255,255)
[END]
[END]
[PROCEDURE]
NAME SA:WriteToFileA
PROTOTYPE '(STRING InFileName,*CSTRING InText,<<BYTE AppendFile>)'
PARAMETERS '(STRING InFileName,*CSTRING InText,<<BYTE AppendFile>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/07/02' ' 9:02:48'
[DATA]
[SCREENCONTROLS]
! PROMPT('u Append File:'),USE(?uAppendFile:Prompt)
! ENTRY(@n3),USE(uAppendFile)
[REPORTCONTROLS]
! STRING(@n3),USE(uAppendFile)
uAppendFile              BYTE,AUTO
!!> GUID('d8df7028-edb9-4b2c-9696-c317a08fb378'),PROMPT('u Append File:'),HEADER('u Append File'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Full Length:'),USE(?FullLength:Prompt)
! ENTRY(@n13),USE(FullLength),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n13),USE(FullLength),RIGHT(1)
FullLength               ULONG,AUTO
!!> GUID('07fc6610-a630-49d4-95fb-2cdd44ead3b9'),PROMPT('Full Length:'),HEADER('Full Length'),PICTURE(@n13),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('s len:'),USE(?s_len:Prompt)
! ENTRY(@n13),USE(s_len),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n13),USE(s_len),RIGHT(1)
s_len                    ULONG,AUTO
!!> GUID('47a34460-8b8a-4f7a-b5e0-384f801e00cc'),PROMPT('s len:'),HEADER('s len'),PICTURE(@n13),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('s i:'),USE(?s_i:Prompt)
! ENTRY(@n13),USE(s_i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n13),USE(s_i),RIGHT(1)
s_i                      ULONG,AUTO
!!> GUID('c9df926e-bf35-4dd6-be44-f19688f61570'),PROMPT('s i:'),HEADER('s i'),PICTURE(@n13),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('s j:'),USE(?s_j:Prompt)
! ENTRY(@n13),USE(s_j),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n13),USE(s_j),RIGHT(1)
s_j                      ULONG,AUTO
!!> GUID('e0c62442-a33d-4bbb-838f-789590960ba3'),PROMPT('s j:'),HEADER('s j'),PICTURE(@n13),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('s k:'),USE(?s_k:Prompt)
! ENTRY(@n3),USE(s_k),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n3),USE(s_k),RIGHT(1)
s_k                      BYTE,AUTO
!!> GUID('9387f7ee-fd9f-44f2-b7bb-20cc26eb7afa'),PROMPT('s k:'),HEADER('s k'),PICTURE(@n3),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   glo:_XML_xmlfilename = InFileName

   if AppendFile = True
      SHARE(XMLText)
      IF ERRORCODE() = 2
         CREATE(XMLText)
         OPEN(XMLText)
      END
   ELSE
      REMOVE(XMLText)
      CREATE(XMLText)
      OPEN(XMLText)
   end

   IF ~ERRORCODE()
       FullLength = len(InText)
       if FullLength > 65000
          TXT:RECORD = Intext[1 : 65000]
          APPEND(XMLText,65000)
          Do WriteRestOfFile
       elsif FullLength > 0
          TXT:RECORD = Intext[1 : FullLength]
          APPEND(XMLText,FullLength)
       END
       CLOSE(XMLTEXT)
    END


[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
WriteRestOfFile ROUTINE

    s_i = 65001
    s_k = False

    loop
       s_J = s_i + 32000
       if S_j > FullLength
          S_j = FullLength
          s_k = True                        ! end of file
       end
       IF s_J < s_I THEN BREAK.             ! safety
       TXT:RECORD = InText[s_i : s_J]
       s_len = s_j - s_i + 1
       APPEND(XMLText,s_len)
       if s_k = True THEN BREAK.
       s_i = s_i + S_Len
    END


[END]
[END]
[PROCEDURE]
NAME SA:ReadFromFile
PROTOTYPE '(STRING InFileName),STRING'
PARAMETERS '(STRING InFileName)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/08/24' ' 9:10:22'
[DATA]
[SCREENCONTROLS]
! PROMPT('I:'),USE(?I:Prompt)
! ENTRY(@n13),USE(I),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n13),USE(I),RIGHT(1)
I                        ULONG
!!> GUID('6d1a8029-2191-4dab-ab66-da370fbaaf2c'),PROMPT('I:'),HEADER('I'),PICTURE(@n13),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('J:'),USE(?J:Prompt)
! ENTRY(@n13),USE(J),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n13),USE(J),RIGHT(1)
J                        ULONG
!!> GUID('678a958a-3304-45a1-b797-c06cef4fd97a'),PROMPT('J:'),HEADER('J'),PICTURE(@n13),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Out String:'),USE(?OutString:Prompt)
! ENTRY(@s255),USE(OutString)
[REPORTCONTROLS]
! STRING(@s255),USE(OutString)
OutString                CSTRING(2048001)
!!> GUID('97472054-40c4-4197-93ed-45235de68eab'),PROMPT('Out String:'),HEADER('Out String'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    GLO:_XML_XMLFileName = InFileName

    SHARE(XMLText)
    IF ~ERRORCODE()
       SET(XMLText)
       LOOP
         NEXT(XMLText)
         IF ERRORCODE() THEN BREAK.
         I = BYTES(xmltext)
         IF I > 0
            if J = 0
               OutString = TXT:StandLine[1 : i]
            else
               OutString = OutString[1 : j] & TXT:StandLine[1 : i]
            end
            J = J + i
         END
       END
       CLOSE(XMLTEXT)
    END

    RETURN(OUTSTRING)

[END]
[END]
[PROCEDURE]
NAME SA:DoesFileContain
PROTOTYPE '(STRING InFileName,STRING InText),BYTE'
PARAMETERS '(STRING InFileName,STRING InText)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/08/12' '16:46:02'
[DATA]
[SCREENCONTROLS]
! PROMPT('K:'),USE(?K:Prompt)
! ENTRY(@n-7),USE(K),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-7),USE(K),RIGHT(1)
K                        SHORT
!!> GUID('c859f3ce-38b1-4db5-adf6-0dd9123cb14f'),PROMPT('K:'),HEADER('K'),PICTURE(@n-7),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('i:'),USE(?i:Prompt)
! ENTRY(@n-14),USE(i),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(i),RIGHT(1)
i                        LONG
!!> GUID('304fa440-9b96-4eaa-a1fb-29832f8fad04'),PROMPT('i:'),HEADER('i'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('j:'),USE(?j:Prompt)
! ENTRY(@n-14),USE(j),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(j),RIGHT(1)
j                        LONG
!!> GUID('cb27b78c-4343-4244-8e04-021eb8f3b1c5'),PROMPT('j:'),HEADER('j'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Return Value:'),USE(?ReturnValue:Prompt)
! ENTRY(@n3),USE(ReturnValue)
[REPORTCONTROLS]
! STRING(@n3),USE(ReturnValue)
ReturnValue              BYTE
!!> GUID('448250f6-26c0-4b62-920c-5c217ea60dbb'),PROMPT('Return Value:'),HEADER('Return Value'),PICTURE(@n3),TYPEMODE(INS)
[SCREENCONTROLS]
! PROMPT('Use Text:'),USE(?UseText:Prompt)
! ENTRY(@s254),USE(UseText)
[REPORTCONTROLS]
! STRING(@s254),USE(UseText)
UseText                  CSTRING(255)
!!> GUID('e469c3ff-c13f-4602-a94d-e1d1427828f7'),PROMPT('Use Text:'),HEADER('Use Text'),PICTURE(@s254),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    GLO:_XML_XMLFileName = InFileName

    k = len(InText)

    SHARE(XMLText)
    IF ~ERRORCODE()
       SET(XMLText)
       LOOP
         NEXT(XMLText)
         IF ERRORCODE() THEN BREAK.
         I = BYTES(xmltext)
         if I > 0
            if instring(InText,UseText & TXT:StandLine[1 : i],1,1)
                ReturnValue = True
                BREAK
             END
             if i > 255
                j = i - 254
                UseText = txt:standline[j : i]
             else
                UseText = txt:standline[1 : i]
             end
          END
       END
       CLOSE(XMLTEXT)
    ELSE
       ReturnValue = 3      ! FILE NOT FOUND
    END

    RETURN(ReturnValue)



[END]
[END]
[END]
[MODULE]
[COMMON]
FROM Clarion GENERATED
MODIFIED '2016/01/12' '23:14:53'
[EMBED]
EMBED %StartOfModule
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
[END]
[PROCEDURE]
NAME SA:AppendCharacter
PROTOTYPE '(STRING InText,STRING InCharacter),STRING'
PARAMETERS '(STRING InText,STRING InCharacter)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/05/05' '13:23:06'
[DATA]
[SCREENCONTROLS]
! PROMPT('i LONG:'),USE(?iLONG:Prompt)
! ENTRY(@n-14),USE(iLONG),RIGHT(1)
[REPORTCONTROLS]
! STRING(@n-14),USE(iLONG),RIGHT(1)
iLONG                    LONG,AUTO
!!> GUID('8ec83081-56d0-489e-97ff-2e14b0fc9191'),PROMPT('i LONG:'),HEADER('i LONG'),PICTURE(@n-14),TYPEMODE(INS),JUSTIFY(RIGHT,1)
[SCREENCONTROLS]
! PROMPT('Out Text:'),USE(?OutText:Prompt)
! ENTRY(@s255),USE(OutText)
[REPORTCONTROLS]
! STRING(@s255),USE(OutText)
OutText                  CSTRING(1025)
!!> GUID('aa1877a5-ec79-40c2-a3e3-a3571c90e395'),PROMPT('Out Text:'),HEADER('Out Text'),PICTURE(@s255),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
 iLONG = LEN(CLIP(INTEXT))
 if iLONG
    IF INTEXT[ILONG] = InCharacter
       OutText = CLIP(INTEXT)
    ELSE
       OutText = CLIP(INTEXT) & InCharacter
    END
 else
    OutText = CLIP(InText)
 END
 RETURN(OutText)

[END]
[END]
[PROCEDURE]
NAME SA:FormatFileSize
PROTOTYPE '(STRING FileSize,<<STRING OpText>),STRING'
PARAMETERS '(STRING FileSize,<<STRING OpText>)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/06/22' '15:33:06'
[DATA]
[SCREENCONTROLS]
! PROMPT('i DEC:'),USE(?iDEC:Prompt)
! ENTRY(@n-24.1),USE(iDEC),DECIMAL(12)
[REPORTCONTROLS]
! STRING(@n-24.1),USE(iDEC),DECIMAL(12)
iDEC                     DECIMAL(17,1),AUTO
!!> GUID('7567be87-f3a0-4092-a350-eab5afb3d621'),PROMPT('i DEC:'),HEADER('i DEC'),PICTURE(@n-24.1),TYPEMODE(INS),JUSTIFY(DECIMAL,12)
[SCREENCONTROLS]
! PROMPT('return S:'),USE(?returnS:Prompt)
! ENTRY(@s32),USE(returnS)
[REPORTCONTROLS]
! STRING(@s32),USE(returnS)
returnS                  CSTRING(33)
!!> GUID('d131e646-380e-43bf-b407-a7bc418153b3'),PROMPT('return S:'),HEADER('return S'),PICTURE(@s32),TYPEMODE(INS)
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
    iDEC = CLIP(LEFT(FileSize))

    if iDEC > 1000000000
       iDEC = iDEC / 1073741824
       returnS = clip(left(format(IDEC,@n14.1))) & ' GB'
    elsif iDEC > 1000000
       iDEC = iDEC / 1048576
       returnS = clip(left(format(iDEC,@n14.1))) & ' MB'
    elsif iDEC > 204800
       iDEC = iDEC / 1024
       returnS = clip(left(format(iDEC,@n14.1))) & ' K'
    else
       returnS=clip(left(format(iDEC,@n14))) & ' bytes'
    end

    if OpText > ''
       returnS = returnS & opText
    end

    return(ReturnS)

[END]
[END]
[PROCEDURE]
NAME SA:SeparateWith
PROTOTYPE '(STRING,STRING,STRING),STRING'
PARAMETERS '(STRING p1,STRING p2,STRING p3)'
[COMMON]
FROM Clarion Source
MODIFIED '2016/05/05' '13:25:08'
[PROMPTS]
%GenerateOpenClose LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 50
PROPERTY:END
!region Notices
! ================================================================================
! Notice : Copyright (C) 2017, Paresi
!          Distributed under LGPLv3 (http://www.gnu.org/licenses/lgpl.html)
!
!    This file is part of Devuna-IQXML (https://github.com/Devuna/Devuna-IQXML)
!
!    Devuna-IQXML is free software: you can redistribute it and/or modify
!    it under the terms of the GNU General Public License as published by
!    the Free Software Foundation, either version 3 of the License, or
!    (at your option) any later version.
!
!    Devuna-IQXML is distributed in the hope that it will be useful,
!    but WITHOUT ANY WARRANTY; without even the implied warranty of
!    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!    GNU General Public License for more details.
!
!    You should have received a copy of the GNU General Public License
!    along with Devuna-IQXML.  If not, see <http://www.gnu.org/licenses/>.
! ================================================================================
!endregion Notices
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
   if p1
      return(clip(p1) & p3 & clip(p2))
   else
      return(clip(p2))
   end
[END]
[END]
[END]
